ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Com_Block.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	Com_Block_initVar
  18              		.bss
  19              		.type	Com_Block_initVar, %object
  20              		.size	Com_Block_initVar, 1
  21              	Com_Block_initVar:
  22 0000 00       		.space	1
  23              		.comm	Com_Block_swStatusTx,1,1
  24              		.comm	Com_Block_swStatusRx,1,1
  25              		.section	.text.Com_Block_Init,"ax",%progbits
  26              		.align	2
  27              		.global	Com_Block_Init
  28              		.code	16
  29              		.thumb_func
  30              		.type	Com_Block_Init, %function
  31              	Com_Block_Init:
  32              	.LFB0:
  33              		.file 1 ".\\Generated_Source\\PSoC4\\Com_Block.c"
   1:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/Com_Block.c **** * File Name: Com_Block.c
   3:.\Generated_Source\PSoC4/Com_Block.c **** * Version 2.60
   4:.\Generated_Source\PSoC4/Com_Block.c **** *
   5:.\Generated_Source\PSoC4/Com_Block.c **** * Description:
   6:.\Generated_Source\PSoC4/Com_Block.c **** *  This file provides all API functionality of the SPI Slave component.
   7:.\Generated_Source\PSoC4/Com_Block.c **** *
   8:.\Generated_Source\PSoC4/Com_Block.c **** * Note:
   9:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
  10:.\Generated_Source\PSoC4/Com_Block.c **** *
  11:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/Com_Block.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/Com_Block.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/Com_Block.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/Com_Block.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/Com_Block.c **** 
  18:.\Generated_Source\PSoC4/Com_Block.c **** #include "Com_Block_PVT.h"
  19:.\Generated_Source\PSoC4/Com_Block.c **** 
  20:.\Generated_Source\PSoC4/Com_Block.c **** #if (Com_Block_TX_SOFTWARE_BUF_ENABLED)
  21:.\Generated_Source\PSoC4/Com_Block.c **** 
  22:.\Generated_Source\PSoC4/Com_Block.c ****     volatile uint16 Com_Block_txBuffer[Com_Block_TX_BUFFER_SIZE] = {0u};
  23:.\Generated_Source\PSoC4/Com_Block.c ****     volatile uint8 Com_Block_txBufferRead;
  24:.\Generated_Source\PSoC4/Com_Block.c ****     volatile uint8 Com_Block_txBufferWrite;
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 2


  25:.\Generated_Source\PSoC4/Com_Block.c ****     volatile uint8 Com_Block_txBufferFull;
  26:.\Generated_Source\PSoC4/Com_Block.c **** 
  27:.\Generated_Source\PSoC4/Com_Block.c **** #endif /* Com_Block_TX_SOFTWARE_BUF_ENABLED*/
  28:.\Generated_Source\PSoC4/Com_Block.c **** 
  29:.\Generated_Source\PSoC4/Com_Block.c **** #if (Com_Block_RX_SOFTWARE_BUF_ENABLED)
  30:.\Generated_Source\PSoC4/Com_Block.c **** 
  31:.\Generated_Source\PSoC4/Com_Block.c ****     volatile uint16 Com_Block_rxBuffer[Com_Block_RX_BUFFER_SIZE] = {0u};
  32:.\Generated_Source\PSoC4/Com_Block.c ****     volatile uint8 Com_Block_rxBufferRead;
  33:.\Generated_Source\PSoC4/Com_Block.c ****     volatile uint8 Com_Block_rxBufferWrite;
  34:.\Generated_Source\PSoC4/Com_Block.c ****     volatile uint8 Com_Block_rxBufferFull;
  35:.\Generated_Source\PSoC4/Com_Block.c **** 
  36:.\Generated_Source\PSoC4/Com_Block.c **** #endif /* Com_Block_RX_SOFTWARE_BUF_ENABLED */
  37:.\Generated_Source\PSoC4/Com_Block.c **** 
  38:.\Generated_Source\PSoC4/Com_Block.c **** uint8 Com_Block_initVar = 0u;
  39:.\Generated_Source\PSoC4/Com_Block.c **** 
  40:.\Generated_Source\PSoC4/Com_Block.c **** volatile uint8 Com_Block_swStatusTx;
  41:.\Generated_Source\PSoC4/Com_Block.c **** volatile uint8 Com_Block_swStatusRx;
  42:.\Generated_Source\PSoC4/Com_Block.c **** 
  43:.\Generated_Source\PSoC4/Com_Block.c **** 
  44:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
  45:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_Init
  46:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
  47:.\Generated_Source\PSoC4/Com_Block.c **** *
  48:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
  49:.\Generated_Source\PSoC4/Com_Block.c **** *  Inits/Restores default SPIS configuration provided with customizer.
  50:.\Generated_Source\PSoC4/Com_Block.c **** *
  51:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
  52:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
  53:.\Generated_Source\PSoC4/Com_Block.c **** *
  54:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
  55:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
  56:.\Generated_Source\PSoC4/Com_Block.c **** *
  57:.\Generated_Source\PSoC4/Com_Block.c **** * Side Effects:
  58:.\Generated_Source\PSoC4/Com_Block.c **** *  When this function is called it initializes all of the necessary parameters
  59:.\Generated_Source\PSoC4/Com_Block.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  60:.\Generated_Source\PSoC4/Com_Block.c **** *  interrupt service routine, configuring the bit-counter parameters and
  61:.\Generated_Source\PSoC4/Com_Block.c **** *  clearing the FIFO and Status Register.
  62:.\Generated_Source\PSoC4/Com_Block.c **** *
  63:.\Generated_Source\PSoC4/Com_Block.c **** * Reentrant:
  64:.\Generated_Source\PSoC4/Com_Block.c **** *  No.
  65:.\Generated_Source\PSoC4/Com_Block.c **** *
  66:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
  67:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_Init(void) 
  68:.\Generated_Source\PSoC4/Com_Block.c **** {
  34              		.loc 1 68 0
  35              		.cfi_startproc
  36 0000 80B5     		push	{r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              	.LCFI1:
  43              		.cfi_def_cfa_register 7
  69:.\Generated_Source\PSoC4/Com_Block.c ****     /*Initialize the Bit counter */
  70:.\Generated_Source\PSoC4/Com_Block.c ****     Com_Block_COUNTER_PERIOD_REG = Com_Block_BITCTR_INIT;
  44              		.loc 1 70 0
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 3


  45 0004 084B     		ldr	r3, .L2
  46 0006 0F22     		mov	r2, #15
  47 0008 1A70     		strb	r2, [r3]
  71:.\Generated_Source\PSoC4/Com_Block.c **** 
  72:.\Generated_Source\PSoC4/Com_Block.c ****     /* ISR initialization */
  73:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_INTERNAL_TX_INT_ENABLED)
  74:.\Generated_Source\PSoC4/Com_Block.c **** 
  75:.\Generated_Source\PSoC4/Com_Block.c ****         CyIntDisable(Com_Block_TX_ISR_NUMBER);
  76:.\Generated_Source\PSoC4/Com_Block.c **** 
  77:.\Generated_Source\PSoC4/Com_Block.c ****         /* Set the ISR to point to the Com_Block_isr Interrupt. */
  78:.\Generated_Source\PSoC4/Com_Block.c ****         (void)CyIntSetVector(Com_Block_TX_ISR_NUMBER, &Com_Block_TX_ISR);
  79:.\Generated_Source\PSoC4/Com_Block.c **** 
  80:.\Generated_Source\PSoC4/Com_Block.c ****         /* Set the priority. */
  81:.\Generated_Source\PSoC4/Com_Block.c ****         CyIntSetPriority(Com_Block_TX_ISR_NUMBER, Com_Block_TX_ISR_PRIORITY);
  82:.\Generated_Source\PSoC4/Com_Block.c **** 
  83:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_INTERNAL_TX_INT_ENABLED */
  84:.\Generated_Source\PSoC4/Com_Block.c **** 
  85:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_INTERNAL_RX_INT_ENABLED)
  86:.\Generated_Source\PSoC4/Com_Block.c **** 
  87:.\Generated_Source\PSoC4/Com_Block.c ****         CyIntDisable(Com_Block_RX_ISR_NUMBER);
  88:.\Generated_Source\PSoC4/Com_Block.c **** 
  89:.\Generated_Source\PSoC4/Com_Block.c ****         /* Set the ISR to point to the Com_Block_isr Interrupt. */
  90:.\Generated_Source\PSoC4/Com_Block.c ****         (void)CyIntSetVector(Com_Block_RX_ISR_NUMBER, &Com_Block_RX_ISR);
  91:.\Generated_Source\PSoC4/Com_Block.c **** 
  92:.\Generated_Source\PSoC4/Com_Block.c ****         /* Set the priority. */
  93:.\Generated_Source\PSoC4/Com_Block.c ****         CyIntSetPriority(Com_Block_RX_ISR_NUMBER, Com_Block_RX_ISR_PRIORITY);
  94:.\Generated_Source\PSoC4/Com_Block.c **** 
  95:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_INTERNAL_RX_INT_ENABLED */
  96:.\Generated_Source\PSoC4/Com_Block.c **** 
  97:.\Generated_Source\PSoC4/Com_Block.c ****     /* Clear any stray data from the RX and TX FIFO */
  98:.\Generated_Source\PSoC4/Com_Block.c ****     Com_Block_ClearFIFO();
  48              		.loc 1 98 0
  49 000a FFF7FEFF 		bl	Com_Block_ClearFIFO
  99:.\Generated_Source\PSoC4/Com_Block.c **** 
 100:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_RX_SOFTWARE_BUF_ENABLED)
 101:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_txBufferFull = 0u;
 102:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_rxBufferRead = 0u;
 103:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_rxBufferWrite = 0u;
 104:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_RX_SOFTWARE_BUF_ENABLED */
 105:.\Generated_Source\PSoC4/Com_Block.c **** 
 106:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_TX_SOFTWARE_BUF_ENABLED)
 107:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_txBufferFull = 0u;
 108:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_txBufferRead = 0u;
 109:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_txBufferWrite = 0u;
 110:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_TX_SOFTWARE_BUF_ENABLED */
 111:.\Generated_Source\PSoC4/Com_Block.c **** 
 112:.\Generated_Source\PSoC4/Com_Block.c ****     (void) Com_Block_ReadTxStatus(); /* Clear any pending status bits */
  50              		.loc 1 112 0
  51 000e FFF7FEFF 		bl	Com_Block_ReadTxStatus
 113:.\Generated_Source\PSoC4/Com_Block.c ****     (void) Com_Block_ReadRxStatus(); /* Clear any pending status bits */
  52              		.loc 1 113 0
  53 0012 FFF7FEFF 		bl	Com_Block_ReadRxStatus
 114:.\Generated_Source\PSoC4/Com_Block.c **** 
 115:.\Generated_Source\PSoC4/Com_Block.c **** 
 116:.\Generated_Source\PSoC4/Com_Block.c ****     /* Configure the Initial interrupt mask */
 117:.\Generated_Source\PSoC4/Com_Block.c ****     #if (Com_Block_TX_SOFTWARE_BUF_ENABLED)
 118:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_TX_STATUS_MASK_REG  = (Com_Block_TX_INIT_INTERRUPTS_MASK &
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 4


 119:.\Generated_Source\PSoC4/Com_Block.c ****                                                 (uint8)~Com_Block_STS_TX_FIFO_NOT_FULL);
 120:.\Generated_Source\PSoC4/Com_Block.c ****     #else /* Com_Block_TX_SOFTWARE_BUF_ENABLED */
 121:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_TX_STATUS_MASK_REG  = Com_Block_TX_INIT_INTERRUPTS_MASK;
  54              		.loc 1 121 0
  55 0016 054B     		ldr	r3, .L2+4
  56 0018 0022     		mov	r2, #0
  57 001a 1A70     		strb	r2, [r3]
 122:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_TX_SOFTWARE_BUF_ENABLED */
 123:.\Generated_Source\PSoC4/Com_Block.c **** 
 124:.\Generated_Source\PSoC4/Com_Block.c ****     Com_Block_RX_STATUS_MASK_REG  = Com_Block_RX_INIT_INTERRUPTS_MASK;
  58              		.loc 1 124 0
  59 001c 044B     		ldr	r3, .L2+8
  60 001e 0022     		mov	r2, #0
  61 0020 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC4/Com_Block.c **** 
 126:.\Generated_Source\PSoC4/Com_Block.c **** }
  62              		.loc 1 126 0
  63 0022 BD46     		mov	sp, r7
  64              		@ sp needed for prologue
  65 0024 80BD     		pop	{r7, pc}
  66              	.L3:
  67 0026 C046     		.align	2
  68              	.L2:
  69 0028 82000F40 		.word	1074724994
  70 002c 83000F40 		.word	1074724995
  71 0030 81000F40 		.word	1074724993
  72              		.cfi_endproc
  73              	.LFE0:
  74              		.size	Com_Block_Init, .-Com_Block_Init
  75              		.section	.text.Com_Block_Enable,"ax",%progbits
  76              		.align	2
  77              		.global	Com_Block_Enable
  78              		.code	16
  79              		.thumb_func
  80              		.type	Com_Block_Enable, %function
  81              	Com_Block_Enable:
  82              	.LFB1:
 127:.\Generated_Source\PSoC4/Com_Block.c **** 
 128:.\Generated_Source\PSoC4/Com_Block.c **** 
 129:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
 130:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_Enable
 131:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
 132:.\Generated_Source\PSoC4/Com_Block.c **** *
 133:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
 134:.\Generated_Source\PSoC4/Com_Block.c **** *  Enable SPIS component.
 135:.\Generated_Source\PSoC4/Com_Block.c **** *
 136:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
 137:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 138:.\Generated_Source\PSoC4/Com_Block.c **** *
 139:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
 140:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 141:.\Generated_Source\PSoC4/Com_Block.c **** *
 142:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_Enable(void) 
 144:.\Generated_Source\PSoC4/Com_Block.c **** {
  83              		.loc 1 144 0
  84              		.cfi_startproc
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 5


  85 0000 90B5     		push	{r4, r7, lr}
  86              	.LCFI2:
  87              		.cfi_def_cfa_offset 12
  88              		.cfi_offset 4, -12
  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
  91 0002 83B0     		sub	sp, sp, #12
  92              	.LCFI3:
  93              		.cfi_def_cfa_offset 24
  94 0004 00AF     		add	r7, sp, #0
  95              	.LCFI4:
  96              		.cfi_def_cfa_register 7
 145:.\Generated_Source\PSoC4/Com_Block.c ****     uint8 enableInterrupts;
 146:.\Generated_Source\PSoC4/Com_Block.c ****     enableInterrupts = CyEnterCriticalSection();
  97              		.loc 1 146 0
  98 0006 FC1D     		add	r4, r7, #7
  99 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 100 000c 031C     		mov	r3, r0
 101 000e 2370     		strb	r3, [r4]
 147:.\Generated_Source\PSoC4/Com_Block.c **** 
 148:.\Generated_Source\PSoC4/Com_Block.c ****     Com_Block_COUNTER_CONTROL_REG |= Com_Block_CNTR_ENABLE;
 102              		.loc 1 148 0
 103 0010 0F4B     		ldr	r3, .L5
 104 0012 0F4A     		ldr	r2, .L5
 105 0014 1278     		ldrb	r2, [r2]
 106 0016 D2B2     		uxtb	r2, r2
 107 0018 2021     		mov	r1, #32
 108 001a 0A43     		orr	r2, r1
 109 001c D2B2     		uxtb	r2, r2
 110 001e 1A70     		strb	r2, [r3]
 149:.\Generated_Source\PSoC4/Com_Block.c ****     Com_Block_TX_STATUS_ACTL_REG |= Com_Block_INT_ENABLE;
 111              		.loc 1 149 0
 112 0020 0C4B     		ldr	r3, .L5+4
 113 0022 0C4A     		ldr	r2, .L5+4
 114 0024 1278     		ldrb	r2, [r2]
 115 0026 D2B2     		uxtb	r2, r2
 116 0028 1021     		mov	r1, #16
 117 002a 0A43     		orr	r2, r1
 118 002c D2B2     		uxtb	r2, r2
 119 002e 1A70     		strb	r2, [r3]
 150:.\Generated_Source\PSoC4/Com_Block.c ****     Com_Block_RX_STATUS_ACTL_REG |= Com_Block_INT_ENABLE;
 120              		.loc 1 150 0
 121 0030 094B     		ldr	r3, .L5+8
 122 0032 094A     		ldr	r2, .L5+8
 123 0034 1278     		ldrb	r2, [r2]
 124 0036 D2B2     		uxtb	r2, r2
 125 0038 1021     		mov	r1, #16
 126 003a 0A43     		orr	r2, r1
 127 003c D2B2     		uxtb	r2, r2
 128 003e 1A70     		strb	r2, [r3]
 151:.\Generated_Source\PSoC4/Com_Block.c **** 
 152:.\Generated_Source\PSoC4/Com_Block.c ****     CyExitCriticalSection(enableInterrupts);
 129              		.loc 1 152 0
 130 0040 FB1D     		add	r3, r7, #7
 131 0042 1B78     		ldrb	r3, [r3]
 132 0044 181C     		mov	r0, r3
 133 0046 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 6


 153:.\Generated_Source\PSoC4/Com_Block.c **** 
 154:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_INTERNAL_TX_INT_ENABLED)
 155:.\Generated_Source\PSoC4/Com_Block.c ****         CyIntEnable(Com_Block_TX_ISR_NUMBER);
 156:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_INTERNAL_TX_INT_ENABLED */
 157:.\Generated_Source\PSoC4/Com_Block.c **** 
 158:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_INTERNAL_RX_INT_ENABLED)
 159:.\Generated_Source\PSoC4/Com_Block.c ****         CyIntEnable(Com_Block_RX_ISR_NUMBER);
 160:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_INTERNAL_RX_INT_ENABLED */
 161:.\Generated_Source\PSoC4/Com_Block.c **** }
 134              		.loc 1 161 0
 135 004a BD46     		mov	sp, r7
 136 004c 03B0     		add	sp, sp, #12
 137              		@ sp needed for prologue
 138 004e 90BD     		pop	{r4, r7, pc}
 139              	.L6:
 140              		.align	2
 141              	.L5:
 142 0050 92000F40 		.word	1074725010
 143 0054 93000F40 		.word	1074725011
 144 0058 91000F40 		.word	1074725009
 145              		.cfi_endproc
 146              	.LFE1:
 147              		.size	Com_Block_Enable, .-Com_Block_Enable
 148              		.section	.text.Com_Block_Start,"ax",%progbits
 149              		.align	2
 150              		.global	Com_Block_Start
 151              		.code	16
 152              		.thumb_func
 153              		.type	Com_Block_Start, %function
 154              	Com_Block_Start:
 155              	.LFB2:
 162:.\Generated_Source\PSoC4/Com_Block.c **** 
 163:.\Generated_Source\PSoC4/Com_Block.c **** 
 164:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
 165:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_Start
 166:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
 167:.\Generated_Source\PSoC4/Com_Block.c **** *
 168:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
 169:.\Generated_Source\PSoC4/Com_Block.c **** *  Initialize and Enable the SPI Slave component.
 170:.\Generated_Source\PSoC4/Com_Block.c **** *
 171:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
 172:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 173:.\Generated_Source\PSoC4/Com_Block.c **** *
 174:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
 175:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 176:.\Generated_Source\PSoC4/Com_Block.c **** *
 177:.\Generated_Source\PSoC4/Com_Block.c **** * Global variables:
 178:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_initVar - used to check initial configuration, modified on
 179:.\Generated_Source\PSoC4/Com_Block.c **** *  first function call.
 180:.\Generated_Source\PSoC4/Com_Block.c **** *
 181:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
 182:.\Generated_Source\PSoC4/Com_Block.c **** *  Enable the clock input to enable operation.
 183:.\Generated_Source\PSoC4/Com_Block.c **** *
 184:.\Generated_Source\PSoC4/Com_Block.c **** * Reentrant:
 185:.\Generated_Source\PSoC4/Com_Block.c **** *  No.
 186:.\Generated_Source\PSoC4/Com_Block.c **** *
 187:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 7


 188:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_Start(void) 
 189:.\Generated_Source\PSoC4/Com_Block.c **** {
 156              		.loc 1 189 0
 157              		.cfi_startproc
 158 0000 80B5     		push	{r7, lr}
 159              	.LCFI5:
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 7, -8
 162              		.cfi_offset 14, -4
 163 0002 00AF     		add	r7, sp, #0
 164              	.LCFI6:
 165              		.cfi_def_cfa_register 7
 190:.\Generated_Source\PSoC4/Com_Block.c ****     if(Com_Block_initVar == 0u)
 166              		.loc 1 190 0
 167 0004 064B     		ldr	r3, .L9
 168 0006 1B78     		ldrb	r3, [r3]
 169 0008 002B     		cmp	r3, #0
 170 000a 04D1     		bne	.L8
 191:.\Generated_Source\PSoC4/Com_Block.c ****     {
 192:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_Init();
 171              		.loc 1 192 0
 172 000c FFF7FEFF 		bl	Com_Block_Init
 193:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_initVar = 1u;
 173              		.loc 1 193 0
 174 0010 034B     		ldr	r3, .L9
 175 0012 0122     		mov	r2, #1
 176 0014 1A70     		strb	r2, [r3]
 177              	.L8:
 194:.\Generated_Source\PSoC4/Com_Block.c ****     }
 195:.\Generated_Source\PSoC4/Com_Block.c **** 
 196:.\Generated_Source\PSoC4/Com_Block.c ****     Com_Block_Enable();
 178              		.loc 1 196 0
 179 0016 FFF7FEFF 		bl	Com_Block_Enable
 197:.\Generated_Source\PSoC4/Com_Block.c **** }
 180              		.loc 1 197 0
 181 001a BD46     		mov	sp, r7
 182              		@ sp needed for prologue
 183 001c 80BD     		pop	{r7, pc}
 184              	.L10:
 185 001e C046     		.align	2
 186              	.L9:
 187 0020 00000000 		.word	Com_Block_initVar
 188              		.cfi_endproc
 189              	.LFE2:
 190              		.size	Com_Block_Start, .-Com_Block_Start
 191              		.section	.text.Com_Block_Stop,"ax",%progbits
 192              		.align	2
 193              		.global	Com_Block_Stop
 194              		.code	16
 195              		.thumb_func
 196              		.type	Com_Block_Stop, %function
 197              	Com_Block_Stop:
 198              	.LFB3:
 198:.\Generated_Source\PSoC4/Com_Block.c **** 
 199:.\Generated_Source\PSoC4/Com_Block.c **** 
 200:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_Stop
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 8


 202:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/Com_Block.c **** *
 204:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
 205:.\Generated_Source\PSoC4/Com_Block.c **** *  Disable the SPI Slave component.
 206:.\Generated_Source\PSoC4/Com_Block.c **** *
 207:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
 208:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 209:.\Generated_Source\PSoC4/Com_Block.c **** *
 210:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
 211:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 212:.\Generated_Source\PSoC4/Com_Block.c **** *
 213:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
 214:.\Generated_Source\PSoC4/Com_Block.c **** *  Disable the internal interrupt if one is used.
 215:.\Generated_Source\PSoC4/Com_Block.c **** *
 216:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
 217:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_Stop(void) 
 218:.\Generated_Source\PSoC4/Com_Block.c **** {
 199              		.loc 1 218 0
 200              		.cfi_startproc
 201 0000 90B5     		push	{r4, r7, lr}
 202              	.LCFI7:
 203              		.cfi_def_cfa_offset 12
 204              		.cfi_offset 4, -12
 205              		.cfi_offset 7, -8
 206              		.cfi_offset 14, -4
 207 0002 83B0     		sub	sp, sp, #12
 208              	.LCFI8:
 209              		.cfi_def_cfa_offset 24
 210 0004 00AF     		add	r7, sp, #0
 211              	.LCFI9:
 212              		.cfi_def_cfa_register 7
 219:.\Generated_Source\PSoC4/Com_Block.c ****     uint8 enableInterrupts;
 220:.\Generated_Source\PSoC4/Com_Block.c ****     enableInterrupts = CyEnterCriticalSection();
 213              		.loc 1 220 0
 214 0006 FC1D     		add	r4, r7, #7
 215 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 216 000c 031C     		mov	r3, r0
 217 000e 2370     		strb	r3, [r4]
 221:.\Generated_Source\PSoC4/Com_Block.c **** 
 222:.\Generated_Source\PSoC4/Com_Block.c ****     Com_Block_TX_STATUS_ACTL_REG &= (uint8)~Com_Block_INT_ENABLE;
 218              		.loc 1 222 0
 219 0010 0B4B     		ldr	r3, .L12
 220 0012 0B4A     		ldr	r2, .L12
 221 0014 1278     		ldrb	r2, [r2]
 222 0016 D2B2     		uxtb	r2, r2
 223 0018 1021     		mov	r1, #16
 224 001a 8A43     		bic	r2, r1
 225 001c D2B2     		uxtb	r2, r2
 226 001e 1A70     		strb	r2, [r3]
 223:.\Generated_Source\PSoC4/Com_Block.c ****     Com_Block_RX_STATUS_ACTL_REG &= (uint8)~Com_Block_INT_ENABLE;
 227              		.loc 1 223 0
 228 0020 084B     		ldr	r3, .L12+4
 229 0022 084A     		ldr	r2, .L12+4
 230 0024 1278     		ldrb	r2, [r2]
 231 0026 D2B2     		uxtb	r2, r2
 232 0028 1021     		mov	r1, #16
 233 002a 8A43     		bic	r2, r1
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 9


 234 002c D2B2     		uxtb	r2, r2
 235 002e 1A70     		strb	r2, [r3]
 224:.\Generated_Source\PSoC4/Com_Block.c **** 
 225:.\Generated_Source\PSoC4/Com_Block.c ****     CyExitCriticalSection(enableInterrupts);
 236              		.loc 1 225 0
 237 0030 FB1D     		add	r3, r7, #7
 238 0032 1B78     		ldrb	r3, [r3]
 239 0034 181C     		mov	r0, r3
 240 0036 FFF7FEFF 		bl	CyExitCriticalSection
 226:.\Generated_Source\PSoC4/Com_Block.c **** 
 227:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_INTERNAL_TX_INT_ENABLED)
 228:.\Generated_Source\PSoC4/Com_Block.c ****         CyIntDisable(Com_Block_TX_ISR_NUMBER);
 229:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_INTERNAL_TX_INT_ENABLED */
 230:.\Generated_Source\PSoC4/Com_Block.c **** 
 231:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_INTERNAL_RX_INT_ENABLED)
 232:.\Generated_Source\PSoC4/Com_Block.c ****         CyIntDisable(Com_Block_RX_ISR_NUMBER);
 233:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_INTERNAL_RX_INT_ENABLED */
 234:.\Generated_Source\PSoC4/Com_Block.c **** }
 241              		.loc 1 234 0
 242 003a BD46     		mov	sp, r7
 243 003c 03B0     		add	sp, sp, #12
 244              		@ sp needed for prologue
 245 003e 90BD     		pop	{r4, r7, pc}
 246              	.L13:
 247              		.align	2
 248              	.L12:
 249 0040 93000F40 		.word	1074725011
 250 0044 91000F40 		.word	1074725009
 251              		.cfi_endproc
 252              	.LFE3:
 253              		.size	Com_Block_Stop, .-Com_Block_Stop
 254              		.section	.text.Com_Block_EnableTxInt,"ax",%progbits
 255              		.align	2
 256              		.global	Com_Block_EnableTxInt
 257              		.code	16
 258              		.thumb_func
 259              		.type	Com_Block_EnableTxInt, %function
 260              	Com_Block_EnableTxInt:
 261              	.LFB4:
 235:.\Generated_Source\PSoC4/Com_Block.c **** 
 236:.\Generated_Source\PSoC4/Com_Block.c **** 
 237:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
 238:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_EnableTxInt
 239:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
 240:.\Generated_Source\PSoC4/Com_Block.c **** *
 241:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
 242:.\Generated_Source\PSoC4/Com_Block.c **** *  Enable internal Tx interrupt generation.
 243:.\Generated_Source\PSoC4/Com_Block.c **** *
 244:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
 245:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 246:.\Generated_Source\PSoC4/Com_Block.c **** *
 247:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
 248:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 249:.\Generated_Source\PSoC4/Com_Block.c **** *
 250:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
 251:.\Generated_Source\PSoC4/Com_Block.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 252:.\Generated_Source\PSoC4/Com_Block.c **** *
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 10


 253:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
 254:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_EnableTxInt(void) 
 255:.\Generated_Source\PSoC4/Com_Block.c **** {
 262              		.loc 1 255 0
 263              		.cfi_startproc
 264 0000 80B5     		push	{r7, lr}
 265              	.LCFI10:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 7, -8
 268              		.cfi_offset 14, -4
 269 0002 00AF     		add	r7, sp, #0
 270              	.LCFI11:
 271              		.cfi_def_cfa_register 7
 256:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_INTERNAL_TX_INT_ENABLED)
 257:.\Generated_Source\PSoC4/Com_Block.c ****         CyIntEnable(Com_Block_TX_ISR_NUMBER);
 258:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_INTERNAL_TX_INT_ENABLED */
 259:.\Generated_Source\PSoC4/Com_Block.c **** }
 272              		.loc 1 259 0
 273 0004 BD46     		mov	sp, r7
 274              		@ sp needed for prologue
 275 0006 80BD     		pop	{r7, pc}
 276              		.cfi_endproc
 277              	.LFE4:
 278              		.size	Com_Block_EnableTxInt, .-Com_Block_EnableTxInt
 279              		.section	.text.Com_Block_EnableRxInt,"ax",%progbits
 280              		.align	2
 281              		.global	Com_Block_EnableRxInt
 282              		.code	16
 283              		.thumb_func
 284              		.type	Com_Block_EnableRxInt, %function
 285              	Com_Block_EnableRxInt:
 286              	.LFB5:
 260:.\Generated_Source\PSoC4/Com_Block.c **** 
 261:.\Generated_Source\PSoC4/Com_Block.c **** 
 262:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_EnableRxInt
 264:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/Com_Block.c **** *
 266:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
 267:.\Generated_Source\PSoC4/Com_Block.c **** *  Enable internal Rx interrupt generation.
 268:.\Generated_Source\PSoC4/Com_Block.c **** *
 269:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
 270:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 271:.\Generated_Source\PSoC4/Com_Block.c **** *
 272:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
 273:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 274:.\Generated_Source\PSoC4/Com_Block.c **** *
 275:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
 276:.\Generated_Source\PSoC4/Com_Block.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 277:.\Generated_Source\PSoC4/Com_Block.c **** *
 278:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_EnableRxInt(void) 
 280:.\Generated_Source\PSoC4/Com_Block.c **** {
 287              		.loc 1 280 0
 288              		.cfi_startproc
 289 0000 80B5     		push	{r7, lr}
 290              	.LCFI12:
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 11


 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 7, -8
 293              		.cfi_offset 14, -4
 294 0002 00AF     		add	r7, sp, #0
 295              	.LCFI13:
 296              		.cfi_def_cfa_register 7
 281:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_INTERNAL_RX_INT_ENABLED)
 282:.\Generated_Source\PSoC4/Com_Block.c ****         CyIntEnable(Com_Block_RX_ISR_NUMBER);
 283:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_INTERNAL_RX_INT_ENABLED */
 284:.\Generated_Source\PSoC4/Com_Block.c **** }
 297              		.loc 1 284 0
 298 0004 BD46     		mov	sp, r7
 299              		@ sp needed for prologue
 300 0006 80BD     		pop	{r7, pc}
 301              		.cfi_endproc
 302              	.LFE5:
 303              		.size	Com_Block_EnableRxInt, .-Com_Block_EnableRxInt
 304              		.section	.text.Com_Block_DisableTxInt,"ax",%progbits
 305              		.align	2
 306              		.global	Com_Block_DisableTxInt
 307              		.code	16
 308              		.thumb_func
 309              		.type	Com_Block_DisableTxInt, %function
 310              	Com_Block_DisableTxInt:
 311              	.LFB6:
 285:.\Generated_Source\PSoC4/Com_Block.c **** 
 286:.\Generated_Source\PSoC4/Com_Block.c **** 
 287:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
 288:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_DisableTxInt
 289:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
 290:.\Generated_Source\PSoC4/Com_Block.c **** *
 291:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
 292:.\Generated_Source\PSoC4/Com_Block.c **** *  Disable internal Tx interrupt generation.
 293:.\Generated_Source\PSoC4/Com_Block.c **** *
 294:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
 295:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 296:.\Generated_Source\PSoC4/Com_Block.c **** *
 297:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
 298:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 299:.\Generated_Source\PSoC4/Com_Block.c **** *
 300:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
 301:.\Generated_Source\PSoC4/Com_Block.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 302:.\Generated_Source\PSoC4/Com_Block.c **** *
 303:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
 304:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_DisableTxInt(void) 
 305:.\Generated_Source\PSoC4/Com_Block.c **** {
 312              		.loc 1 305 0
 313              		.cfi_startproc
 314 0000 80B5     		push	{r7, lr}
 315              	.LCFI14:
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319 0002 00AF     		add	r7, sp, #0
 320              	.LCFI15:
 321              		.cfi_def_cfa_register 7
 306:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_INTERNAL_TX_INT_ENABLED)
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 12


 307:.\Generated_Source\PSoC4/Com_Block.c ****         CyIntDisable(Com_Block_TX_ISR_NUMBER);
 308:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_INTERNAL_TX_INT_ENABLED */
 309:.\Generated_Source\PSoC4/Com_Block.c **** }
 322              		.loc 1 309 0
 323 0004 BD46     		mov	sp, r7
 324              		@ sp needed for prologue
 325 0006 80BD     		pop	{r7, pc}
 326              		.cfi_endproc
 327              	.LFE6:
 328              		.size	Com_Block_DisableTxInt, .-Com_Block_DisableTxInt
 329              		.section	.text.Com_Block_DisableRxInt,"ax",%progbits
 330              		.align	2
 331              		.global	Com_Block_DisableRxInt
 332              		.code	16
 333              		.thumb_func
 334              		.type	Com_Block_DisableRxInt, %function
 335              	Com_Block_DisableRxInt:
 336              	.LFB7:
 310:.\Generated_Source\PSoC4/Com_Block.c **** 
 311:.\Generated_Source\PSoC4/Com_Block.c **** 
 312:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
 313:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_DisableRxInt
 314:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
 315:.\Generated_Source\PSoC4/Com_Block.c **** *
 316:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
 317:.\Generated_Source\PSoC4/Com_Block.c **** *  Disable internal Rx interrupt generation.
 318:.\Generated_Source\PSoC4/Com_Block.c **** *
 319:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
 320:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 321:.\Generated_Source\PSoC4/Com_Block.c **** *
 322:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
 323:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 324:.\Generated_Source\PSoC4/Com_Block.c **** *
 325:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
 326:.\Generated_Source\PSoC4/Com_Block.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 327:.\Generated_Source\PSoC4/Com_Block.c **** *
 328:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
 329:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_DisableRxInt(void) 
 330:.\Generated_Source\PSoC4/Com_Block.c **** {
 337              		.loc 1 330 0
 338              		.cfi_startproc
 339 0000 80B5     		push	{r7, lr}
 340              	.LCFI16:
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 00AF     		add	r7, sp, #0
 345              	.LCFI17:
 346              		.cfi_def_cfa_register 7
 331:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_INTERNAL_RX_INT_ENABLED)
 332:.\Generated_Source\PSoC4/Com_Block.c ****         CyIntDisable(Com_Block_RX_ISR_NUMBER);
 333:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_INTERNAL_RX_INT_ENABLED */
 334:.\Generated_Source\PSoC4/Com_Block.c **** }
 347              		.loc 1 334 0
 348 0004 BD46     		mov	sp, r7
 349              		@ sp needed for prologue
 350 0006 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 13


 351              		.cfi_endproc
 352              	.LFE7:
 353              		.size	Com_Block_DisableRxInt, .-Com_Block_DisableRxInt
 354              		.section	.text.Com_Block_SetTxInterruptMode,"ax",%progbits
 355              		.align	2
 356              		.global	Com_Block_SetTxInterruptMode
 357              		.code	16
 358              		.thumb_func
 359              		.type	Com_Block_SetTxInterruptMode, %function
 360              	Com_Block_SetTxInterruptMode:
 361              	.LFB8:
 335:.\Generated_Source\PSoC4/Com_Block.c **** 
 336:.\Generated_Source\PSoC4/Com_Block.c **** 
 337:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
 338:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_SetTxInterruptMode
 339:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
 340:.\Generated_Source\PSoC4/Com_Block.c **** *
 341:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
 342:.\Generated_Source\PSoC4/Com_Block.c **** *  Configure which status bits trigger an interrupt event.
 343:.\Generated_Source\PSoC4/Com_Block.c **** *
 344:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
 345:.\Generated_Source\PSoC4/Com_Block.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 346:.\Generated_Source\PSoC4/Com_Block.c **** *  header file).
 347:.\Generated_Source\PSoC4/Com_Block.c **** *
 348:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
 349:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 350:.\Generated_Source\PSoC4/Com_Block.c **** *
 351:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
 352:.\Generated_Source\PSoC4/Com_Block.c **** *  Enables the output of specific status bits to the interrupt controller.
 353:.\Generated_Source\PSoC4/Com_Block.c **** *
 354:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
 355:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_SetTxInterruptMode(uint8 intSrc) 
 356:.\Generated_Source\PSoC4/Com_Block.c **** {
 362              		.loc 1 356 0
 363              		.cfi_startproc
 364 0000 80B5     		push	{r7, lr}
 365              	.LCFI18:
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 7, -8
 368              		.cfi_offset 14, -4
 369 0002 82B0     		sub	sp, sp, #8
 370              	.LCFI19:
 371              		.cfi_def_cfa_offset 16
 372 0004 00AF     		add	r7, sp, #0
 373              	.LCFI20:
 374              		.cfi_def_cfa_register 7
 375 0006 021C     		mov	r2, r0
 376 0008 FB1D     		add	r3, r7, #7
 377 000a 1A70     		strb	r2, [r3]
 357:.\Generated_Source\PSoC4/Com_Block.c ****     Com_Block_TX_STATUS_MASK_REG  = intSrc;
 378              		.loc 1 357 0
 379 000c 034B     		ldr	r3, .L19
 380 000e FA1D     		add	r2, r7, #7
 381 0010 1278     		ldrb	r2, [r2]
 382 0012 1A70     		strb	r2, [r3]
 358:.\Generated_Source\PSoC4/Com_Block.c **** }
 383              		.loc 1 358 0
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 14


 384 0014 BD46     		mov	sp, r7
 385 0016 02B0     		add	sp, sp, #8
 386              		@ sp needed for prologue
 387 0018 80BD     		pop	{r7, pc}
 388              	.L20:
 389 001a C046     		.align	2
 390              	.L19:
 391 001c 83000F40 		.word	1074724995
 392              		.cfi_endproc
 393              	.LFE8:
 394              		.size	Com_Block_SetTxInterruptMode, .-Com_Block_SetTxInterruptMode
 395              		.section	.text.Com_Block_SetRxInterruptMode,"ax",%progbits
 396              		.align	2
 397              		.global	Com_Block_SetRxInterruptMode
 398              		.code	16
 399              		.thumb_func
 400              		.type	Com_Block_SetRxInterruptMode, %function
 401              	Com_Block_SetRxInterruptMode:
 402              	.LFB9:
 359:.\Generated_Source\PSoC4/Com_Block.c **** 
 360:.\Generated_Source\PSoC4/Com_Block.c **** 
 361:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
 362:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_SetRxInterruptMode
 363:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
 364:.\Generated_Source\PSoC4/Com_Block.c **** *
 365:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
 366:.\Generated_Source\PSoC4/Com_Block.c **** *  Configure which status bits trigger an interrupt event.
 367:.\Generated_Source\PSoC4/Com_Block.c **** *
 368:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
 369:.\Generated_Source\PSoC4/Com_Block.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 370:.\Generated_Source\PSoC4/Com_Block.c **** *  header file).
 371:.\Generated_Source\PSoC4/Com_Block.c **** *
 372:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
 373:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 374:.\Generated_Source\PSoC4/Com_Block.c **** *
 375:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
 376:.\Generated_Source\PSoC4/Com_Block.c **** *  Enables the output of specific status bits to the interrupt controller.
 377:.\Generated_Source\PSoC4/Com_Block.c **** *
 378:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
 379:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_SetRxInterruptMode(uint8 intSrc) 
 380:.\Generated_Source\PSoC4/Com_Block.c **** {
 403              		.loc 1 380 0
 404              		.cfi_startproc
 405 0000 80B5     		push	{r7, lr}
 406              	.LCFI21:
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 7, -8
 409              		.cfi_offset 14, -4
 410 0002 82B0     		sub	sp, sp, #8
 411              	.LCFI22:
 412              		.cfi_def_cfa_offset 16
 413 0004 00AF     		add	r7, sp, #0
 414              	.LCFI23:
 415              		.cfi_def_cfa_register 7
 416 0006 021C     		mov	r2, r0
 417 0008 FB1D     		add	r3, r7, #7
 418 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 15


 381:.\Generated_Source\PSoC4/Com_Block.c ****     Com_Block_RX_STATUS_MASK_REG  = intSrc;
 419              		.loc 1 381 0
 420 000c 034B     		ldr	r3, .L22
 421 000e FA1D     		add	r2, r7, #7
 422 0010 1278     		ldrb	r2, [r2]
 423 0012 1A70     		strb	r2, [r3]
 382:.\Generated_Source\PSoC4/Com_Block.c **** }
 424              		.loc 1 382 0
 425 0014 BD46     		mov	sp, r7
 426 0016 02B0     		add	sp, sp, #8
 427              		@ sp needed for prologue
 428 0018 80BD     		pop	{r7, pc}
 429              	.L23:
 430 001a C046     		.align	2
 431              	.L22:
 432 001c 81000F40 		.word	1074724993
 433              		.cfi_endproc
 434              	.LFE9:
 435              		.size	Com_Block_SetRxInterruptMode, .-Com_Block_SetRxInterruptMode
 436              		.section	.text.Com_Block_ReadTxStatus,"ax",%progbits
 437              		.align	2
 438              		.global	Com_Block_ReadTxStatus
 439              		.code	16
 440              		.thumb_func
 441              		.type	Com_Block_ReadTxStatus, %function
 442              	Com_Block_ReadTxStatus:
 443              	.LFB10:
 383:.\Generated_Source\PSoC4/Com_Block.c **** 
 384:.\Generated_Source\PSoC4/Com_Block.c **** 
 385:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
 386:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_ReadTxStatus
 387:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
 388:.\Generated_Source\PSoC4/Com_Block.c **** *
 389:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
 390:.\Generated_Source\PSoC4/Com_Block.c **** *  Read the Tx status register for the component.
 391:.\Generated_Source\PSoC4/Com_Block.c **** *
 392:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
 393:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 394:.\Generated_Source\PSoC4/Com_Block.c **** *
 395:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
 396:.\Generated_Source\PSoC4/Com_Block.c **** *  Contents of the Tx status register.
 397:.\Generated_Source\PSoC4/Com_Block.c **** *
 398:.\Generated_Source\PSoC4/Com_Block.c **** * Global variables:
 399:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_swStatusTx - used to store in software status register,
 400:.\Generated_Source\PSoC4/Com_Block.c **** *  modified every function call - resets to zero.
 401:.\Generated_Source\PSoC4/Com_Block.c **** *
 402:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
 403:.\Generated_Source\PSoC4/Com_Block.c **** *  Allows the user and the API to read the Tx status register for error
 404:.\Generated_Source\PSoC4/Com_Block.c **** *  detection and flow control.
 405:.\Generated_Source\PSoC4/Com_Block.c **** *
 406:.\Generated_Source\PSoC4/Com_Block.c **** * Side Effects:
 407:.\Generated_Source\PSoC4/Com_Block.c **** *  Clear Tx status register of the component.
 408:.\Generated_Source\PSoC4/Com_Block.c **** *
 409:.\Generated_Source\PSoC4/Com_Block.c **** * Reentrant:
 410:.\Generated_Source\PSoC4/Com_Block.c **** *  No.
 411:.\Generated_Source\PSoC4/Com_Block.c **** *
 412:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 16


 413:.\Generated_Source\PSoC4/Com_Block.c **** uint8 Com_Block_ReadTxStatus(void) 
 414:.\Generated_Source\PSoC4/Com_Block.c **** {
 444              		.loc 1 414 0
 445              		.cfi_startproc
 446 0000 80B5     		push	{r7, lr}
 447              	.LCFI24:
 448              		.cfi_def_cfa_offset 8
 449              		.cfi_offset 7, -8
 450              		.cfi_offset 14, -4
 451 0002 82B0     		sub	sp, sp, #8
 452              	.LCFI25:
 453              		.cfi_def_cfa_offset 16
 454 0004 00AF     		add	r7, sp, #0
 455              	.LCFI26:
 456              		.cfi_def_cfa_register 7
 415:.\Generated_Source\PSoC4/Com_Block.c ****     uint8 tmpStatus;
 416:.\Generated_Source\PSoC4/Com_Block.c **** 
 417:.\Generated_Source\PSoC4/Com_Block.c ****     #if (Com_Block_TX_SOFTWARE_BUF_ENABLED)
 418:.\Generated_Source\PSoC4/Com_Block.c **** 
 419:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_DisableTxInt();
 420:.\Generated_Source\PSoC4/Com_Block.c **** 
 421:.\Generated_Source\PSoC4/Com_Block.c ****         tmpStatus = Com_Block_GET_STATUS_TX(Com_Block_swStatusTx);
 422:.\Generated_Source\PSoC4/Com_Block.c **** 
 423:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_swStatusTx = 0u;
 424:.\Generated_Source\PSoC4/Com_Block.c **** 
 425:.\Generated_Source\PSoC4/Com_Block.c ****         /* Enable Interrupts */
 426:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_EnableTxInt();
 427:.\Generated_Source\PSoC4/Com_Block.c **** 
 428:.\Generated_Source\PSoC4/Com_Block.c ****     #else /* !Com_Block_TX_SOFTWARE_BUF_ENABLED */
 429:.\Generated_Source\PSoC4/Com_Block.c **** 
 430:.\Generated_Source\PSoC4/Com_Block.c ****         tmpStatus = Com_Block_TX_STATUS_REG;
 457              		.loc 1 430 0
 458 0006 054A     		ldr	r2, .L26
 459 0008 FB1D     		add	r3, r7, #7
 460 000a 1278     		ldrb	r2, [r2]
 461 000c 1A70     		strb	r2, [r3]
 431:.\Generated_Source\PSoC4/Com_Block.c **** 
 432:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_TX_SOFTWARE_BUF_ENABLED */
 433:.\Generated_Source\PSoC4/Com_Block.c **** 
 434:.\Generated_Source\PSoC4/Com_Block.c ****     return(tmpStatus);
 462              		.loc 1 434 0
 463 000e FB1D     		add	r3, r7, #7
 464 0010 1B78     		ldrb	r3, [r3]
 435:.\Generated_Source\PSoC4/Com_Block.c **** }
 465              		.loc 1 435 0
 466 0012 181C     		mov	r0, r3
 467 0014 BD46     		mov	sp, r7
 468 0016 02B0     		add	sp, sp, #8
 469              		@ sp needed for prologue
 470 0018 80BD     		pop	{r7, pc}
 471              	.L27:
 472 001a C046     		.align	2
 473              	.L26:
 474 001c 63000F40 		.word	1074724963
 475              		.cfi_endproc
 476              	.LFE10:
 477              		.size	Com_Block_ReadTxStatus, .-Com_Block_ReadTxStatus
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 17


 478              		.section	.text.Com_Block_ReadRxStatus,"ax",%progbits
 479              		.align	2
 480              		.global	Com_Block_ReadRxStatus
 481              		.code	16
 482              		.thumb_func
 483              		.type	Com_Block_ReadRxStatus, %function
 484              	Com_Block_ReadRxStatus:
 485              	.LFB11:
 436:.\Generated_Source\PSoC4/Com_Block.c **** 
 437:.\Generated_Source\PSoC4/Com_Block.c **** 
 438:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
 439:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_ReadRxStatus
 440:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
 441:.\Generated_Source\PSoC4/Com_Block.c **** *
 442:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
 443:.\Generated_Source\PSoC4/Com_Block.c **** *  Read the Rx status register for the component.
 444:.\Generated_Source\PSoC4/Com_Block.c **** *
 445:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
 446:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 447:.\Generated_Source\PSoC4/Com_Block.c **** *
 448:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
 449:.\Generated_Source\PSoC4/Com_Block.c **** *  Contents of the Rx status register.
 450:.\Generated_Source\PSoC4/Com_Block.c **** *
 451:.\Generated_Source\PSoC4/Com_Block.c **** * Global variables:
 452:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_swStatusRx - used to store in software Rx status register,
 453:.\Generated_Source\PSoC4/Com_Block.c **** *  modified every function call - resets to zero.
 454:.\Generated_Source\PSoC4/Com_Block.c **** *
 455:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
 456:.\Generated_Source\PSoC4/Com_Block.c **** *  Allows the user and the API to read the Rx status register for error
 457:.\Generated_Source\PSoC4/Com_Block.c **** *  detection and flow control.
 458:.\Generated_Source\PSoC4/Com_Block.c **** *
 459:.\Generated_Source\PSoC4/Com_Block.c **** * Side Effects:
 460:.\Generated_Source\PSoC4/Com_Block.c **** *  Clear Rx status register of the component.
 461:.\Generated_Source\PSoC4/Com_Block.c **** *
 462:.\Generated_Source\PSoC4/Com_Block.c **** * Reentrant:
 463:.\Generated_Source\PSoC4/Com_Block.c **** *  No.
 464:.\Generated_Source\PSoC4/Com_Block.c **** *
 465:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
 466:.\Generated_Source\PSoC4/Com_Block.c **** uint8 Com_Block_ReadRxStatus(void) 
 467:.\Generated_Source\PSoC4/Com_Block.c **** {
 486              		.loc 1 467 0
 487              		.cfi_startproc
 488 0000 80B5     		push	{r7, lr}
 489              	.LCFI27:
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 7, -8
 492              		.cfi_offset 14, -4
 493 0002 82B0     		sub	sp, sp, #8
 494              	.LCFI28:
 495              		.cfi_def_cfa_offset 16
 496 0004 00AF     		add	r7, sp, #0
 497              	.LCFI29:
 498              		.cfi_def_cfa_register 7
 468:.\Generated_Source\PSoC4/Com_Block.c ****     uint8 tmpStatus;
 469:.\Generated_Source\PSoC4/Com_Block.c **** 
 470:.\Generated_Source\PSoC4/Com_Block.c ****     #if (Com_Block_RX_SOFTWARE_BUF_ENABLED)
 471:.\Generated_Source\PSoC4/Com_Block.c **** 
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 18


 472:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_DisableRxInt();
 473:.\Generated_Source\PSoC4/Com_Block.c **** 
 474:.\Generated_Source\PSoC4/Com_Block.c ****         tmpStatus = Com_Block_GET_STATUS_RX(Com_Block_swStatusRx);
 475:.\Generated_Source\PSoC4/Com_Block.c **** 
 476:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_swStatusRx = 0u;
 477:.\Generated_Source\PSoC4/Com_Block.c **** 
 478:.\Generated_Source\PSoC4/Com_Block.c ****         /* Enable Interrupts */
 479:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_EnableRxInt();
 480:.\Generated_Source\PSoC4/Com_Block.c **** 
 481:.\Generated_Source\PSoC4/Com_Block.c ****     #else /* !Com_Block_RX_SOFTWARE_BUF_ENABLED */
 482:.\Generated_Source\PSoC4/Com_Block.c **** 
 483:.\Generated_Source\PSoC4/Com_Block.c ****         tmpStatus = Com_Block_RX_STATUS_REG;
 499              		.loc 1 483 0
 500 0006 054A     		ldr	r2, .L30
 501 0008 FB1D     		add	r3, r7, #7
 502 000a 1278     		ldrb	r2, [r2]
 503 000c 1A70     		strb	r2, [r3]
 484:.\Generated_Source\PSoC4/Com_Block.c **** 
 485:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_RX_SOFTWARE_BUF_ENABLED */
 486:.\Generated_Source\PSoC4/Com_Block.c **** 
 487:.\Generated_Source\PSoC4/Com_Block.c ****     return(tmpStatus);
 504              		.loc 1 487 0
 505 000e FB1D     		add	r3, r7, #7
 506 0010 1B78     		ldrb	r3, [r3]
 488:.\Generated_Source\PSoC4/Com_Block.c **** }
 507              		.loc 1 488 0
 508 0012 181C     		mov	r0, r3
 509 0014 BD46     		mov	sp, r7
 510 0016 02B0     		add	sp, sp, #8
 511              		@ sp needed for prologue
 512 0018 80BD     		pop	{r7, pc}
 513              	.L31:
 514 001a C046     		.align	2
 515              	.L30:
 516 001c 61000F40 		.word	1074724961
 517              		.cfi_endproc
 518              	.LFE11:
 519              		.size	Com_Block_ReadRxStatus, .-Com_Block_ReadRxStatus
 520              		.section	.text.Com_Block_WriteTxData,"ax",%progbits
 521              		.align	2
 522              		.global	Com_Block_WriteTxData
 523              		.code	16
 524              		.thumb_func
 525              		.type	Com_Block_WriteTxData, %function
 526              	Com_Block_WriteTxData:
 527              	.LFB12:
 489:.\Generated_Source\PSoC4/Com_Block.c **** 
 490:.\Generated_Source\PSoC4/Com_Block.c **** 
 491:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
 492:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_WriteTxData
 493:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
 494:.\Generated_Source\PSoC4/Com_Block.c **** *
 495:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
 496:.\Generated_Source\PSoC4/Com_Block.c **** *  Write a byte of data to be sent across the SPI.
 497:.\Generated_Source\PSoC4/Com_Block.c **** *
 498:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
 499:.\Generated_Source\PSoC4/Com_Block.c **** *  txDataByte: The data value to send across the SPI.
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 19


 500:.\Generated_Source\PSoC4/Com_Block.c **** *
 501:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
 502:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 503:.\Generated_Source\PSoC4/Com_Block.c **** *
 504:.\Generated_Source\PSoC4/Com_Block.c **** * Global variables:
 505:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_txBufferWrite - used for the account of the bytes which
 506:.\Generated_Source\PSoC4/Com_Block.c **** *  have been written down in the TX software buffer, modified every function
 507:.\Generated_Source\PSoC4/Com_Block.c **** *  call if TX Software Buffer is used.
 508:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_txBufferRead - used for the account of the bytes which
 509:.\Generated_Source\PSoC4/Com_Block.c **** *  have been read from the TX software buffer.
 510:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_txBuffer[Com_Block_TX_BUFFER_SIZE] - used to store
 511:.\Generated_Source\PSoC4/Com_Block.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 512:.\Generated_Source\PSoC4/Com_Block.c **** *
 513:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
 514:.\Generated_Source\PSoC4/Com_Block.c **** *  Allows the user to transmit any byte of data in a single transfer.
 515:.\Generated_Source\PSoC4/Com_Block.c **** *
 516:.\Generated_Source\PSoC4/Com_Block.c **** * Side Effects:
 517:.\Generated_Source\PSoC4/Com_Block.c **** *  If this function is called again before the previous byte is finished then
 518:.\Generated_Source\PSoC4/Com_Block.c **** *  the next byte will be appended to the transfer with no time between
 519:.\Generated_Source\PSoC4/Com_Block.c **** *  the byte transfers. Clear Tx status register of the component.
 520:.\Generated_Source\PSoC4/Com_Block.c **** *
 521:.\Generated_Source\PSoC4/Com_Block.c **** * Reentrant:
 522:.\Generated_Source\PSoC4/Com_Block.c **** *  No.
 523:.\Generated_Source\PSoC4/Com_Block.c **** *
 524:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
 525:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_WriteTxData(uint16 txData) 
 526:.\Generated_Source\PSoC4/Com_Block.c **** {
 528              		.loc 1 526 0
 529              		.cfi_startproc
 530 0000 80B5     		push	{r7, lr}
 531              	.LCFI30:
 532              		.cfi_def_cfa_offset 8
 533              		.cfi_offset 7, -8
 534              		.cfi_offset 14, -4
 535 0002 82B0     		sub	sp, sp, #8
 536              	.LCFI31:
 537              		.cfi_def_cfa_offset 16
 538 0004 00AF     		add	r7, sp, #0
 539              	.LCFI32:
 540              		.cfi_def_cfa_register 7
 541 0006 021C     		mov	r2, r0
 542 0008 BB1D     		add	r3, r7, #6
 543 000a 1A80     		strh	r2, [r3]
 527:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_TX_SOFTWARE_BUF_ENABLED)
 528:.\Generated_Source\PSoC4/Com_Block.c **** 
 529:.\Generated_Source\PSoC4/Com_Block.c ****         uint8 tempStatus;
 530:.\Generated_Source\PSoC4/Com_Block.c ****         uint8 tmpTxBufferRead;
 531:.\Generated_Source\PSoC4/Com_Block.c **** 
 532:.\Generated_Source\PSoC4/Com_Block.c ****         /* Block if buffer is full, so we don't overwrite. */
 533:.\Generated_Source\PSoC4/Com_Block.c ****         do
 534:.\Generated_Source\PSoC4/Com_Block.c ****         {
 535:.\Generated_Source\PSoC4/Com_Block.c ****             tmpTxBufferRead = Com_Block_txBufferRead;
 536:.\Generated_Source\PSoC4/Com_Block.c ****             if (0u == tmpTxBufferRead)
 537:.\Generated_Source\PSoC4/Com_Block.c ****             {
 538:.\Generated_Source\PSoC4/Com_Block.c ****                 tmpTxBufferRead = Com_Block_TX_BUFFER_SIZE - 1u;
 539:.\Generated_Source\PSoC4/Com_Block.c ****             }
 540:.\Generated_Source\PSoC4/Com_Block.c ****             else
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 20


 541:.\Generated_Source\PSoC4/Com_Block.c ****             {
 542:.\Generated_Source\PSoC4/Com_Block.c ****                 tmpTxBufferRead--;
 543:.\Generated_Source\PSoC4/Com_Block.c ****             }
 544:.\Generated_Source\PSoC4/Com_Block.c **** 
 545:.\Generated_Source\PSoC4/Com_Block.c ****         } while(tmpTxBufferRead == Com_Block_txBufferWrite);
 546:.\Generated_Source\PSoC4/Com_Block.c **** 
 547:.\Generated_Source\PSoC4/Com_Block.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 548:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_DisableTxInt();
 549:.\Generated_Source\PSoC4/Com_Block.c **** 
 550:.\Generated_Source\PSoC4/Com_Block.c ****         tempStatus = Com_Block_GET_STATUS_TX(Com_Block_swStatusTx);
 551:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_swStatusTx = tempStatus;
 552:.\Generated_Source\PSoC4/Com_Block.c **** 
 553:.\Generated_Source\PSoC4/Com_Block.c ****         if((Com_Block_txBufferRead == Com_Block_txBufferWrite) &&
 554:.\Generated_Source\PSoC4/Com_Block.c ****             (0u != (Com_Block_swStatusTx & Com_Block_STS_TX_FIFO_NOT_FULL)))
 555:.\Generated_Source\PSoC4/Com_Block.c ****         {
 556:.\Generated_Source\PSoC4/Com_Block.c ****             /* Add directly to the FIFO. */
 557:.\Generated_Source\PSoC4/Com_Block.c ****             CY_SET_REG16(Com_Block_TXDATA_PTR, txData);
 558:.\Generated_Source\PSoC4/Com_Block.c ****         }
 559:.\Generated_Source\PSoC4/Com_Block.c ****         else
 560:.\Generated_Source\PSoC4/Com_Block.c ****         {
 561:.\Generated_Source\PSoC4/Com_Block.c ****             /* Add to the software buffer. */
 562:.\Generated_Source\PSoC4/Com_Block.c ****             Com_Block_txBufferWrite++;
 563:.\Generated_Source\PSoC4/Com_Block.c ****             if(Com_Block_txBufferWrite >= Com_Block_TX_BUFFER_SIZE)
 564:.\Generated_Source\PSoC4/Com_Block.c ****             {
 565:.\Generated_Source\PSoC4/Com_Block.c ****                 Com_Block_txBufferWrite = 0u;
 566:.\Generated_Source\PSoC4/Com_Block.c ****             }
 567:.\Generated_Source\PSoC4/Com_Block.c **** 
 568:.\Generated_Source\PSoC4/Com_Block.c ****             if(Com_Block_txBufferWrite == Com_Block_txBufferRead)
 569:.\Generated_Source\PSoC4/Com_Block.c ****             {
 570:.\Generated_Source\PSoC4/Com_Block.c ****                 Com_Block_txBufferRead++;
 571:.\Generated_Source\PSoC4/Com_Block.c ****                 if(Com_Block_txBufferRead >= Com_Block_RX_BUFFER_SIZE)
 572:.\Generated_Source\PSoC4/Com_Block.c ****                 {
 573:.\Generated_Source\PSoC4/Com_Block.c ****                     Com_Block_txBufferRead = 0u;
 574:.\Generated_Source\PSoC4/Com_Block.c ****                 }
 575:.\Generated_Source\PSoC4/Com_Block.c ****                 Com_Block_txBufferFull = 1u;
 576:.\Generated_Source\PSoC4/Com_Block.c ****             }
 577:.\Generated_Source\PSoC4/Com_Block.c **** 
 578:.\Generated_Source\PSoC4/Com_Block.c ****             Com_Block_txBuffer[Com_Block_txBufferWrite] = txData;
 579:.\Generated_Source\PSoC4/Com_Block.c **** 
 580:.\Generated_Source\PSoC4/Com_Block.c ****             Com_Block_TX_STATUS_MASK_REG |= Com_Block_STS_TX_FIFO_NOT_FULL;
 581:.\Generated_Source\PSoC4/Com_Block.c ****         }
 582:.\Generated_Source\PSoC4/Com_Block.c **** 
 583:.\Generated_Source\PSoC4/Com_Block.c ****         /* Enable Interrupt. */
 584:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_EnableTxInt();
 585:.\Generated_Source\PSoC4/Com_Block.c **** 
 586:.\Generated_Source\PSoC4/Com_Block.c ****     #else /* !Com_Block_TX_SOFTWARE_BUF_ENABLED*/
 587:.\Generated_Source\PSoC4/Com_Block.c **** 
 588:.\Generated_Source\PSoC4/Com_Block.c ****         
 589:.\Generated_Source\PSoC4/Com_Block.c ****         while(0u == (Com_Block_TX_STATUS_REG & Com_Block_STS_TX_FIFO_NOT_FULL))
 544              		.loc 1 589 0
 545 000c C046     		mov	r8, r8
 546              	.L33:
 547              		.loc 1 589 0 is_stmt 0 discriminator 1
 548 000e 074B     		ldr	r3, .L34
 549 0010 1B78     		ldrb	r3, [r3]
 550 0012 DBB2     		uxtb	r3, r3
 551 0014 1A1C     		mov	r2, r3
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 21


 552 0016 0223     		mov	r3, #2
 553 0018 1340     		and	r3, r2
 554 001a F8D0     		beq	.L33
 590:.\Generated_Source\PSoC4/Com_Block.c **** 		{
 591:.\Generated_Source\PSoC4/Com_Block.c **** 			; /* Block while FIFO is full */
 592:.\Generated_Source\PSoC4/Com_Block.c **** 		}
 593:.\Generated_Source\PSoC4/Com_Block.c **** 
 594:.\Generated_Source\PSoC4/Com_Block.c ****         /* Then write the byte */
 595:.\Generated_Source\PSoC4/Com_Block.c ****         CY_SET_REG16(Com_Block_TXDATA_PTR, txData);
 555              		.loc 1 595 0 is_stmt 1
 556 001c 044B     		ldr	r3, .L34+4
 557 001e BA1D     		add	r2, r7, #6
 558 0020 1288     		ldrh	r2, [r2]
 559 0022 1A80     		strh	r2, [r3]
 596:.\Generated_Source\PSoC4/Com_Block.c **** 
 597:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_TX_SOFTWARE_BUF_ENABLED */
 598:.\Generated_Source\PSoC4/Com_Block.c **** }
 560              		.loc 1 598 0
 561 0024 BD46     		mov	sp, r7
 562 0026 02B0     		add	sp, sp, #8
 563              		@ sp needed for prologue
 564 0028 80BD     		pop	{r7, pc}
 565              	.L35:
 566 002a C046     		.align	2
 567              	.L34:
 568 002c 63000F40 		.word	1074724963
 569 0030 84100F40 		.word	1074729092
 570              		.cfi_endproc
 571              	.LFE12:
 572              		.size	Com_Block_WriteTxData, .-Com_Block_WriteTxData
 573              		.section	.text.Com_Block_WriteTxDataZero,"ax",%progbits
 574              		.align	2
 575              		.global	Com_Block_WriteTxDataZero
 576              		.code	16
 577              		.thumb_func
 578              		.type	Com_Block_WriteTxDataZero, %function
 579              	Com_Block_WriteTxDataZero:
 580              	.LFB13:
 599:.\Generated_Source\PSoC4/Com_Block.c **** 
 600:.\Generated_Source\PSoC4/Com_Block.c **** #if(Com_Block_MODE_USE_ZERO != 0u)
 601:.\Generated_Source\PSoC4/Com_Block.c **** 
 602:.\Generated_Source\PSoC4/Com_Block.c ****     /*******************************************************************************
 603:.\Generated_Source\PSoC4/Com_Block.c ****     * Function Name: Com_Block_WriteTxDataZero
 604:.\Generated_Source\PSoC4/Com_Block.c ****     ********************************************************************************
 605:.\Generated_Source\PSoC4/Com_Block.c ****     *
 606:.\Generated_Source\PSoC4/Com_Block.c ****     * Summary:
 607:.\Generated_Source\PSoC4/Com_Block.c ****     *  Write a byte zero of data to be sent across the SPI. This must be used in
 608:.\Generated_Source\PSoC4/Com_Block.c ****     *  Mode 00 and 01 if the FIFO is empty and data is not being sent.
 609:.\Generated_Source\PSoC4/Com_Block.c ****     *
 610:.\Generated_Source\PSoC4/Com_Block.c ****     * Parameters:
 611:.\Generated_Source\PSoC4/Com_Block.c ****     *  txDataByte: The data value to send across the SPI.
 612:.\Generated_Source\PSoC4/Com_Block.c ****     *
 613:.\Generated_Source\PSoC4/Com_Block.c ****     * Return:
 614:.\Generated_Source\PSoC4/Com_Block.c ****     *  None.
 615:.\Generated_Source\PSoC4/Com_Block.c ****     *
 616:.\Generated_Source\PSoC4/Com_Block.c ****     * Theory:
 617:.\Generated_Source\PSoC4/Com_Block.c ****     *  Allows the user to transmit any byte of data in a single transfer. Clear
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 22


 618:.\Generated_Source\PSoC4/Com_Block.c ****     *  status register of the component.
 619:.\Generated_Source\PSoC4/Com_Block.c ****     *
 620:.\Generated_Source\PSoC4/Com_Block.c ****     *******************************************************************************/
 621:.\Generated_Source\PSoC4/Com_Block.c ****     void Com_Block_WriteTxDataZero(uint16 txDataByte)
 622:.\Generated_Source\PSoC4/Com_Block.c ****                                         
 623:.\Generated_Source\PSoC4/Com_Block.c ****     {
 581              		.loc 1 623 0
 582              		.cfi_startproc
 583 0000 80B5     		push	{r7, lr}
 584              	.LCFI33:
 585              		.cfi_def_cfa_offset 8
 586              		.cfi_offset 7, -8
 587              		.cfi_offset 14, -4
 588 0002 82B0     		sub	sp, sp, #8
 589              	.LCFI34:
 590              		.cfi_def_cfa_offset 16
 591 0004 00AF     		add	r7, sp, #0
 592              	.LCFI35:
 593              		.cfi_def_cfa_register 7
 594 0006 021C     		mov	r2, r0
 595 0008 BB1D     		add	r3, r7, #6
 596 000a 1A80     		strh	r2, [r3]
 624:.\Generated_Source\PSoC4/Com_Block.c ****         CY_SET_REG16(Com_Block_TXDATA_ZERO_PTR, txDataByte);
 597              		.loc 1 624 0
 598 000c 034B     		ldr	r3, .L37
 599 000e BA1D     		add	r2, r7, #6
 600 0010 1288     		ldrh	r2, [r2]
 601 0012 1A80     		strh	r2, [r3]
 625:.\Generated_Source\PSoC4/Com_Block.c ****     }
 602              		.loc 1 625 0
 603 0014 BD46     		mov	sp, r7
 604 0016 02B0     		add	sp, sp, #8
 605              		@ sp needed for prologue
 606 0018 80BD     		pop	{r7, pc}
 607              	.L38:
 608 001a C046     		.align	2
 609              	.L37:
 610 001c 04100F40 		.word	1074728964
 611              		.cfi_endproc
 612              	.LFE13:
 613              		.size	Com_Block_WriteTxDataZero, .-Com_Block_WriteTxDataZero
 614              		.section	.text.Com_Block_ReadRxData,"ax",%progbits
 615              		.align	2
 616              		.global	Com_Block_ReadRxData
 617              		.code	16
 618              		.thumb_func
 619              		.type	Com_Block_ReadRxData, %function
 620              	Com_Block_ReadRxData:
 621              	.LFB14:
 626:.\Generated_Source\PSoC4/Com_Block.c **** 
 627:.\Generated_Source\PSoC4/Com_Block.c **** #endif /* (Com_Block_MODE_USE_ZERO != 0u) */
 628:.\Generated_Source\PSoC4/Com_Block.c **** 
 629:.\Generated_Source\PSoC4/Com_Block.c **** 
 630:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
 631:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_ReadRxData
 632:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
 633:.\Generated_Source\PSoC4/Com_Block.c **** *
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 23


 634:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
 635:.\Generated_Source\PSoC4/Com_Block.c **** *  Read the next byte of data received across the SPI.
 636:.\Generated_Source\PSoC4/Com_Block.c **** *
 637:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
 638:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 639:.\Generated_Source\PSoC4/Com_Block.c **** *
 640:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
 641:.\Generated_Source\PSoC4/Com_Block.c **** *  The next byte of data read from the FIFO.
 642:.\Generated_Source\PSoC4/Com_Block.c **** *
 643:.\Generated_Source\PSoC4/Com_Block.c **** * Global variables:
 644:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_rxBufferWrite - used for the account of the bytes which
 645:.\Generated_Source\PSoC4/Com_Block.c **** *  have been written down in the RX software buffer.
 646:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_rxBufferRead - used for the account of the bytes which
 647:.\Generated_Source\PSoC4/Com_Block.c **** *  have been read from the RX software buffer, modified every function
 648:.\Generated_Source\PSoC4/Com_Block.c **** *  call if RX Software Buffer is used.
 649:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_rxBuffer[Com_Block_RX_BUFFER_SIZE] - used to store
 650:.\Generated_Source\PSoC4/Com_Block.c **** *  received data.
 651:.\Generated_Source\PSoC4/Com_Block.c **** *
 652:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
 653:.\Generated_Source\PSoC4/Com_Block.c **** *  Allows the user to read a byte of data received.
 654:.\Generated_Source\PSoC4/Com_Block.c **** *
 655:.\Generated_Source\PSoC4/Com_Block.c **** * Side Effects:
 656:.\Generated_Source\PSoC4/Com_Block.c **** *  Will return invalid data if the FIFO is empty.  User should poll for FIFO
 657:.\Generated_Source\PSoC4/Com_Block.c **** *  empty status before calling Read function.
 658:.\Generated_Source\PSoC4/Com_Block.c **** *
 659:.\Generated_Source\PSoC4/Com_Block.c **** * Reentrant:
 660:.\Generated_Source\PSoC4/Com_Block.c **** *  No.
 661:.\Generated_Source\PSoC4/Com_Block.c **** *
 662:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
 663:.\Generated_Source\PSoC4/Com_Block.c **** uint16 Com_Block_ReadRxData(void) 
 664:.\Generated_Source\PSoC4/Com_Block.c **** {
 622              		.loc 1 664 0
 623              		.cfi_startproc
 624 0000 80B5     		push	{r7, lr}
 625              	.LCFI36:
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 7, -8
 628              		.cfi_offset 14, -4
 629 0002 82B0     		sub	sp, sp, #8
 630              	.LCFI37:
 631              		.cfi_def_cfa_offset 16
 632 0004 00AF     		add	r7, sp, #0
 633              	.LCFI38:
 634              		.cfi_def_cfa_register 7
 665:.\Generated_Source\PSoC4/Com_Block.c ****     uint16 rxData;
 666:.\Generated_Source\PSoC4/Com_Block.c **** 
 667:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_RX_SOFTWARE_BUF_ENABLED)
 668:.\Generated_Source\PSoC4/Com_Block.c **** 
 669:.\Generated_Source\PSoC4/Com_Block.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 670:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_DisableRxInt();
 671:.\Generated_Source\PSoC4/Com_Block.c **** 
 672:.\Generated_Source\PSoC4/Com_Block.c ****         if(Com_Block_rxBufferRead != Com_Block_rxBufferWrite)
 673:.\Generated_Source\PSoC4/Com_Block.c ****         {
 674:.\Generated_Source\PSoC4/Com_Block.c ****             if(Com_Block_rxBufferFull == 0u)
 675:.\Generated_Source\PSoC4/Com_Block.c ****             {
 676:.\Generated_Source\PSoC4/Com_Block.c ****                 Com_Block_rxBufferRead++;
 677:.\Generated_Source\PSoC4/Com_Block.c ****                 if(Com_Block_rxBufferRead >= Com_Block_RX_BUFFER_SIZE)
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 24


 678:.\Generated_Source\PSoC4/Com_Block.c ****                 {
 679:.\Generated_Source\PSoC4/Com_Block.c ****                     Com_Block_rxBufferRead = 0u;
 680:.\Generated_Source\PSoC4/Com_Block.c ****                 }
 681:.\Generated_Source\PSoC4/Com_Block.c ****             }
 682:.\Generated_Source\PSoC4/Com_Block.c ****             else
 683:.\Generated_Source\PSoC4/Com_Block.c ****             {
 684:.\Generated_Source\PSoC4/Com_Block.c ****                 Com_Block_rxBufferFull = 0u;
 685:.\Generated_Source\PSoC4/Com_Block.c ****             }
 686:.\Generated_Source\PSoC4/Com_Block.c ****         }
 687:.\Generated_Source\PSoC4/Com_Block.c **** 
 688:.\Generated_Source\PSoC4/Com_Block.c ****         rxData = Com_Block_rxBuffer[Com_Block_rxBufferRead];
 689:.\Generated_Source\PSoC4/Com_Block.c **** 
 690:.\Generated_Source\PSoC4/Com_Block.c ****         /* Enable Interrupt. */
 691:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_EnableRxInt();
 692:.\Generated_Source\PSoC4/Com_Block.c **** 
 693:.\Generated_Source\PSoC4/Com_Block.c ****     #else /* !Com_Block_RX_SOFTWARE_BUF_ENABLED */
 694:.\Generated_Source\PSoC4/Com_Block.c **** 
 695:.\Generated_Source\PSoC4/Com_Block.c ****         rxData = CY_GET_REG16(Com_Block_RXDATA_PTR);
 635              		.loc 1 695 0
 636 0006 054A     		ldr	r2, .L41
 637 0008 BB1D     		add	r3, r7, #6
 638 000a 1288     		ldrh	r2, [r2]
 639 000c 1A80     		strh	r2, [r3]
 696:.\Generated_Source\PSoC4/Com_Block.c **** 
 697:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_RX_SOFTWARE_BUF_ENABLED */
 698:.\Generated_Source\PSoC4/Com_Block.c **** 
 699:.\Generated_Source\PSoC4/Com_Block.c ****     return (rxData);
 640              		.loc 1 699 0
 641 000e BB1D     		add	r3, r7, #6
 642 0010 1B88     		ldrh	r3, [r3]
 700:.\Generated_Source\PSoC4/Com_Block.c **** 
 701:.\Generated_Source\PSoC4/Com_Block.c **** }
 643              		.loc 1 701 0
 644 0012 181C     		mov	r0, r3
 645 0014 BD46     		mov	sp, r7
 646 0016 02B0     		add	sp, sp, #8
 647              		@ sp needed for prologue
 648 0018 80BD     		pop	{r7, pc}
 649              	.L42:
 650 001a C046     		.align	2
 651              	.L41:
 652 001c A4100F40 		.word	1074729124
 653              		.cfi_endproc
 654              	.LFE14:
 655              		.size	Com_Block_ReadRxData, .-Com_Block_ReadRxData
 656              		.section	.text.Com_Block_GetRxBufferSize,"ax",%progbits
 657              		.align	2
 658              		.global	Com_Block_GetRxBufferSize
 659              		.code	16
 660              		.thumb_func
 661              		.type	Com_Block_GetRxBufferSize, %function
 662              	Com_Block_GetRxBufferSize:
 663              	.LFB15:
 702:.\Generated_Source\PSoC4/Com_Block.c **** 
 703:.\Generated_Source\PSoC4/Com_Block.c **** 
 704:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
 705:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_GetRxBufferSize
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 25


 706:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
 707:.\Generated_Source\PSoC4/Com_Block.c **** *
 708:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
 709:.\Generated_Source\PSoC4/Com_Block.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 710:.\Generated_Source\PSoC4/Com_Block.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 711:.\Generated_Source\PSoC4/Com_Block.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 712:.\Generated_Source\PSoC4/Com_Block.c **** *
 713:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
 714:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 715:.\Generated_Source\PSoC4/Com_Block.c **** *
 716:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
 717:.\Generated_Source\PSoC4/Com_Block.c **** *  Integer count of the number of bytes/words in the RX buffer.
 718:.\Generated_Source\PSoC4/Com_Block.c **** *
 719:.\Generated_Source\PSoC4/Com_Block.c **** * Global variables:
 720:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_rxBufferWrite - used for the account of the bytes which
 721:.\Generated_Source\PSoC4/Com_Block.c **** *  have been written down in the RX software buffer.
 722:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_rxBufferRead - used for the account of the bytes which
 723:.\Generated_Source\PSoC4/Com_Block.c **** *  have been read from the RX software buffer.
 724:.\Generated_Source\PSoC4/Com_Block.c **** *
 725:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
 726:.\Generated_Source\PSoC4/Com_Block.c **** *  Allows the user to find out how full the RX Buffer is.
 727:.\Generated_Source\PSoC4/Com_Block.c **** *
 728:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
 729:.\Generated_Source\PSoC4/Com_Block.c **** uint8 Com_Block_GetRxBufferSize(void) 
 730:.\Generated_Source\PSoC4/Com_Block.c **** {
 664              		.loc 1 730 0
 665              		.cfi_startproc
 666 0000 80B5     		push	{r7, lr}
 667              	.LCFI39:
 668              		.cfi_def_cfa_offset 8
 669              		.cfi_offset 7, -8
 670              		.cfi_offset 14, -4
 671 0002 82B0     		sub	sp, sp, #8
 672              	.LCFI40:
 673              		.cfi_def_cfa_offset 16
 674 0004 00AF     		add	r7, sp, #0
 675              	.LCFI41:
 676              		.cfi_def_cfa_register 7
 731:.\Generated_Source\PSoC4/Com_Block.c ****     uint8 size;
 732:.\Generated_Source\PSoC4/Com_Block.c **** 
 733:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_RX_SOFTWARE_BUF_ENABLED)
 734:.\Generated_Source\PSoC4/Com_Block.c **** 
 735:.\Generated_Source\PSoC4/Com_Block.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 736:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_DisableRxInt();
 737:.\Generated_Source\PSoC4/Com_Block.c **** 
 738:.\Generated_Source\PSoC4/Com_Block.c ****         if(Com_Block_rxBufferRead == Com_Block_rxBufferWrite)
 739:.\Generated_Source\PSoC4/Com_Block.c ****         {
 740:.\Generated_Source\PSoC4/Com_Block.c ****             size = 0u; /* No data in RX buffer */
 741:.\Generated_Source\PSoC4/Com_Block.c ****         }
 742:.\Generated_Source\PSoC4/Com_Block.c ****         else if(Com_Block_rxBufferRead < Com_Block_rxBufferWrite)
 743:.\Generated_Source\PSoC4/Com_Block.c ****         {
 744:.\Generated_Source\PSoC4/Com_Block.c ****             size = (Com_Block_rxBufferWrite - Com_Block_rxBufferRead);
 745:.\Generated_Source\PSoC4/Com_Block.c ****         }
 746:.\Generated_Source\PSoC4/Com_Block.c ****         else
 747:.\Generated_Source\PSoC4/Com_Block.c ****         {
 748:.\Generated_Source\PSoC4/Com_Block.c ****             size = (Com_Block_RX_BUFFER_SIZE - Com_Block_rxBufferRead) + Com_Block_rxBufferWrite;
 749:.\Generated_Source\PSoC4/Com_Block.c ****         }
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 26


 750:.\Generated_Source\PSoC4/Com_Block.c **** 
 751:.\Generated_Source\PSoC4/Com_Block.c ****         /* Enable interrupt. */
 752:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_EnableRxInt();
 753:.\Generated_Source\PSoC4/Com_Block.c **** 
 754:.\Generated_Source\PSoC4/Com_Block.c ****     #else /* !Com_Block_RX_SOFTWARE_BUF_ENABLED*/
 755:.\Generated_Source\PSoC4/Com_Block.c **** 
 756:.\Generated_Source\PSoC4/Com_Block.c ****         /* We can only know if there is data in the fifo. */
 757:.\Generated_Source\PSoC4/Com_Block.c ****         size = ((Com_Block_RX_STATUS_REG & Com_Block_STS_RX_FIFO_NOT_EMPTY) != 0u) ? 1u : 0u;
 677              		.loc 1 757 0
 678 0006 094B     		ldr	r3, .L47
 679 0008 1B78     		ldrb	r3, [r3]
 680 000a DBB2     		uxtb	r3, r3
 681 000c 1A1C     		mov	r2, r3
 682 000e 0823     		mov	r3, #8
 683 0010 1340     		and	r3, r2
 684 0012 01D0     		beq	.L44
 685              		.loc 1 757 0 is_stmt 0 discriminator 1
 686 0014 0123     		mov	r3, #1
 687 0016 00E0     		b	.L45
 688              	.L44:
 689              		.loc 1 757 0 discriminator 2
 690 0018 0023     		mov	r3, #0
 691              	.L45:
 692              		.loc 1 757 0 discriminator 3
 693 001a FA1D     		add	r2, r7, #7
 694 001c 1370     		strb	r3, [r2]
 758:.\Generated_Source\PSoC4/Com_Block.c **** 
 759:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_RX_SOFTWARE_BUF_ENABLED */
 760:.\Generated_Source\PSoC4/Com_Block.c **** 
 761:.\Generated_Source\PSoC4/Com_Block.c ****     return (size);
 695              		.loc 1 761 0 is_stmt 1 discriminator 3
 696 001e FB1D     		add	r3, r7, #7
 697 0020 1B78     		ldrb	r3, [r3]
 762:.\Generated_Source\PSoC4/Com_Block.c **** }
 698              		.loc 1 762 0 discriminator 3
 699 0022 181C     		mov	r0, r3
 700 0024 BD46     		mov	sp, r7
 701 0026 02B0     		add	sp, sp, #8
 702              		@ sp needed for prologue
 703 0028 80BD     		pop	{r7, pc}
 704              	.L48:
 705 002a C046     		.align	2
 706              	.L47:
 707 002c 61000F40 		.word	1074724961
 708              		.cfi_endproc
 709              	.LFE15:
 710              		.size	Com_Block_GetRxBufferSize, .-Com_Block_GetRxBufferSize
 711              		.section	.text.Com_Block_GetTxBufferSize,"ax",%progbits
 712              		.align	2
 713              		.global	Com_Block_GetTxBufferSize
 714              		.code	16
 715              		.thumb_func
 716              		.type	Com_Block_GetTxBufferSize, %function
 717              	Com_Block_GetTxBufferSize:
 718              	.LFB16:
 763:.\Generated_Source\PSoC4/Com_Block.c **** 
 764:.\Generated_Source\PSoC4/Com_Block.c **** 
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 27


 765:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
 766:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_GetTxBufferSize
 767:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
 768:.\Generated_Source\PSoC4/Com_Block.c **** *
 769:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
 770:.\Generated_Source\PSoC4/Com_Block.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 771:.\Generated_Source\PSoC4/Com_Block.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 772:.\Generated_Source\PSoC4/Com_Block.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 773:.\Generated_Source\PSoC4/Com_Block.c **** *  Software Buffer.
 774:.\Generated_Source\PSoC4/Com_Block.c **** *
 775:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
 776:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 777:.\Generated_Source\PSoC4/Com_Block.c **** *
 778:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
 779:.\Generated_Source\PSoC4/Com_Block.c **** *  Integer count of the number of bytes/words in the TX buffer.
 780:.\Generated_Source\PSoC4/Com_Block.c **** *
 781:.\Generated_Source\PSoC4/Com_Block.c **** * Global variables:
 782:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_txBufferWrite - used for the account of the bytes which
 783:.\Generated_Source\PSoC4/Com_Block.c **** *  have been written down in the TX software buffer.
 784:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_txBufferRead - used for the account of the bytes which
 785:.\Generated_Source\PSoC4/Com_Block.c **** *  have been read from the TX software buffer.
 786:.\Generated_Source\PSoC4/Com_Block.c **** *
 787:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
 788:.\Generated_Source\PSoC4/Com_Block.c **** *  Allows the user to find out how full the TX Buffer is.
 789:.\Generated_Source\PSoC4/Com_Block.c **** *
 790:.\Generated_Source\PSoC4/Com_Block.c **** * Side Effects:
 791:.\Generated_Source\PSoC4/Com_Block.c **** *  Clear status register of the component.
 792:.\Generated_Source\PSoC4/Com_Block.c **** *
 793:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
 794:.\Generated_Source\PSoC4/Com_Block.c **** uint8  Com_Block_GetTxBufferSize(void) 
 795:.\Generated_Source\PSoC4/Com_Block.c **** {
 719              		.loc 1 795 0
 720              		.cfi_startproc
 721 0000 80B5     		push	{r7, lr}
 722              	.LCFI42:
 723              		.cfi_def_cfa_offset 8
 724              		.cfi_offset 7, -8
 725              		.cfi_offset 14, -4
 726 0002 82B0     		sub	sp, sp, #8
 727              	.LCFI43:
 728              		.cfi_def_cfa_offset 16
 729 0004 00AF     		add	r7, sp, #0
 730              	.LCFI44:
 731              		.cfi_def_cfa_register 7
 796:.\Generated_Source\PSoC4/Com_Block.c ****     uint8 size;
 797:.\Generated_Source\PSoC4/Com_Block.c **** 
 798:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_TX_SOFTWARE_BUF_ENABLED)
 799:.\Generated_Source\PSoC4/Com_Block.c **** 
 800:.\Generated_Source\PSoC4/Com_Block.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 801:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_DisableTxInt();
 802:.\Generated_Source\PSoC4/Com_Block.c **** 
 803:.\Generated_Source\PSoC4/Com_Block.c ****         if(Com_Block_txBufferRead == Com_Block_txBufferWrite)
 804:.\Generated_Source\PSoC4/Com_Block.c ****         {
 805:.\Generated_Source\PSoC4/Com_Block.c ****             size = 0u;
 806:.\Generated_Source\PSoC4/Com_Block.c ****         }
 807:.\Generated_Source\PSoC4/Com_Block.c ****         else if(Com_Block_txBufferRead < Com_Block_txBufferWrite)
 808:.\Generated_Source\PSoC4/Com_Block.c ****         {
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 28


 809:.\Generated_Source\PSoC4/Com_Block.c ****             size = (Com_Block_txBufferWrite - Com_Block_txBufferRead);
 810:.\Generated_Source\PSoC4/Com_Block.c ****         }
 811:.\Generated_Source\PSoC4/Com_Block.c ****         else
 812:.\Generated_Source\PSoC4/Com_Block.c ****         {
 813:.\Generated_Source\PSoC4/Com_Block.c ****             size = (Com_Block_TX_BUFFER_SIZE - Com_Block_txBufferRead) + Com_Block_txBufferWrite;
 814:.\Generated_Source\PSoC4/Com_Block.c ****         }
 815:.\Generated_Source\PSoC4/Com_Block.c **** 
 816:.\Generated_Source\PSoC4/Com_Block.c ****         /* Enable Interrupt. */
 817:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_EnableTxInt();
 818:.\Generated_Source\PSoC4/Com_Block.c **** 
 819:.\Generated_Source\PSoC4/Com_Block.c ****     #else /* !Com_Block_TX_SOFTWARE_BUF_ENABLED */
 820:.\Generated_Source\PSoC4/Com_Block.c **** 
 821:.\Generated_Source\PSoC4/Com_Block.c ****         size = Com_Block_TX_STATUS_REG;
 732              		.loc 1 821 0
 733 0006 0F4A     		ldr	r2, .L54
 734 0008 FB1D     		add	r3, r7, #7
 735 000a 1278     		ldrb	r2, [r2]
 736 000c 1A70     		strb	r2, [r3]
 822:.\Generated_Source\PSoC4/Com_Block.c **** 
 823:.\Generated_Source\PSoC4/Com_Block.c ****         /* Is the fifo is full. */
 824:.\Generated_Source\PSoC4/Com_Block.c ****         if((size & Com_Block_STS_TX_FIFO_EMPTY) != 0u)
 737              		.loc 1 824 0
 738 000e FB1D     		add	r3, r7, #7
 739 0010 1A78     		ldrb	r2, [r3]
 740 0012 0423     		mov	r3, #4
 741 0014 1340     		and	r3, r2
 742 0016 03D0     		beq	.L50
 825:.\Generated_Source\PSoC4/Com_Block.c ****         {
 826:.\Generated_Source\PSoC4/Com_Block.c ****             size = 0u;
 743              		.loc 1 826 0
 744 0018 FB1D     		add	r3, r7, #7
 745 001a 0022     		mov	r2, #0
 746 001c 1A70     		strb	r2, [r3]
 747 001e 0BE0     		b	.L51
 748              	.L50:
 827:.\Generated_Source\PSoC4/Com_Block.c ****         }
 828:.\Generated_Source\PSoC4/Com_Block.c ****         else if((size & Com_Block_STS_TX_FIFO_NOT_FULL) != 0u)
 749              		.loc 1 828 0
 750 0020 FB1D     		add	r3, r7, #7
 751 0022 1A78     		ldrb	r2, [r3]
 752 0024 0223     		mov	r3, #2
 753 0026 1340     		and	r3, r2
 754 0028 03D0     		beq	.L52
 829:.\Generated_Source\PSoC4/Com_Block.c ****         {
 830:.\Generated_Source\PSoC4/Com_Block.c ****             size = 1u;
 755              		.loc 1 830 0
 756 002a FB1D     		add	r3, r7, #7
 757 002c 0122     		mov	r2, #1
 758 002e 1A70     		strb	r2, [r3]
 759 0030 02E0     		b	.L51
 760              	.L52:
 831:.\Generated_Source\PSoC4/Com_Block.c ****         }
 832:.\Generated_Source\PSoC4/Com_Block.c ****         else
 833:.\Generated_Source\PSoC4/Com_Block.c ****         {
 834:.\Generated_Source\PSoC4/Com_Block.c ****             size = 4u;
 761              		.loc 1 834 0
 762 0032 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 29


 763 0034 0422     		mov	r2, #4
 764 0036 1A70     		strb	r2, [r3]
 765              	.L51:
 835:.\Generated_Source\PSoC4/Com_Block.c ****         }
 836:.\Generated_Source\PSoC4/Com_Block.c **** 
 837:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_TX_SOFTWARE_BUF_ENABLED */
 838:.\Generated_Source\PSoC4/Com_Block.c **** 
 839:.\Generated_Source\PSoC4/Com_Block.c ****     return (size);
 766              		.loc 1 839 0
 767 0038 FB1D     		add	r3, r7, #7
 768 003a 1B78     		ldrb	r3, [r3]
 840:.\Generated_Source\PSoC4/Com_Block.c **** }
 769              		.loc 1 840 0
 770 003c 181C     		mov	r0, r3
 771 003e BD46     		mov	sp, r7
 772 0040 02B0     		add	sp, sp, #8
 773              		@ sp needed for prologue
 774 0042 80BD     		pop	{r7, pc}
 775              	.L55:
 776              		.align	2
 777              	.L54:
 778 0044 63000F40 		.word	1074724963
 779              		.cfi_endproc
 780              	.LFE16:
 781              		.size	Com_Block_GetTxBufferSize, .-Com_Block_GetTxBufferSize
 782              		.section	.text.Com_Block_ClearRxBuffer,"ax",%progbits
 783              		.align	2
 784              		.global	Com_Block_ClearRxBuffer
 785              		.code	16
 786              		.thumb_func
 787              		.type	Com_Block_ClearRxBuffer, %function
 788              	Com_Block_ClearRxBuffer:
 789              	.LFB17:
 841:.\Generated_Source\PSoC4/Com_Block.c **** 
 842:.\Generated_Source\PSoC4/Com_Block.c **** 
 843:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
 844:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_ClearRxBuffer
 845:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
 846:.\Generated_Source\PSoC4/Com_Block.c **** *
 847:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
 848:.\Generated_Source\PSoC4/Com_Block.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 849:.\Generated_Source\PSoC4/Com_Block.c **** *
 850:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
 851:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 852:.\Generated_Source\PSoC4/Com_Block.c **** *
 853:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
 854:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 855:.\Generated_Source\PSoC4/Com_Block.c **** *
 856:.\Generated_Source\PSoC4/Com_Block.c **** * Global variables:
 857:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_rxBufferWrite - used for the account of the bytes which
 858:.\Generated_Source\PSoC4/Com_Block.c **** *  have been written down in the RX software buffer, modified every function
 859:.\Generated_Source\PSoC4/Com_Block.c **** *  call - resets to zero.
 860:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_rxBufferRead - used for the account of the bytes which
 861:.\Generated_Source\PSoC4/Com_Block.c **** *  have been read from the RX software buffer, modified every function call -
 862:.\Generated_Source\PSoC4/Com_Block.c **** *  resets to zero.
 863:.\Generated_Source\PSoC4/Com_Block.c **** *
 864:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 30


 865:.\Generated_Source\PSoC4/Com_Block.c **** *  Setting the pointers to zero makes the system believe there is no data to
 866:.\Generated_Source\PSoC4/Com_Block.c **** *  read and writing will resume at address 0 overwriting any data that may have
 867:.\Generated_Source\PSoC4/Com_Block.c **** *  remained in the RAM.
 868:.\Generated_Source\PSoC4/Com_Block.c **** *
 869:.\Generated_Source\PSoC4/Com_Block.c **** * Side Effects:
 870:.\Generated_Source\PSoC4/Com_Block.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 871:.\Generated_Source\PSoC4/Com_Block.c **** *
 872:.\Generated_Source\PSoC4/Com_Block.c **** * Reentrant:
 873:.\Generated_Source\PSoC4/Com_Block.c **** *  No.
 874:.\Generated_Source\PSoC4/Com_Block.c **** *
 875:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
 876:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_ClearRxBuffer(void) 
 877:.\Generated_Source\PSoC4/Com_Block.c **** {
 790              		.loc 1 877 0
 791              		.cfi_startproc
 792 0000 80B5     		push	{r7, lr}
 793              	.LCFI45:
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 00AF     		add	r7, sp, #0
 798              	.LCFI46:
 799              		.cfi_def_cfa_register 7
 878:.\Generated_Source\PSoC4/Com_Block.c ****     /* Clear Hardware RX FIFO */
 879:.\Generated_Source\PSoC4/Com_Block.c ****     while((Com_Block_RX_STATUS_REG & Com_Block_STS_RX_FIFO_NOT_EMPTY) != 0u)
 800              		.loc 1 879 0
 801 0004 01E0     		b	.L57
 802              	.L58:
 880:.\Generated_Source\PSoC4/Com_Block.c ****     {
 881:.\Generated_Source\PSoC4/Com_Block.c ****         CY_GET_REG16(Com_Block_RXDATA_PTR);
 803              		.loc 1 881 0
 804 0006 054B     		ldr	r3, .L59
 805 0008 1B88     		ldrh	r3, [r3]
 806              	.L57:
 879:.\Generated_Source\PSoC4/Com_Block.c ****     while((Com_Block_RX_STATUS_REG & Com_Block_STS_RX_FIFO_NOT_EMPTY) != 0u)
 807              		.loc 1 879 0 discriminator 1
 808 000a 054B     		ldr	r3, .L59+4
 809 000c 1B78     		ldrb	r3, [r3]
 810 000e DBB2     		uxtb	r3, r3
 811 0010 1A1C     		mov	r2, r3
 812 0012 0823     		mov	r3, #8
 813 0014 1340     		and	r3, r2
 814 0016 F6D1     		bne	.L58
 882:.\Generated_Source\PSoC4/Com_Block.c ****     }
 883:.\Generated_Source\PSoC4/Com_Block.c **** 
 884:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_RX_SOFTWARE_BUF_ENABLED)
 885:.\Generated_Source\PSoC4/Com_Block.c **** 
 886:.\Generated_Source\PSoC4/Com_Block.c ****         /* Disable interrupt to protect variables that could change on interrupt. */
 887:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_DisableRxInt();
 888:.\Generated_Source\PSoC4/Com_Block.c **** 
 889:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_rxBufferRead  = 0u;
 890:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_rxBufferWrite = 0u;
 891:.\Generated_Source\PSoC4/Com_Block.c **** 		Com_Block_rxBufferFull  = 0u;
 892:.\Generated_Source\PSoC4/Com_Block.c ****         /* Enable interrupt. */
 893:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_EnableRxInt();
 894:.\Generated_Source\PSoC4/Com_Block.c **** 
 895:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_RX_SOFTWARE_BUF_ENABLED */
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 31


 896:.\Generated_Source\PSoC4/Com_Block.c **** }
 815              		.loc 1 896 0
 816 0018 BD46     		mov	sp, r7
 817              		@ sp needed for prologue
 818 001a 80BD     		pop	{r7, pc}
 819              	.L60:
 820              		.align	2
 821              	.L59:
 822 001c A4100F40 		.word	1074729124
 823 0020 61000F40 		.word	1074724961
 824              		.cfi_endproc
 825              	.LFE17:
 826              		.size	Com_Block_ClearRxBuffer, .-Com_Block_ClearRxBuffer
 827              		.section	.text.Com_Block_ClearTxBuffer,"ax",%progbits
 828              		.align	2
 829              		.global	Com_Block_ClearTxBuffer
 830              		.code	16
 831              		.thumb_func
 832              		.type	Com_Block_ClearTxBuffer, %function
 833              	Com_Block_ClearTxBuffer:
 834              	.LFB18:
 897:.\Generated_Source\PSoC4/Com_Block.c **** 
 898:.\Generated_Source\PSoC4/Com_Block.c **** 
 899:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
 900:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_ClearTxBuffer
 901:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
 902:.\Generated_Source\PSoC4/Com_Block.c **** *
 903:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
 904:.\Generated_Source\PSoC4/Com_Block.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 905:.\Generated_Source\PSoC4/Com_Block.c **** *
 906:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
 907:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 908:.\Generated_Source\PSoC4/Com_Block.c **** *
 909:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
 910:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
 911:.\Generated_Source\PSoC4/Com_Block.c **** *
 912:.\Generated_Source\PSoC4/Com_Block.c **** * Global variables:
 913:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_txBufferWrite - used for the account of the bytes which
 914:.\Generated_Source\PSoC4/Com_Block.c **** *  have been written down in the TX software buffer, modified every function
 915:.\Generated_Source\PSoC4/Com_Block.c **** *  call - resets to zero.
 916:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_txBufferRead - used for the account of the bytes which
 917:.\Generated_Source\PSoC4/Com_Block.c **** *  have been read from the TX software buffer, modified every function call -
 918:.\Generated_Source\PSoC4/Com_Block.c **** *  resets to zero.
 919:.\Generated_Source\PSoC4/Com_Block.c **** *
 920:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
 921:.\Generated_Source\PSoC4/Com_Block.c **** *  Setting the pointers to zero makes the system believe there is no data to
 922:.\Generated_Source\PSoC4/Com_Block.c **** *  read and writing will resume at address 0 overwriting any data that may have
 923:.\Generated_Source\PSoC4/Com_Block.c **** *  remained in the RAM.
 924:.\Generated_Source\PSoC4/Com_Block.c **** *
 925:.\Generated_Source\PSoC4/Com_Block.c **** * Side Effects:
 926:.\Generated_Source\PSoC4/Com_Block.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 927:.\Generated_Source\PSoC4/Com_Block.c **** *  overwritten.
 928:.\Generated_Source\PSoC4/Com_Block.c **** *
 929:.\Generated_Source\PSoC4/Com_Block.c **** * Reentrant:
 930:.\Generated_Source\PSoC4/Com_Block.c **** *  No.
 931:.\Generated_Source\PSoC4/Com_Block.c **** *
 932:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 32


 933:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_ClearTxBuffer(void) 
 934:.\Generated_Source\PSoC4/Com_Block.c **** {
 835              		.loc 1 934 0
 836              		.cfi_startproc
 837 0000 90B5     		push	{r4, r7, lr}
 838              	.LCFI47:
 839              		.cfi_def_cfa_offset 12
 840              		.cfi_offset 4, -12
 841              		.cfi_offset 7, -8
 842              		.cfi_offset 14, -4
 843 0002 83B0     		sub	sp, sp, #12
 844              	.LCFI48:
 845              		.cfi_def_cfa_offset 24
 846 0004 00AF     		add	r7, sp, #0
 847              	.LCFI49:
 848              		.cfi_def_cfa_register 7
 935:.\Generated_Source\PSoC4/Com_Block.c ****     uint8 enableInterrupts;
 936:.\Generated_Source\PSoC4/Com_Block.c **** 
 937:.\Generated_Source\PSoC4/Com_Block.c ****     /* Clear Hardware TX FIFO */
 938:.\Generated_Source\PSoC4/Com_Block.c ****     enableInterrupts = CyEnterCriticalSection();
 849              		.loc 1 938 0
 850 0006 FC1D     		add	r4, r7, #7
 851 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 852 000c 031C     		mov	r3, r0
 853 000e 2370     		strb	r3, [r4]
 939:.\Generated_Source\PSoC4/Com_Block.c **** 
 940:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_DATA_WIDTH <= 8u)
 941:.\Generated_Source\PSoC4/Com_Block.c **** 
 942:.\Generated_Source\PSoC4/Com_Block.c ****         /* Clear TX FIFO */
 943:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_TX_AUX_CONTROL_DP0_REG |= (uint8)Com_Block_FIFO_CLR;
 944:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_TX_AUX_CONTROL_DP0_REG &= (uint8)~Com_Block_FIFO_CLR;
 945:.\Generated_Source\PSoC4/Com_Block.c **** 
 946:.\Generated_Source\PSoC4/Com_Block.c ****     #else
 947:.\Generated_Source\PSoC4/Com_Block.c **** 
 948:.\Generated_Source\PSoC4/Com_Block.c ****         /* Clear TX FIFO */
 949:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_TX_AUX_CONTROL_DP0_REG |= (uint8)Com_Block_FIFO_CLR;
 854              		.loc 1 949 0
 855 0010 134B     		ldr	r3, .L62
 856 0012 134A     		ldr	r2, .L62
 857 0014 1278     		ldrb	r2, [r2]
 858 0016 D2B2     		uxtb	r2, r2
 859 0018 0321     		mov	r1, #3
 860 001a 0A43     		orr	r2, r1
 861 001c D2B2     		uxtb	r2, r2
 862 001e 1A70     		strb	r2, [r3]
 950:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_TX_AUX_CONTROL_DP0_REG &= (uint8)~Com_Block_FIFO_CLR;
 863              		.loc 1 950 0
 864 0020 0F4B     		ldr	r3, .L62
 865 0022 0F4A     		ldr	r2, .L62
 866 0024 1278     		ldrb	r2, [r2]
 867 0026 D2B2     		uxtb	r2, r2
 868 0028 0321     		mov	r1, #3
 869 002a 8A43     		bic	r2, r1
 870 002c D2B2     		uxtb	r2, r2
 871 002e 1A70     		strb	r2, [r3]
 951:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_TX_AUX_CONTROL_DP1_REG |= (uint8)Com_Block_FIFO_CLR;
 872              		.loc 1 951 0
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 33


 873 0030 0C4B     		ldr	r3, .L62+4
 874 0032 0C4A     		ldr	r2, .L62+4
 875 0034 1278     		ldrb	r2, [r2]
 876 0036 D2B2     		uxtb	r2, r2
 877 0038 0321     		mov	r1, #3
 878 003a 0A43     		orr	r2, r1
 879 003c D2B2     		uxtb	r2, r2
 880 003e 1A70     		strb	r2, [r3]
 952:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_TX_AUX_CONTROL_DP1_REG &= (uint8)~Com_Block_FIFO_CLR;
 881              		.loc 1 952 0
 882 0040 084B     		ldr	r3, .L62+4
 883 0042 084A     		ldr	r2, .L62+4
 884 0044 1278     		ldrb	r2, [r2]
 885 0046 D2B2     		uxtb	r2, r2
 886 0048 0321     		mov	r1, #3
 887 004a 8A43     		bic	r2, r1
 888 004c D2B2     		uxtb	r2, r2
 889 004e 1A70     		strb	r2, [r3]
 953:.\Generated_Source\PSoC4/Com_Block.c **** 
 954:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_DATA_WIDTH > 8u */
 955:.\Generated_Source\PSoC4/Com_Block.c **** 
 956:.\Generated_Source\PSoC4/Com_Block.c ****     CyExitCriticalSection(enableInterrupts);
 890              		.loc 1 956 0
 891 0050 FB1D     		add	r3, r7, #7
 892 0052 1B78     		ldrb	r3, [r3]
 893 0054 181C     		mov	r0, r3
 894 0056 FFF7FEFF 		bl	CyExitCriticalSection
 957:.\Generated_Source\PSoC4/Com_Block.c **** 
 958:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_TX_SOFTWARE_BUF_ENABLED)
 959:.\Generated_Source\PSoC4/Com_Block.c **** 
 960:.\Generated_Source\PSoC4/Com_Block.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 961:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_DisableTxInt();
 962:.\Generated_Source\PSoC4/Com_Block.c **** 
 963:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_txBufferRead  = 0u;
 964:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_txBufferWrite = 0u;
 965:.\Generated_Source\PSoC4/Com_Block.c **** 		Com_Block_txBufferFull  = 0u;
 966:.\Generated_Source\PSoC4/Com_Block.c **** 		
 967:.\Generated_Source\PSoC4/Com_Block.c ****         /* If Buffer is empty then disable TX FIFO status interrupt */
 968:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_TX_STATUS_MASK_REG &= (uint8)~Com_Block_STS_TX_FIFO_NOT_FULL;
 969:.\Generated_Source\PSoC4/Com_Block.c **** 
 970:.\Generated_Source\PSoC4/Com_Block.c ****         /* Enable Interrupt. */
 971:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_EnableTxInt();
 972:.\Generated_Source\PSoC4/Com_Block.c **** 
 973:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_TX_SOFTWARE_BUF_ENABLED */
 974:.\Generated_Source\PSoC4/Com_Block.c **** }
 895              		.loc 1 974 0
 896 005a BD46     		mov	sp, r7
 897 005c 03B0     		add	sp, sp, #12
 898              		@ sp needed for prologue
 899 005e 90BD     		pop	{r4, r7, pc}
 900              	.L63:
 901              		.align	2
 902              	.L62:
 903 0060 92000F40 		.word	1074725010
 904 0064 93000F40 		.word	1074725011
 905              		.cfi_endproc
 906              	.LFE18:
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 34


 907              		.size	Com_Block_ClearTxBuffer, .-Com_Block_ClearTxBuffer
 908              		.section	.text.Com_Block_PutArray,"ax",%progbits
 909              		.align	2
 910              		.global	Com_Block_PutArray
 911              		.code	16
 912              		.thumb_func
 913              		.type	Com_Block_PutArray, %function
 914              	Com_Block_PutArray:
 915              	.LFB19:
 975:.\Generated_Source\PSoC4/Com_Block.c **** 
 976:.\Generated_Source\PSoC4/Com_Block.c **** 
 977:.\Generated_Source\PSoC4/Com_Block.c **** #if (Com_Block_BIDIRECTIONAL_MODE != 0u)
 978:.\Generated_Source\PSoC4/Com_Block.c **** 
 979:.\Generated_Source\PSoC4/Com_Block.c ****     /*******************************************************************************
 980:.\Generated_Source\PSoC4/Com_Block.c ****     * Function Name: Com_Block_TxEnable
 981:.\Generated_Source\PSoC4/Com_Block.c ****     ********************************************************************************
 982:.\Generated_Source\PSoC4/Com_Block.c ****     *
 983:.\Generated_Source\PSoC4/Com_Block.c ****     * Summary:
 984:.\Generated_Source\PSoC4/Com_Block.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
 985:.\Generated_Source\PSoC4/Com_Block.c ****     *  will set the bi-directional pin to transmit.
 986:.\Generated_Source\PSoC4/Com_Block.c ****     *
 987:.\Generated_Source\PSoC4/Com_Block.c ****     * Parameters:
 988:.\Generated_Source\PSoC4/Com_Block.c ****     *  None.
 989:.\Generated_Source\PSoC4/Com_Block.c ****     *
 990:.\Generated_Source\PSoC4/Com_Block.c ****     * Return:
 991:.\Generated_Source\PSoC4/Com_Block.c ****     *  None.
 992:.\Generated_Source\PSoC4/Com_Block.c ****     *
 993:.\Generated_Source\PSoC4/Com_Block.c ****     *******************************************************************************/
 994:.\Generated_Source\PSoC4/Com_Block.c ****     void Com_Block_TxEnable(void) 
 995:.\Generated_Source\PSoC4/Com_Block.c ****     {
 996:.\Generated_Source\PSoC4/Com_Block.c ****             Com_Block_CONTROL_REG |= Com_Block_CTRL_TX_SIGNAL_EN;
 997:.\Generated_Source\PSoC4/Com_Block.c ****     }
 998:.\Generated_Source\PSoC4/Com_Block.c **** 
 999:.\Generated_Source\PSoC4/Com_Block.c **** 
1000:.\Generated_Source\PSoC4/Com_Block.c ****     /*******************************************************************************
1001:.\Generated_Source\PSoC4/Com_Block.c ****     * Function Name: Com_Block_TxDisable
1002:.\Generated_Source\PSoC4/Com_Block.c ****     ********************************************************************************
1003:.\Generated_Source\PSoC4/Com_Block.c ****     *
1004:.\Generated_Source\PSoC4/Com_Block.c ****     * Summary:
1005:.\Generated_Source\PSoC4/Com_Block.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
1006:.\Generated_Source\PSoC4/Com_Block.c ****     *  will set the bi-directional pin to receive.
1007:.\Generated_Source\PSoC4/Com_Block.c ****     *
1008:.\Generated_Source\PSoC4/Com_Block.c ****     * Parameters:
1009:.\Generated_Source\PSoC4/Com_Block.c ****     *  None.
1010:.\Generated_Source\PSoC4/Com_Block.c ****     *
1011:.\Generated_Source\PSoC4/Com_Block.c ****     * Return:
1012:.\Generated_Source\PSoC4/Com_Block.c ****     *  None.
1013:.\Generated_Source\PSoC4/Com_Block.c ****     *
1014:.\Generated_Source\PSoC4/Com_Block.c ****     *******************************************************************************/
1015:.\Generated_Source\PSoC4/Com_Block.c ****     void Com_Block_TxDisable(void) 
1016:.\Generated_Source\PSoC4/Com_Block.c ****     {
1017:.\Generated_Source\PSoC4/Com_Block.c ****             Com_Block_CONTROL_REG &= (uint8)~Com_Block_CTRL_TX_SIGNAL_EN;
1018:.\Generated_Source\PSoC4/Com_Block.c ****     }
1019:.\Generated_Source\PSoC4/Com_Block.c **** 
1020:.\Generated_Source\PSoC4/Com_Block.c **** #endif /* Com_Block_BIDIRECTIONAL_MODE != 0u */
1021:.\Generated_Source\PSoC4/Com_Block.c **** 
1022:.\Generated_Source\PSoC4/Com_Block.c **** 
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 35


1023:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
1024:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_PutArray
1025:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
1026:.\Generated_Source\PSoC4/Com_Block.c **** *
1027:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
1028:.\Generated_Source\PSoC4/Com_Block.c **** *  Write available data from RAM/ROM to the TX buffer while space is available
1029:.\Generated_Source\PSoC4/Com_Block.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer. If
1030:.\Generated_Source\PSoC4/Com_Block.c **** *  used Mode 00 or 01 before PutArray() function should be called
1031:.\Generated_Source\PSoC4/Com_Block.c **** *  WriteTxDataZero() function.
1032:.\Generated_Source\PSoC4/Com_Block.c **** *
1033:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
1034:.\Generated_Source\PSoC4/Com_Block.c **** *  *buffer: Pointer to the location in RAM containing the data to send
1035:.\Generated_Source\PSoC4/Com_Block.c **** *  byteCount: The number of bytes to move to the transmit buffer.
1036:.\Generated_Source\PSoC4/Com_Block.c **** *
1037:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
1038:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
1039:.\Generated_Source\PSoC4/Com_Block.c **** *
1040:.\Generated_Source\PSoC4/Com_Block.c **** * Side Effects:
1041:.\Generated_Source\PSoC4/Com_Block.c **** *  Will stay in this routine until all data has been sent.  May get locked in
1042:.\Generated_Source\PSoC4/Com_Block.c **** *  this loop if data is not being initiated by the master if there is not
1043:.\Generated_Source\PSoC4/Com_Block.c **** *  enough room in the TX FIFO.
1044:.\Generated_Source\PSoC4/Com_Block.c **** *
1045:.\Generated_Source\PSoC4/Com_Block.c **** * Reentrant:
1046:.\Generated_Source\PSoC4/Com_Block.c **** *  No.
1047:.\Generated_Source\PSoC4/Com_Block.c **** *
1048:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
1049:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_PutArray(const uint16 buffer[], uint8 byteCount)
1050:.\Generated_Source\PSoC4/Com_Block.c ****                                                                     
1051:.\Generated_Source\PSoC4/Com_Block.c **** {
 916              		.loc 1 1051 0
 917              		.cfi_startproc
 918 0000 80B5     		push	{r7, lr}
 919              	.LCFI50:
 920              		.cfi_def_cfa_offset 8
 921              		.cfi_offset 7, -8
 922              		.cfi_offset 14, -4
 923 0002 84B0     		sub	sp, sp, #16
 924              	.LCFI51:
 925              		.cfi_def_cfa_offset 24
 926 0004 00AF     		add	r7, sp, #0
 927              	.LCFI52:
 928              		.cfi_def_cfa_register 7
 929 0006 7860     		str	r0, [r7, #4]
 930 0008 0A1C     		mov	r2, r1
 931 000a FB1C     		add	r3, r7, #3
 932 000c 1A70     		strb	r2, [r3]
1052:.\Generated_Source\PSoC4/Com_Block.c ****     uint8 bufIndex;
1053:.\Generated_Source\PSoC4/Com_Block.c ****     bufIndex = 0u;
 933              		.loc 1 1053 0
 934 000e 3B1C     		mov	r3, r7
 935 0010 0F33     		add	r3, r3, #15
 936 0012 0022     		mov	r2, #0
 937 0014 1A70     		strb	r2, [r3]
1054:.\Generated_Source\PSoC4/Com_Block.c **** 
1055:.\Generated_Source\PSoC4/Com_Block.c ****     while(byteCount > 0u)
 938              		.loc 1 1055 0
 939 0016 15E0     		b	.L65
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 36


 940              	.L66:
1056:.\Generated_Source\PSoC4/Com_Block.c ****     {
1057:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_WriteTxData(buffer[bufIndex]);
 941              		.loc 1 1057 0
 942 0018 3B1C     		mov	r3, r7
 943 001a 0F33     		add	r3, r3, #15
 944 001c 1B78     		ldrb	r3, [r3]
 945 001e 5B00     		lsl	r3, r3, #1
 946 0020 7A68     		ldr	r2, [r7, #4]
 947 0022 D318     		add	r3, r2, r3
 948 0024 1B88     		ldrh	r3, [r3]
 949 0026 181C     		mov	r0, r3
 950 0028 FFF7FEFF 		bl	Com_Block_WriteTxData
1058:.\Generated_Source\PSoC4/Com_Block.c ****         bufIndex++;
 951              		.loc 1 1058 0
 952 002c 3B1C     		mov	r3, r7
 953 002e 0F33     		add	r3, r3, #15
 954 0030 3A1C     		mov	r2, r7
 955 0032 0F32     		add	r2, r2, #15
 956 0034 1278     		ldrb	r2, [r2]
 957 0036 0132     		add	r2, r2, #1
 958 0038 1A70     		strb	r2, [r3]
1059:.\Generated_Source\PSoC4/Com_Block.c ****         byteCount--;
 959              		.loc 1 1059 0
 960 003a FB1C     		add	r3, r7, #3
 961 003c FA1C     		add	r2, r7, #3
 962 003e 1278     		ldrb	r2, [r2]
 963 0040 013A     		sub	r2, r2, #1
 964 0042 1A70     		strb	r2, [r3]
 965              	.L65:
1055:.\Generated_Source\PSoC4/Com_Block.c ****     while(byteCount > 0u)
 966              		.loc 1 1055 0 discriminator 1
 967 0044 FB1C     		add	r3, r7, #3
 968 0046 1B78     		ldrb	r3, [r3]
 969 0048 002B     		cmp	r3, #0
 970 004a E5D1     		bne	.L66
1060:.\Generated_Source\PSoC4/Com_Block.c ****     }
1061:.\Generated_Source\PSoC4/Com_Block.c **** }
 971              		.loc 1 1061 0
 972 004c BD46     		mov	sp, r7
 973 004e 04B0     		add	sp, sp, #16
 974              		@ sp needed for prologue
 975 0050 80BD     		pop	{r7, pc}
 976              		.cfi_endproc
 977              	.LFE19:
 978              		.size	Com_Block_PutArray, .-Com_Block_PutArray
 979 0052 C046     		.section	.text.Com_Block_ClearFIFO,"ax",%progbits
 980              		.align	2
 981              		.global	Com_Block_ClearFIFO
 982              		.code	16
 983              		.thumb_func
 984              		.type	Com_Block_ClearFIFO, %function
 985              	Com_Block_ClearFIFO:
 986              	.LFB20:
1062:.\Generated_Source\PSoC4/Com_Block.c **** 
1063:.\Generated_Source\PSoC4/Com_Block.c **** 
1064:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 37


1065:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_ClearFIFO
1066:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
1067:.\Generated_Source\PSoC4/Com_Block.c **** *
1068:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
1069:.\Generated_Source\PSoC4/Com_Block.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
1070:.\Generated_Source\PSoC4/Com_Block.c **** *
1071:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
1072:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
1073:.\Generated_Source\PSoC4/Com_Block.c **** *
1074:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
1075:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
1076:.\Generated_Source\PSoC4/Com_Block.c **** *
1077:.\Generated_Source\PSoC4/Com_Block.c **** * Side Effects:
1078:.\Generated_Source\PSoC4/Com_Block.c **** *  Clear status register of the component.
1079:.\Generated_Source\PSoC4/Com_Block.c **** *
1080:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
1081:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_ClearFIFO(void) 
1082:.\Generated_Source\PSoC4/Com_Block.c **** {
 987              		.loc 1 1082 0
 988              		.cfi_startproc
 989 0000 90B5     		push	{r4, r7, lr}
 990              	.LCFI53:
 991              		.cfi_def_cfa_offset 12
 992              		.cfi_offset 4, -12
 993              		.cfi_offset 7, -8
 994              		.cfi_offset 14, -4
 995 0002 83B0     		sub	sp, sp, #12
 996              	.LCFI54:
 997              		.cfi_def_cfa_offset 24
 998 0004 00AF     		add	r7, sp, #0
 999              	.LCFI55:
 1000              		.cfi_def_cfa_register 7
1083:.\Generated_Source\PSoC4/Com_Block.c ****     uint8 enableInterrupts;
1084:.\Generated_Source\PSoC4/Com_Block.c **** 
1085:.\Generated_Source\PSoC4/Com_Block.c ****     while((Com_Block_RX_STATUS_REG & Com_Block_STS_RX_FIFO_NOT_EMPTY) != 0u)
 1001              		.loc 1 1085 0
 1002 0006 01E0     		b	.L68
 1003              	.L69:
1086:.\Generated_Source\PSoC4/Com_Block.c ****     {
1087:.\Generated_Source\PSoC4/Com_Block.c ****         CY_GET_REG16(Com_Block_RXDATA_PTR);
 1004              		.loc 1 1087 0
 1005 0008 1A4B     		ldr	r3, .L70
 1006 000a 1B88     		ldrh	r3, [r3]
 1007              	.L68:
1085:.\Generated_Source\PSoC4/Com_Block.c ****     while((Com_Block_RX_STATUS_REG & Com_Block_STS_RX_FIFO_NOT_EMPTY) != 0u)
 1008              		.loc 1 1085 0 discriminator 1
 1009 000c 1A4B     		ldr	r3, .L70+4
 1010 000e 1B78     		ldrb	r3, [r3]
 1011 0010 DBB2     		uxtb	r3, r3
 1012 0012 1A1C     		mov	r2, r3
 1013 0014 0823     		mov	r3, #8
 1014 0016 1340     		and	r3, r2
 1015 0018 F6D1     		bne	.L69
1088:.\Generated_Source\PSoC4/Com_Block.c ****     }
1089:.\Generated_Source\PSoC4/Com_Block.c **** 
1090:.\Generated_Source\PSoC4/Com_Block.c ****     enableInterrupts = CyEnterCriticalSection();
 1016              		.loc 1 1090 0
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 38


 1017 001a FC1D     		add	r4, r7, #7
 1018 001c FFF7FEFF 		bl	CyEnterCriticalSection
 1019 0020 031C     		mov	r3, r0
 1020 0022 2370     		strb	r3, [r4]
1091:.\Generated_Source\PSoC4/Com_Block.c **** 
1092:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_DATA_WIDTH <= 8u)
1093:.\Generated_Source\PSoC4/Com_Block.c **** 
1094:.\Generated_Source\PSoC4/Com_Block.c ****         /* Clear TX FIFO */
1095:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_TX_AUX_CONTROL_DP0_REG |= (uint8)Com_Block_FIFO_CLR;
1096:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_TX_AUX_CONTROL_DP0_REG &= (uint8)~Com_Block_FIFO_CLR;
1097:.\Generated_Source\PSoC4/Com_Block.c **** 
1098:.\Generated_Source\PSoC4/Com_Block.c ****     #else
1099:.\Generated_Source\PSoC4/Com_Block.c **** 
1100:.\Generated_Source\PSoC4/Com_Block.c ****         /* Clear TX FIFO */
1101:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_TX_AUX_CONTROL_DP0_REG |= (uint8)Com_Block_FIFO_CLR;
 1021              		.loc 1 1101 0
 1022 0024 154B     		ldr	r3, .L70+8
 1023 0026 154A     		ldr	r2, .L70+8
 1024 0028 1278     		ldrb	r2, [r2]
 1025 002a D2B2     		uxtb	r2, r2
 1026 002c 0321     		mov	r1, #3
 1027 002e 0A43     		orr	r2, r1
 1028 0030 D2B2     		uxtb	r2, r2
 1029 0032 1A70     		strb	r2, [r3]
1102:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_TX_AUX_CONTROL_DP0_REG &= (uint8)~Com_Block_FIFO_CLR;
 1030              		.loc 1 1102 0
 1031 0034 114B     		ldr	r3, .L70+8
 1032 0036 114A     		ldr	r2, .L70+8
 1033 0038 1278     		ldrb	r2, [r2]
 1034 003a D2B2     		uxtb	r2, r2
 1035 003c 0321     		mov	r1, #3
 1036 003e 8A43     		bic	r2, r1
 1037 0040 D2B2     		uxtb	r2, r2
 1038 0042 1A70     		strb	r2, [r3]
1103:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_TX_AUX_CONTROL_DP1_REG |= (uint8)Com_Block_FIFO_CLR;
 1039              		.loc 1 1103 0
 1040 0044 0E4B     		ldr	r3, .L70+12
 1041 0046 0E4A     		ldr	r2, .L70+12
 1042 0048 1278     		ldrb	r2, [r2]
 1043 004a D2B2     		uxtb	r2, r2
 1044 004c 0321     		mov	r1, #3
 1045 004e 0A43     		orr	r2, r1
 1046 0050 D2B2     		uxtb	r2, r2
 1047 0052 1A70     		strb	r2, [r3]
1104:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_TX_AUX_CONTROL_DP1_REG &= (uint8)~Com_Block_FIFO_CLR;
 1048              		.loc 1 1104 0
 1049 0054 0A4B     		ldr	r3, .L70+12
 1050 0056 0A4A     		ldr	r2, .L70+12
 1051 0058 1278     		ldrb	r2, [r2]
 1052 005a D2B2     		uxtb	r2, r2
 1053 005c 0321     		mov	r1, #3
 1054 005e 8A43     		bic	r2, r1
 1055 0060 D2B2     		uxtb	r2, r2
 1056 0062 1A70     		strb	r2, [r3]
1105:.\Generated_Source\PSoC4/Com_Block.c **** 
1106:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_DATA_WIDTH <= 8u */
1107:.\Generated_Source\PSoC4/Com_Block.c **** 
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 39


1108:.\Generated_Source\PSoC4/Com_Block.c ****     CyExitCriticalSection(enableInterrupts);
 1057              		.loc 1 1108 0
 1058 0064 FB1D     		add	r3, r7, #7
 1059 0066 1B78     		ldrb	r3, [r3]
 1060 0068 181C     		mov	r0, r3
 1061 006a FFF7FEFF 		bl	CyExitCriticalSection
1109:.\Generated_Source\PSoC4/Com_Block.c **** }
 1062              		.loc 1 1109 0
 1063 006e BD46     		mov	sp, r7
 1064 0070 03B0     		add	sp, sp, #12
 1065              		@ sp needed for prologue
 1066 0072 90BD     		pop	{r4, r7, pc}
 1067              	.L71:
 1068              		.align	2
 1069              	.L70:
 1070 0074 A4100F40 		.word	1074729124
 1071 0078 61000F40 		.word	1074724961
 1072 007c 92000F40 		.word	1074725010
 1073 0080 93000F40 		.word	1074725011
 1074              		.cfi_endproc
 1075              	.LFE20:
 1076              		.size	Com_Block_ClearFIFO, .-Com_Block_ClearFIFO
 1077              		.section	.text.Com_Block_EnableInt,"ax",%progbits
 1078              		.align	2
 1079              		.global	Com_Block_EnableInt
 1080              		.code	16
 1081              		.thumb_func
 1082              		.type	Com_Block_EnableInt, %function
 1083              	Com_Block_EnableInt:
 1084              	.LFB21:
1110:.\Generated_Source\PSoC4/Com_Block.c **** 
1111:.\Generated_Source\PSoC4/Com_Block.c **** 
1112:.\Generated_Source\PSoC4/Com_Block.c **** /* Following functions are for version Compatibility, they are obsolete.
1113:.\Generated_Source\PSoC4/Com_Block.c **** *  Please do not use it in new projects.
1114:.\Generated_Source\PSoC4/Com_Block.c **** */
1115:.\Generated_Source\PSoC4/Com_Block.c **** 
1116:.\Generated_Source\PSoC4/Com_Block.c **** 
1117:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
1118:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_EnableInt
1119:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
1120:.\Generated_Source\PSoC4/Com_Block.c **** *
1121:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
1122:.\Generated_Source\PSoC4/Com_Block.c **** *  Enable internal interrupt generation.
1123:.\Generated_Source\PSoC4/Com_Block.c **** *
1124:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
1125:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
1126:.\Generated_Source\PSoC4/Com_Block.c **** *
1127:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
1128:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
1129:.\Generated_Source\PSoC4/Com_Block.c **** *
1130:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
1131:.\Generated_Source\PSoC4/Com_Block.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1132:.\Generated_Source\PSoC4/Com_Block.c **** *
1133:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
1134:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_EnableInt(void) 
1135:.\Generated_Source\PSoC4/Com_Block.c **** {
 1085              		.loc 1 1135 0
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 40


 1086              		.cfi_startproc
 1087 0000 80B5     		push	{r7, lr}
 1088              	.LCFI56:
 1089              		.cfi_def_cfa_offset 8
 1090              		.cfi_offset 7, -8
 1091              		.cfi_offset 14, -4
 1092 0002 00AF     		add	r7, sp, #0
 1093              	.LCFI57:
 1094              		.cfi_def_cfa_register 7
1136:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_INTERNAL_TX_INT_ENABLED)
1137:.\Generated_Source\PSoC4/Com_Block.c ****         CyIntEnable(Com_Block_TX_ISR_NUMBER);
1138:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_INTERNAL_TX_INT_ENABLED */
1139:.\Generated_Source\PSoC4/Com_Block.c **** 
1140:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_INTERNAL_RX_INT_ENABLED)
1141:.\Generated_Source\PSoC4/Com_Block.c ****         CyIntEnable(Com_Block_RX_ISR_NUMBER);
1142:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_INTERNAL_RX_INT_ENABLED */
1143:.\Generated_Source\PSoC4/Com_Block.c **** }
 1095              		.loc 1 1143 0
 1096 0004 BD46     		mov	sp, r7
 1097              		@ sp needed for prologue
 1098 0006 80BD     		pop	{r7, pc}
 1099              		.cfi_endproc
 1100              	.LFE21:
 1101              		.size	Com_Block_EnableInt, .-Com_Block_EnableInt
 1102              		.section	.text.Com_Block_DisableInt,"ax",%progbits
 1103              		.align	2
 1104              		.global	Com_Block_DisableInt
 1105              		.code	16
 1106              		.thumb_func
 1107              		.type	Com_Block_DisableInt, %function
 1108              	Com_Block_DisableInt:
 1109              	.LFB22:
1144:.\Generated_Source\PSoC4/Com_Block.c **** 
1145:.\Generated_Source\PSoC4/Com_Block.c **** 
1146:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
1147:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_DisableInt
1148:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
1149:.\Generated_Source\PSoC4/Com_Block.c **** *
1150:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
1151:.\Generated_Source\PSoC4/Com_Block.c **** *  Disable internal interrupt generation.
1152:.\Generated_Source\PSoC4/Com_Block.c **** *
1153:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
1154:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
1155:.\Generated_Source\PSoC4/Com_Block.c **** *
1156:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
1157:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
1158:.\Generated_Source\PSoC4/Com_Block.c **** *
1159:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
1160:.\Generated_Source\PSoC4/Com_Block.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1161:.\Generated_Source\PSoC4/Com_Block.c **** *
1162:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
1163:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_DisableInt(void) 
1164:.\Generated_Source\PSoC4/Com_Block.c **** {
 1110              		.loc 1 1164 0
 1111              		.cfi_startproc
 1112 0000 80B5     		push	{r7, lr}
 1113              	.LCFI58:
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 41


 1114              		.cfi_def_cfa_offset 8
 1115              		.cfi_offset 7, -8
 1116              		.cfi_offset 14, -4
 1117 0002 00AF     		add	r7, sp, #0
 1118              	.LCFI59:
 1119              		.cfi_def_cfa_register 7
1165:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_INTERNAL_TX_INT_ENABLED)
1166:.\Generated_Source\PSoC4/Com_Block.c ****         CyIntDisable(Com_Block_TX_ISR_NUMBER);
1167:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_INTERNAL_TX_INT_ENABLED */
1168:.\Generated_Source\PSoC4/Com_Block.c **** 
1169:.\Generated_Source\PSoC4/Com_Block.c ****     #if(Com_Block_INTERNAL_RX_INT_ENABLED)
1170:.\Generated_Source\PSoC4/Com_Block.c ****         CyIntDisable(Com_Block_RX_ISR_NUMBER);
1171:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* Com_Block_INTERNAL_RX_INT_ENABLED */
1172:.\Generated_Source\PSoC4/Com_Block.c **** }
 1120              		.loc 1 1172 0
 1121 0004 BD46     		mov	sp, r7
 1122              		@ sp needed for prologue
 1123 0006 80BD     		pop	{r7, pc}
 1124              		.cfi_endproc
 1125              	.LFE22:
 1126              		.size	Com_Block_DisableInt, .-Com_Block_DisableInt
 1127              		.section	.text.Com_Block_SetInterruptMode,"ax",%progbits
 1128              		.align	2
 1129              		.global	Com_Block_SetInterruptMode
 1130              		.code	16
 1131              		.thumb_func
 1132              		.type	Com_Block_SetInterruptMode, %function
 1133              	Com_Block_SetInterruptMode:
 1134              	.LFB23:
1173:.\Generated_Source\PSoC4/Com_Block.c **** 
1174:.\Generated_Source\PSoC4/Com_Block.c **** 
1175:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
1176:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_SetInterruptMode
1177:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
1178:.\Generated_Source\PSoC4/Com_Block.c **** *
1179:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
1180:.\Generated_Source\PSoC4/Com_Block.c **** *  Configure which status bits trigger an interrupt event.
1181:.\Generated_Source\PSoC4/Com_Block.c **** *
1182:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
1183:.\Generated_Source\PSoC4/Com_Block.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1184:.\Generated_Source\PSoC4/Com_Block.c **** *  header file).
1185:.\Generated_Source\PSoC4/Com_Block.c **** *
1186:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
1187:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
1188:.\Generated_Source\PSoC4/Com_Block.c **** *
1189:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
1190:.\Generated_Source\PSoC4/Com_Block.c **** *  Enables the output of specific status bits to the interrupt controller.
1191:.\Generated_Source\PSoC4/Com_Block.c **** *
1192:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
1193:.\Generated_Source\PSoC4/Com_Block.c **** void Com_Block_SetInterruptMode(uint8 intSrc) 
1194:.\Generated_Source\PSoC4/Com_Block.c **** {
 1135              		.loc 1 1194 0
 1136              		.cfi_startproc
 1137 0000 80B5     		push	{r7, lr}
 1138              	.LCFI60:
 1139              		.cfi_def_cfa_offset 8
 1140              		.cfi_offset 7, -8
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 42


 1141              		.cfi_offset 14, -4
 1142 0002 82B0     		sub	sp, sp, #8
 1143              	.LCFI61:
 1144              		.cfi_def_cfa_offset 16
 1145 0004 00AF     		add	r7, sp, #0
 1146              	.LCFI62:
 1147              		.cfi_def_cfa_register 7
 1148 0006 021C     		mov	r2, r0
 1149 0008 FB1D     		add	r3, r7, #7
 1150 000a 1A70     		strb	r2, [r3]
1195:.\Generated_Source\PSoC4/Com_Block.c ****     Com_Block_TX_STATUS_MASK_REG  = intSrc;
 1151              		.loc 1 1195 0
 1152 000c 054B     		ldr	r3, .L75
 1153 000e FA1D     		add	r2, r7, #7
 1154 0010 1278     		ldrb	r2, [r2]
 1155 0012 1A70     		strb	r2, [r3]
1196:.\Generated_Source\PSoC4/Com_Block.c ****     Com_Block_RX_STATUS_MASK_REG  = intSrc;
 1156              		.loc 1 1196 0
 1157 0014 044B     		ldr	r3, .L75+4
 1158 0016 FA1D     		add	r2, r7, #7
 1159 0018 1278     		ldrb	r2, [r2]
 1160 001a 1A70     		strb	r2, [r3]
1197:.\Generated_Source\PSoC4/Com_Block.c **** }
 1161              		.loc 1 1197 0
 1162 001c BD46     		mov	sp, r7
 1163 001e 02B0     		add	sp, sp, #8
 1164              		@ sp needed for prologue
 1165 0020 80BD     		pop	{r7, pc}
 1166              	.L76:
 1167 0022 C046     		.align	2
 1168              	.L75:
 1169 0024 83000F40 		.word	1074724995
 1170 0028 81000F40 		.word	1074724993
 1171              		.cfi_endproc
 1172              	.LFE23:
 1173              		.size	Com_Block_SetInterruptMode, .-Com_Block_SetInterruptMode
 1174              		.section	.text.Com_Block_ReadStatus,"ax",%progbits
 1175              		.align	2
 1176              		.global	Com_Block_ReadStatus
 1177              		.code	16
 1178              		.thumb_func
 1179              		.type	Com_Block_ReadStatus, %function
 1180              	Com_Block_ReadStatus:
 1181              	.LFB24:
1198:.\Generated_Source\PSoC4/Com_Block.c **** 
1199:.\Generated_Source\PSoC4/Com_Block.c **** 
1200:.\Generated_Source\PSoC4/Com_Block.c **** /*******************************************************************************
1201:.\Generated_Source\PSoC4/Com_Block.c **** * Function Name: Com_Block_ReadStatus
1202:.\Generated_Source\PSoC4/Com_Block.c **** ********************************************************************************
1203:.\Generated_Source\PSoC4/Com_Block.c **** *
1204:.\Generated_Source\PSoC4/Com_Block.c **** * Summary:
1205:.\Generated_Source\PSoC4/Com_Block.c **** *  Read the status register for the component.
1206:.\Generated_Source\PSoC4/Com_Block.c **** *
1207:.\Generated_Source\PSoC4/Com_Block.c **** * Parameters:
1208:.\Generated_Source\PSoC4/Com_Block.c **** *  None.
1209:.\Generated_Source\PSoC4/Com_Block.c **** *
1210:.\Generated_Source\PSoC4/Com_Block.c **** * Return:
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 43


1211:.\Generated_Source\PSoC4/Com_Block.c **** *  Contents of the status register.
1212:.\Generated_Source\PSoC4/Com_Block.c **** *
1213:.\Generated_Source\PSoC4/Com_Block.c **** * Global variables:
1214:.\Generated_Source\PSoC4/Com_Block.c **** *  Com_Block_swStatus - used to store in software status register,
1215:.\Generated_Source\PSoC4/Com_Block.c **** *  modified every function call - resets to zero.
1216:.\Generated_Source\PSoC4/Com_Block.c **** *
1217:.\Generated_Source\PSoC4/Com_Block.c **** * Theory:
1218:.\Generated_Source\PSoC4/Com_Block.c **** *  Allows the user and the API to read the status register for error detection
1219:.\Generated_Source\PSoC4/Com_Block.c **** *  and flow control.
1220:.\Generated_Source\PSoC4/Com_Block.c **** *
1221:.\Generated_Source\PSoC4/Com_Block.c **** * Side Effects:
1222:.\Generated_Source\PSoC4/Com_Block.c **** *  Clear status register of the component.
1223:.\Generated_Source\PSoC4/Com_Block.c **** *
1224:.\Generated_Source\PSoC4/Com_Block.c **** * Reentrant:
1225:.\Generated_Source\PSoC4/Com_Block.c **** *  No.
1226:.\Generated_Source\PSoC4/Com_Block.c **** *
1227:.\Generated_Source\PSoC4/Com_Block.c **** *******************************************************************************/
1228:.\Generated_Source\PSoC4/Com_Block.c **** uint8 Com_Block_ReadStatus(void) 
1229:.\Generated_Source\PSoC4/Com_Block.c **** {
 1182              		.loc 1 1229 0
 1183              		.cfi_startproc
 1184 0000 80B5     		push	{r7, lr}
 1185              	.LCFI63:
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 7, -8
 1188              		.cfi_offset 14, -4
 1189 0002 82B0     		sub	sp, sp, #8
 1190              	.LCFI64:
 1191              		.cfi_def_cfa_offset 16
 1192 0004 00AF     		add	r7, sp, #0
 1193              	.LCFI65:
 1194              		.cfi_def_cfa_register 7
1230:.\Generated_Source\PSoC4/Com_Block.c ****     uint8 tmpStatus;
1231:.\Generated_Source\PSoC4/Com_Block.c **** 
1232:.\Generated_Source\PSoC4/Com_Block.c ****     #if ((Com_Block_TX_SOFTWARE_BUF_ENABLED) || (Com_Block_RX_SOFTWARE_BUF_ENABLED))
1233:.\Generated_Source\PSoC4/Com_Block.c **** 
1234:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_DisableInt();
1235:.\Generated_Source\PSoC4/Com_Block.c **** 
1236:.\Generated_Source\PSoC4/Com_Block.c ****         tmpStatus = Com_Block_GET_STATUS_TX(Com_Block_swStatusTx) |
1237:.\Generated_Source\PSoC4/Com_Block.c ****               (Com_Block_GET_STATUS_RX(Com_Block_swStatusRx) & (uint8)~Com_Block_STS_RX_FIFO_FULL);
1238:.\Generated_Source\PSoC4/Com_Block.c **** 
1239:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_swStatusTx = 0u;
1240:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_swStatusRx = 0u;
1241:.\Generated_Source\PSoC4/Com_Block.c **** 
1242:.\Generated_Source\PSoC4/Com_Block.c ****         /* Enable Interrupts */
1243:.\Generated_Source\PSoC4/Com_Block.c ****         Com_Block_EnableInt();
1244:.\Generated_Source\PSoC4/Com_Block.c **** 
1245:.\Generated_Source\PSoC4/Com_Block.c ****     #else /* !((Com_Block_TX_SOFTWARE_BUF_ENABLED) || (Com_Block_RX_SOFTWARE_BUF_ENABLED)) */
1246:.\Generated_Source\PSoC4/Com_Block.c **** 
1247:.\Generated_Source\PSoC4/Com_Block.c ****         tmpStatus = Com_Block_TX_STATUS_REG | (Com_Block_RX_STATUS_REG &
 1195              		.loc 1 1247 0
 1196 0006 0A4B     		ldr	r3, .L79
 1197 0008 1B78     		ldrb	r3, [r3]
 1198 000a DBB2     		uxtb	r3, r3
 1199 000c DAB2     		uxtb	r2, r3
 1200 000e 094B     		ldr	r3, .L79+4
 1201 0010 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 44


 1202 0012 DBB2     		uxtb	r3, r3
 1203 0014 DBB2     		uxtb	r3, r3
 1204 0016 4021     		mov	r1, #64
 1205 0018 8B43     		bic	r3, r1
 1206 001a DBB2     		uxtb	r3, r3
 1207 001c 1343     		orr	r3, r2
 1208 001e DAB2     		uxtb	r2, r3
 1209 0020 FB1D     		add	r3, r7, #7
 1210 0022 1A70     		strb	r2, [r3]
1248:.\Generated_Source\PSoC4/Com_Block.c ****                                                       (uint8)~Com_Block_STS_RX_FIFO_FULL);
1249:.\Generated_Source\PSoC4/Com_Block.c **** 
1250:.\Generated_Source\PSoC4/Com_Block.c ****     #endif /* (Com_Block_TX_SOFTWARE_BUF_ENABLED) || (Com_Block_RX_SOFTWARE_BUF_ENABLED) */
1251:.\Generated_Source\PSoC4/Com_Block.c **** 
1252:.\Generated_Source\PSoC4/Com_Block.c ****     return(tmpStatus);
 1211              		.loc 1 1252 0
 1212 0024 FB1D     		add	r3, r7, #7
 1213 0026 1B78     		ldrb	r3, [r3]
1253:.\Generated_Source\PSoC4/Com_Block.c **** }
 1214              		.loc 1 1253 0
 1215 0028 181C     		mov	r0, r3
 1216 002a BD46     		mov	sp, r7
 1217 002c 02B0     		add	sp, sp, #8
 1218              		@ sp needed for prologue
 1219 002e 80BD     		pop	{r7, pc}
 1220              	.L80:
 1221              		.align	2
 1222              	.L79:
 1223 0030 63000F40 		.word	1074724963
 1224 0034 61000F40 		.word	1074724961
 1225              		.cfi_endproc
 1226              	.LFE24:
 1227              		.size	Com_Block_ReadStatus, .-Com_Block_ReadStatus
 1228              		.text
 1229              	.Letext0:
 1230              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1231              		.section	.debug_info,"",%progbits
 1232              	.Ldebug_info0:
 1233 0000 AD040000 		.4byte	0x4ad
 1234 0004 0200     		.2byte	0x2
 1235 0006 00000000 		.4byte	.Ldebug_abbrev0
 1236 000a 04       		.byte	0x4
 1237 000b 01       		.uleb128 0x1
 1238 000c 87030000 		.4byte	.LASF55
 1239 0010 01       		.byte	0x1
 1240 0011 70020000 		.4byte	.LASF56
 1241 0015 B3020000 		.4byte	.LASF57
 1242 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1243 001d 00000000 		.4byte	0
 1244 0021 00000000 		.4byte	0
 1245 0025 00000000 		.4byte	.Ldebug_line0
 1246 0029 02       		.uleb128 0x2
 1247 002a 01       		.byte	0x1
 1248 002b 06       		.byte	0x6
 1249 002c 05040000 		.4byte	.LASF0
 1250 0030 02       		.uleb128 0x2
 1251 0031 01       		.byte	0x1
 1252 0032 08       		.byte	0x8
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 45


 1253 0033 AB010000 		.4byte	.LASF1
 1254 0037 02       		.uleb128 0x2
 1255 0038 02       		.byte	0x2
 1256 0039 05       		.byte	0x5
 1257 003a 60030000 		.4byte	.LASF2
 1258 003e 02       		.uleb128 0x2
 1259 003f 02       		.byte	0x2
 1260 0040 07       		.byte	0x7
 1261 0041 64000000 		.4byte	.LASF3
 1262 0045 02       		.uleb128 0x2
 1263 0046 04       		.byte	0x4
 1264 0047 05       		.byte	0x5
 1265 0048 DF030000 		.4byte	.LASF4
 1266 004c 02       		.uleb128 0x2
 1267 004d 04       		.byte	0x4
 1268 004e 07       		.byte	0x7
 1269 004f 25010000 		.4byte	.LASF5
 1270 0053 02       		.uleb128 0x2
 1271 0054 08       		.byte	0x8
 1272 0055 05       		.byte	0x5
 1273 0056 00000000 		.4byte	.LASF6
 1274 005a 02       		.uleb128 0x2
 1275 005b 08       		.byte	0x8
 1276 005c 07       		.byte	0x7
 1277 005d 37020000 		.4byte	.LASF7
 1278 0061 03       		.uleb128 0x3
 1279 0062 04       		.byte	0x4
 1280 0063 05       		.byte	0x5
 1281 0064 696E7400 		.ascii	"int\000"
 1282 0068 02       		.uleb128 0x2
 1283 0069 04       		.byte	0x4
 1284 006a 07       		.byte	0x7
 1285 006b 2A020000 		.4byte	.LASF8
 1286 006f 04       		.uleb128 0x4
 1287 0070 4B010000 		.4byte	.LASF9
 1288 0074 02       		.byte	0x2
 1289 0075 5B       		.byte	0x5b
 1290 0076 30000000 		.4byte	0x30
 1291 007a 04       		.uleb128 0x4
 1292 007b FA010000 		.4byte	.LASF10
 1293 007f 02       		.byte	0x2
 1294 0080 5C       		.byte	0x5c
 1295 0081 3E000000 		.4byte	0x3e
 1296 0085 02       		.uleb128 0x2
 1297 0086 04       		.byte	0x4
 1298 0087 04       		.byte	0x4
 1299 0088 90000000 		.4byte	.LASF11
 1300 008c 02       		.uleb128 0x2
 1301 008d 08       		.byte	0x8
 1302 008e 04       		.byte	0x4
 1303 008f D6010000 		.4byte	.LASF12
 1304 0093 02       		.uleb128 0x2
 1305 0094 01       		.byte	0x1
 1306 0095 08       		.byte	0x8
 1307 0096 2E030000 		.4byte	.LASF13
 1308 009a 04       		.uleb128 0x4
 1309 009b A5020000 		.4byte	.LASF14
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 46


 1310 009f 02       		.byte	0x2
 1311 00a0 F0       		.byte	0xf0
 1312 00a1 A5000000 		.4byte	0xa5
 1313 00a5 05       		.uleb128 0x5
 1314 00a6 6F000000 		.4byte	0x6f
 1315 00aa 04       		.uleb128 0x4
 1316 00ab 6A030000 		.4byte	.LASF15
 1317 00af 02       		.byte	0x2
 1318 00b0 F1       		.byte	0xf1
 1319 00b1 B5000000 		.4byte	0xb5
 1320 00b5 05       		.uleb128 0x5
 1321 00b6 7A000000 		.4byte	0x7a
 1322 00ba 02       		.uleb128 0x2
 1323 00bb 04       		.byte	0x4
 1324 00bc 07       		.byte	0x7
 1325 00bd AA020000 		.4byte	.LASF16
 1326 00c1 06       		.uleb128 0x6
 1327 00c2 01       		.byte	0x1
 1328 00c3 01020000 		.4byte	.LASF17
 1329 00c7 01       		.byte	0x1
 1330 00c8 43       		.byte	0x43
 1331 00c9 01       		.byte	0x1
 1332 00ca 00000000 		.4byte	.LFB0
 1333 00ce 34000000 		.4byte	.LFE0
 1334 00d2 00000000 		.4byte	.LLST0
 1335 00d6 01       		.byte	0x1
 1336 00d7 07       		.uleb128 0x7
 1337 00d8 01       		.byte	0x1
 1338 00d9 39000000 		.4byte	.LASF19
 1339 00dd 01       		.byte	0x1
 1340 00de 8F       		.byte	0x8f
 1341 00df 01       		.byte	0x1
 1342 00e0 00000000 		.4byte	.LFB1
 1343 00e4 5C000000 		.4byte	.LFE1
 1344 00e8 2C000000 		.4byte	.LLST1
 1345 00ec 01       		.byte	0x1
 1346 00ed 00010000 		.4byte	0x100
 1347 00f1 08       		.uleb128 0x8
 1348 00f2 7D010000 		.4byte	.LASF21
 1349 00f6 01       		.byte	0x1
 1350 00f7 91       		.byte	0x91
 1351 00f8 6F000000 		.4byte	0x6f
 1352 00fc 02       		.byte	0x2
 1353 00fd 91       		.byte	0x91
 1354 00fe 6F       		.sleb128 -17
 1355 00ff 00       		.byte	0
 1356 0100 06       		.uleb128 0x6
 1357 0101 01       		.byte	0x1
 1358 0102 0E000000 		.4byte	.LASF18
 1359 0106 01       		.byte	0x1
 1360 0107 BC       		.byte	0xbc
 1361 0108 01       		.byte	0x1
 1362 0109 00000000 		.4byte	.LFB2
 1363 010d 24000000 		.4byte	.LFE2
 1364 0111 64000000 		.4byte	.LLST2
 1365 0115 01       		.byte	0x1
 1366 0116 07       		.uleb128 0x7
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 47


 1367 0117 01       		.byte	0x1
 1368 0118 D0030000 		.4byte	.LASF20
 1369 011c 01       		.byte	0x1
 1370 011d D9       		.byte	0xd9
 1371 011e 01       		.byte	0x1
 1372 011f 00000000 		.4byte	.LFB3
 1373 0123 48000000 		.4byte	.LFE3
 1374 0127 90000000 		.4byte	.LLST3
 1375 012b 01       		.byte	0x1
 1376 012c 3F010000 		.4byte	0x13f
 1377 0130 08       		.uleb128 0x8
 1378 0131 7D010000 		.4byte	.LASF21
 1379 0135 01       		.byte	0x1
 1380 0136 DB       		.byte	0xdb
 1381 0137 6F000000 		.4byte	0x6f
 1382 013b 02       		.byte	0x2
 1383 013c 91       		.byte	0x91
 1384 013d 6F       		.sleb128 -17
 1385 013e 00       		.byte	0
 1386 013f 09       		.uleb128 0x9
 1387 0140 01       		.byte	0x1
 1388 0141 4A030000 		.4byte	.LASF22
 1389 0145 01       		.byte	0x1
 1390 0146 FE       		.byte	0xfe
 1391 0147 01       		.byte	0x1
 1392 0148 00000000 		.4byte	.LFB4
 1393 014c 08000000 		.4byte	.LFE4
 1394 0150 C8000000 		.4byte	.LLST4
 1395 0154 01       		.byte	0x1
 1396 0155 0A       		.uleb128 0xa
 1397 0156 01       		.byte	0x1
 1398 0157 C3000000 		.4byte	.LASF23
 1399 015b 01       		.byte	0x1
 1400 015c 1701     		.2byte	0x117
 1401 015e 01       		.byte	0x1
 1402 015f 00000000 		.4byte	.LFB5
 1403 0163 08000000 		.4byte	.LFE5
 1404 0167 F4000000 		.4byte	.LLST5
 1405 016b 01       		.byte	0x1
 1406 016c 0A       		.uleb128 0xa
 1407 016d 01       		.byte	0x1
 1408 016e 70030000 		.4byte	.LASF24
 1409 0172 01       		.byte	0x1
 1410 0173 3001     		.2byte	0x130
 1411 0175 01       		.byte	0x1
 1412 0176 00000000 		.4byte	.LFB6
 1413 017a 08000000 		.4byte	.LFE6
 1414 017e 20010000 		.4byte	.LLST6
 1415 0182 01       		.byte	0x1
 1416 0183 0A       		.uleb128 0xa
 1417 0184 01       		.byte	0x1
 1418 0185 F3000000 		.4byte	.LASF25
 1419 0189 01       		.byte	0x1
 1420 018a 4901     		.2byte	0x149
 1421 018c 01       		.byte	0x1
 1422 018d 00000000 		.4byte	.LFB7
 1423 0191 08000000 		.4byte	.LFE7
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 48


 1424 0195 4C010000 		.4byte	.LLST7
 1425 0199 01       		.byte	0x1
 1426 019a 0B       		.uleb128 0xb
 1427 019b 01       		.byte	0x1
 1428 019c 8E010000 		.4byte	.LASF26
 1429 01a0 01       		.byte	0x1
 1430 01a1 6301     		.2byte	0x163
 1431 01a3 01       		.byte	0x1
 1432 01a4 00000000 		.4byte	.LFB8
 1433 01a8 20000000 		.4byte	.LFE8
 1434 01ac 78010000 		.4byte	.LLST8
 1435 01b0 01       		.byte	0x1
 1436 01b1 C5010000 		.4byte	0x1c5
 1437 01b5 0C       		.uleb128 0xc
 1438 01b6 F3010000 		.4byte	.LASF28
 1439 01ba 01       		.byte	0x1
 1440 01bb 6301     		.2byte	0x163
 1441 01bd 6F000000 		.4byte	0x6f
 1442 01c1 02       		.byte	0x2
 1443 01c2 91       		.byte	0x91
 1444 01c3 77       		.sleb128 -9
 1445 01c4 00       		.byte	0
 1446 01c5 0B       		.uleb128 0xb
 1447 01c6 01       		.byte	0x1
 1448 01c7 B9010000 		.4byte	.LASF27
 1449 01cb 01       		.byte	0x1
 1450 01cc 7B01     		.2byte	0x17b
 1451 01ce 01       		.byte	0x1
 1452 01cf 00000000 		.4byte	.LFB9
 1453 01d3 20000000 		.4byte	.LFE9
 1454 01d7 B0010000 		.4byte	.LLST9
 1455 01db 01       		.byte	0x1
 1456 01dc F0010000 		.4byte	0x1f0
 1457 01e0 0C       		.uleb128 0xc
 1458 01e1 F3010000 		.4byte	.LASF28
 1459 01e5 01       		.byte	0x1
 1460 01e6 7B01     		.2byte	0x17b
 1461 01e8 6F000000 		.4byte	0x6f
 1462 01ec 02       		.byte	0x2
 1463 01ed 91       		.byte	0x91
 1464 01ee 77       		.sleb128 -9
 1465 01ef 00       		.byte	0
 1466 01f0 0D       		.uleb128 0xd
 1467 01f1 01       		.byte	0x1
 1468 01f2 66010000 		.4byte	.LASF30
 1469 01f6 01       		.byte	0x1
 1470 01f7 9D01     		.2byte	0x19d
 1471 01f9 01       		.byte	0x1
 1472 01fa 6F000000 		.4byte	0x6f
 1473 01fe 00000000 		.4byte	.LFB10
 1474 0202 20000000 		.4byte	.LFE10
 1475 0206 E8010000 		.4byte	.LLST10
 1476 020a 01       		.byte	0x1
 1477 020b 1F020000 		.4byte	0x21f
 1478 020f 0E       		.uleb128 0xe
 1479 0210 E8030000 		.4byte	.LASF29
 1480 0214 01       		.byte	0x1
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 49


 1481 0215 9F01     		.2byte	0x19f
 1482 0217 6F000000 		.4byte	0x6f
 1483 021b 02       		.byte	0x2
 1484 021c 91       		.byte	0x91
 1485 021d 77       		.sleb128 -9
 1486 021e 00       		.byte	0
 1487 021f 0D       		.uleb128 0xd
 1488 0220 01       		.byte	0x1
 1489 0221 33030000 		.4byte	.LASF31
 1490 0225 01       		.byte	0x1
 1491 0226 D201     		.2byte	0x1d2
 1492 0228 01       		.byte	0x1
 1493 0229 6F000000 		.4byte	0x6f
 1494 022d 00000000 		.4byte	.LFB11
 1495 0231 20000000 		.4byte	.LFE11
 1496 0235 20020000 		.4byte	.LLST11
 1497 0239 01       		.byte	0x1
 1498 023a 4E020000 		.4byte	0x24e
 1499 023e 0E       		.uleb128 0xe
 1500 023f E8030000 		.4byte	.LASF29
 1501 0243 01       		.byte	0x1
 1502 0244 D401     		.2byte	0x1d4
 1503 0246 6F000000 		.4byte	0x6f
 1504 024a 02       		.byte	0x2
 1505 024b 91       		.byte	0x91
 1506 024c 77       		.sleb128 -9
 1507 024d 00       		.byte	0
 1508 024e 0B       		.uleb128 0xb
 1509 024f 01       		.byte	0x1
 1510 0250 DD010000 		.4byte	.LASF32
 1511 0254 01       		.byte	0x1
 1512 0255 0D02     		.2byte	0x20d
 1513 0257 01       		.byte	0x1
 1514 0258 00000000 		.4byte	.LFB12
 1515 025c 34000000 		.4byte	.LFE12
 1516 0260 58020000 		.4byte	.LLST12
 1517 0264 01       		.byte	0x1
 1518 0265 79020000 		.4byte	0x279
 1519 0269 0C       		.uleb128 0xc
 1520 026a 9E020000 		.4byte	.LASF33
 1521 026e 01       		.byte	0x1
 1522 026f 0D02     		.2byte	0x20d
 1523 0271 7A000000 		.4byte	0x7a
 1524 0275 02       		.byte	0x2
 1525 0276 91       		.byte	0x91
 1526 0277 76       		.sleb128 -10
 1527 0278 00       		.byte	0
 1528 0279 0B       		.uleb128 0xb
 1529 027a 01       		.byte	0x1
 1530 027b 11040000 		.4byte	.LASF34
 1531 027f 01       		.byte	0x1
 1532 0280 6D02     		.2byte	0x26d
 1533 0282 01       		.byte	0x1
 1534 0283 00000000 		.4byte	.LFB13
 1535 0287 20000000 		.4byte	.LFE13
 1536 028b 90020000 		.4byte	.LLST13
 1537 028f 01       		.byte	0x1
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 50


 1538 0290 A4020000 		.4byte	0x2a4
 1539 0294 0C       		.uleb128 0xc
 1540 0295 23030000 		.4byte	.LASF35
 1541 0299 01       		.byte	0x1
 1542 029a 6D02     		.2byte	0x26d
 1543 029c 7A000000 		.4byte	0x7a
 1544 02a0 02       		.byte	0x2
 1545 02a1 91       		.byte	0x91
 1546 02a2 76       		.sleb128 -10
 1547 02a3 00       		.byte	0
 1548 02a4 0D       		.uleb128 0xd
 1549 02a5 01       		.byte	0x1
 1550 02a6 96000000 		.4byte	.LASF36
 1551 02aa 01       		.byte	0x1
 1552 02ab 9702     		.2byte	0x297
 1553 02ad 01       		.byte	0x1
 1554 02ae 7A000000 		.4byte	0x7a
 1555 02b2 00000000 		.4byte	.LFB14
 1556 02b6 20000000 		.4byte	.LFE14
 1557 02ba C8020000 		.4byte	.LLST14
 1558 02be 01       		.byte	0x1
 1559 02bf D3020000 		.4byte	0x2d3
 1560 02c3 0E       		.uleb128 0xe
 1561 02c4 89000000 		.4byte	.LASF37
 1562 02c8 01       		.byte	0x1
 1563 02c9 9902     		.2byte	0x299
 1564 02cb 7A000000 		.4byte	0x7a
 1565 02cf 02       		.byte	0x2
 1566 02d0 91       		.byte	0x91
 1567 02d1 76       		.sleb128 -10
 1568 02d2 00       		.byte	0
 1569 02d3 0D       		.uleb128 0xd
 1570 02d4 01       		.byte	0x1
 1571 02d5 10020000 		.4byte	.LASF38
 1572 02d9 01       		.byte	0x1
 1573 02da D902     		.2byte	0x2d9
 1574 02dc 01       		.byte	0x1
 1575 02dd 6F000000 		.4byte	0x6f
 1576 02e1 00000000 		.4byte	.LFB15
 1577 02e5 30000000 		.4byte	.LFE15
 1578 02e9 00030000 		.4byte	.LLST15
 1579 02ed 01       		.byte	0x1
 1580 02ee 02030000 		.4byte	0x302
 1581 02f2 0E       		.uleb128 0xe
 1582 02f3 D9000000 		.4byte	.LASF39
 1583 02f7 01       		.byte	0x1
 1584 02f8 DB02     		.2byte	0x2db
 1585 02fa 6F000000 		.4byte	0x6f
 1586 02fe 02       		.byte	0x2
 1587 02ff 91       		.byte	0x91
 1588 0300 77       		.sleb128 -9
 1589 0301 00       		.byte	0
 1590 0302 0D       		.uleb128 0xd
 1591 0303 01       		.byte	0x1
 1592 0304 4A000000 		.4byte	.LASF40
 1593 0308 01       		.byte	0x1
 1594 0309 1A03     		.2byte	0x31a
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 51


 1595 030b 01       		.byte	0x1
 1596 030c 6F000000 		.4byte	0x6f
 1597 0310 00000000 		.4byte	.LFB16
 1598 0314 48000000 		.4byte	.LFE16
 1599 0318 38030000 		.4byte	.LLST16
 1600 031c 01       		.byte	0x1
 1601 031d 31030000 		.4byte	0x331
 1602 0321 0E       		.uleb128 0xe
 1603 0322 D9000000 		.4byte	.LASF39
 1604 0326 01       		.byte	0x1
 1605 0327 1C03     		.2byte	0x31c
 1606 0329 6F000000 		.4byte	0x6f
 1607 032d 02       		.byte	0x2
 1608 032e 91       		.byte	0x91
 1609 032f 77       		.sleb128 -9
 1610 0330 00       		.byte	0
 1611 0331 0A       		.uleb128 0xa
 1612 0332 01       		.byte	0x1
 1613 0333 58020000 		.4byte	.LASF41
 1614 0337 01       		.byte	0x1
 1615 0338 6C03     		.2byte	0x36c
 1616 033a 01       		.byte	0x1
 1617 033b 00000000 		.4byte	.LFB17
 1618 033f 24000000 		.4byte	.LFE17
 1619 0343 70030000 		.4byte	.LLST17
 1620 0347 01       		.byte	0x1
 1621 0348 0F       		.uleb128 0xf
 1622 0349 01       		.byte	0x1
 1623 034a AB000000 		.4byte	.LASF42
 1624 034e 01       		.byte	0x1
 1625 034f A503     		.2byte	0x3a5
 1626 0351 01       		.byte	0x1
 1627 0352 00000000 		.4byte	.LFB18
 1628 0356 68000000 		.4byte	.LFE18
 1629 035a 9C030000 		.4byte	.LLST18
 1630 035e 01       		.byte	0x1
 1631 035f 73030000 		.4byte	0x373
 1632 0363 0E       		.uleb128 0xe
 1633 0364 7D010000 		.4byte	.LASF21
 1634 0368 01       		.byte	0x1
 1635 0369 A703     		.2byte	0x3a7
 1636 036b 6F000000 		.4byte	0x6f
 1637 036f 02       		.byte	0x2
 1638 0370 91       		.byte	0x91
 1639 0371 6F       		.sleb128 -17
 1640 0372 00       		.byte	0
 1641 0373 0F       		.uleb128 0xf
 1642 0374 01       		.byte	0x1
 1643 0375 F2030000 		.4byte	.LASF43
 1644 0379 01       		.byte	0x1
 1645 037a 1904     		.2byte	0x419
 1646 037c 01       		.byte	0x1
 1647 037d 00000000 		.4byte	.LFB19
 1648 0381 52000000 		.4byte	.LFE19
 1649 0385 D4030000 		.4byte	.LLST19
 1650 0389 01       		.byte	0x1
 1651 038a BC030000 		.4byte	0x3bc
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 52


 1652 038e 0C       		.uleb128 0xc
 1653 038f 1E000000 		.4byte	.LASF44
 1654 0393 01       		.byte	0x1
 1655 0394 1904     		.2byte	0x419
 1656 0396 BC030000 		.4byte	0x3bc
 1657 039a 02       		.byte	0x2
 1658 039b 91       		.byte	0x91
 1659 039c 6C       		.sleb128 -20
 1660 039d 0C       		.uleb128 0xc
 1661 039e 4E020000 		.4byte	.LASF45
 1662 03a2 01       		.byte	0x1
 1663 03a3 1904     		.2byte	0x419
 1664 03a5 6F000000 		.4byte	0x6f
 1665 03a9 02       		.byte	0x2
 1666 03aa 91       		.byte	0x91
 1667 03ab 6B       		.sleb128 -21
 1668 03ac 0E       		.uleb128 0xe
 1669 03ad 95020000 		.4byte	.LASF46
 1670 03b1 01       		.byte	0x1
 1671 03b2 1C04     		.2byte	0x41c
 1672 03b4 6F000000 		.4byte	0x6f
 1673 03b8 02       		.byte	0x2
 1674 03b9 91       		.byte	0x91
 1675 03ba 77       		.sleb128 -9
 1676 03bb 00       		.byte	0
 1677 03bc 10       		.uleb128 0x10
 1678 03bd 04       		.byte	0x4
 1679 03be C2030000 		.4byte	0x3c2
 1680 03c2 11       		.uleb128 0x11
 1681 03c3 7A000000 		.4byte	0x7a
 1682 03c7 0F       		.uleb128 0xf
 1683 03c8 01       		.byte	0x1
 1684 03c9 37010000 		.4byte	.LASF47
 1685 03cd 01       		.byte	0x1
 1686 03ce 3904     		.2byte	0x439
 1687 03d0 01       		.byte	0x1
 1688 03d1 00000000 		.4byte	.LFB20
 1689 03d5 84000000 		.4byte	.LFE20
 1690 03d9 0C040000 		.4byte	.LLST20
 1691 03dd 01       		.byte	0x1
 1692 03de F2030000 		.4byte	0x3f2
 1693 03e2 0E       		.uleb128 0xe
 1694 03e3 7D010000 		.4byte	.LASF21
 1695 03e7 01       		.byte	0x1
 1696 03e8 3B04     		.2byte	0x43b
 1697 03ea 6F000000 		.4byte	0x6f
 1698 03ee 02       		.byte	0x2
 1699 03ef 91       		.byte	0x91
 1700 03f0 6F       		.sleb128 -17
 1701 03f1 00       		.byte	0
 1702 03f2 0A       		.uleb128 0xa
 1703 03f3 01       		.byte	0x1
 1704 03f4 25000000 		.4byte	.LASF48
 1705 03f8 01       		.byte	0x1
 1706 03f9 6E04     		.2byte	0x46e
 1707 03fb 01       		.byte	0x1
 1708 03fc 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 53


 1709 0400 08000000 		.4byte	.LFE21
 1710 0404 44040000 		.4byte	.LLST21
 1711 0408 01       		.byte	0x1
 1712 0409 0A       		.uleb128 0xa
 1713 040a 01       		.byte	0x1
 1714 040b 2B040000 		.4byte	.LASF49
 1715 040f 01       		.byte	0x1
 1716 0410 8B04     		.2byte	0x48b
 1717 0412 01       		.byte	0x1
 1718 0413 00000000 		.4byte	.LFB22
 1719 0417 08000000 		.4byte	.LFE22
 1720 041b 70040000 		.4byte	.LLST22
 1721 041f 01       		.byte	0x1
 1722 0420 0B       		.uleb128 0xb
 1723 0421 01       		.byte	0x1
 1724 0422 0A010000 		.4byte	.LASF50
 1725 0426 01       		.byte	0x1
 1726 0427 A904     		.2byte	0x4a9
 1727 0429 01       		.byte	0x1
 1728 042a 00000000 		.4byte	.LFB23
 1729 042e 2C000000 		.4byte	.LFE23
 1730 0432 9C040000 		.4byte	.LLST23
 1731 0436 01       		.byte	0x1
 1732 0437 4B040000 		.4byte	0x44b
 1733 043b 0C       		.uleb128 0xc
 1734 043c F3010000 		.4byte	.LASF28
 1735 0440 01       		.byte	0x1
 1736 0441 A904     		.2byte	0x4a9
 1737 0443 6F000000 		.4byte	0x6f
 1738 0447 02       		.byte	0x2
 1739 0448 91       		.byte	0x91
 1740 0449 77       		.sleb128 -9
 1741 044a 00       		.byte	0
 1742 044b 0D       		.uleb128 0xd
 1743 044c 01       		.byte	0x1
 1744 044d 40040000 		.4byte	.LASF51
 1745 0451 01       		.byte	0x1
 1746 0452 CC04     		.2byte	0x4cc
 1747 0454 01       		.byte	0x1
 1748 0455 6F000000 		.4byte	0x6f
 1749 0459 00000000 		.4byte	.LFB24
 1750 045d 38000000 		.4byte	.LFE24
 1751 0461 D4040000 		.4byte	.LLST24
 1752 0465 01       		.byte	0x1
 1753 0466 7A040000 		.4byte	0x47a
 1754 046a 0E       		.uleb128 0xe
 1755 046b E8030000 		.4byte	.LASF29
 1756 046f 01       		.byte	0x1
 1757 0470 CE04     		.2byte	0x4ce
 1758 0472 6F000000 		.4byte	0x6f
 1759 0476 02       		.byte	0x2
 1760 0477 91       		.byte	0x91
 1761 0478 77       		.sleb128 -9
 1762 0479 00       		.byte	0
 1763 047a 12       		.uleb128 0x12
 1764 047b 77000000 		.4byte	.LASF52
 1765 047f 01       		.byte	0x1
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 54


 1766 0480 26       		.byte	0x26
 1767 0481 6F000000 		.4byte	0x6f
 1768 0485 01       		.byte	0x1
 1769 0486 05       		.byte	0x5
 1770 0487 03       		.byte	0x3
 1771 0488 00000000 		.4byte	Com_Block_initVar
 1772 048c 12       		.uleb128 0x12
 1773 048d 51010000 		.4byte	.LASF53
 1774 0491 01       		.byte	0x1
 1775 0492 28       		.byte	0x28
 1776 0493 A5000000 		.4byte	0xa5
 1777 0497 01       		.byte	0x1
 1778 0498 05       		.byte	0x5
 1779 0499 03       		.byte	0x3
 1780 049a 00000000 		.4byte	Com_Block_swStatusTx
 1781 049e 12       		.uleb128 0x12
 1782 049f DE000000 		.4byte	.LASF54
 1783 04a3 01       		.byte	0x1
 1784 04a4 29       		.byte	0x29
 1785 04a5 A5000000 		.4byte	0xa5
 1786 04a9 01       		.byte	0x1
 1787 04aa 05       		.byte	0x5
 1788 04ab 03       		.byte	0x3
 1789 04ac 00000000 		.4byte	Com_Block_swStatusRx
 1790 04b0 00       		.byte	0
 1791              		.section	.debug_abbrev,"",%progbits
 1792              	.Ldebug_abbrev0:
 1793 0000 01       		.uleb128 0x1
 1794 0001 11       		.uleb128 0x11
 1795 0002 01       		.byte	0x1
 1796 0003 25       		.uleb128 0x25
 1797 0004 0E       		.uleb128 0xe
 1798 0005 13       		.uleb128 0x13
 1799 0006 0B       		.uleb128 0xb
 1800 0007 03       		.uleb128 0x3
 1801 0008 0E       		.uleb128 0xe
 1802 0009 1B       		.uleb128 0x1b
 1803 000a 0E       		.uleb128 0xe
 1804 000b 55       		.uleb128 0x55
 1805 000c 06       		.uleb128 0x6
 1806 000d 11       		.uleb128 0x11
 1807 000e 01       		.uleb128 0x1
 1808 000f 52       		.uleb128 0x52
 1809 0010 01       		.uleb128 0x1
 1810 0011 10       		.uleb128 0x10
 1811 0012 06       		.uleb128 0x6
 1812 0013 00       		.byte	0
 1813 0014 00       		.byte	0
 1814 0015 02       		.uleb128 0x2
 1815 0016 24       		.uleb128 0x24
 1816 0017 00       		.byte	0
 1817 0018 0B       		.uleb128 0xb
 1818 0019 0B       		.uleb128 0xb
 1819 001a 3E       		.uleb128 0x3e
 1820 001b 0B       		.uleb128 0xb
 1821 001c 03       		.uleb128 0x3
 1822 001d 0E       		.uleb128 0xe
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 55


 1823 001e 00       		.byte	0
 1824 001f 00       		.byte	0
 1825 0020 03       		.uleb128 0x3
 1826 0021 24       		.uleb128 0x24
 1827 0022 00       		.byte	0
 1828 0023 0B       		.uleb128 0xb
 1829 0024 0B       		.uleb128 0xb
 1830 0025 3E       		.uleb128 0x3e
 1831 0026 0B       		.uleb128 0xb
 1832 0027 03       		.uleb128 0x3
 1833 0028 08       		.uleb128 0x8
 1834 0029 00       		.byte	0
 1835 002a 00       		.byte	0
 1836 002b 04       		.uleb128 0x4
 1837 002c 16       		.uleb128 0x16
 1838 002d 00       		.byte	0
 1839 002e 03       		.uleb128 0x3
 1840 002f 0E       		.uleb128 0xe
 1841 0030 3A       		.uleb128 0x3a
 1842 0031 0B       		.uleb128 0xb
 1843 0032 3B       		.uleb128 0x3b
 1844 0033 0B       		.uleb128 0xb
 1845 0034 49       		.uleb128 0x49
 1846 0035 13       		.uleb128 0x13
 1847 0036 00       		.byte	0
 1848 0037 00       		.byte	0
 1849 0038 05       		.uleb128 0x5
 1850 0039 35       		.uleb128 0x35
 1851 003a 00       		.byte	0
 1852 003b 49       		.uleb128 0x49
 1853 003c 13       		.uleb128 0x13
 1854 003d 00       		.byte	0
 1855 003e 00       		.byte	0
 1856 003f 06       		.uleb128 0x6
 1857 0040 2E       		.uleb128 0x2e
 1858 0041 00       		.byte	0
 1859 0042 3F       		.uleb128 0x3f
 1860 0043 0C       		.uleb128 0xc
 1861 0044 03       		.uleb128 0x3
 1862 0045 0E       		.uleb128 0xe
 1863 0046 3A       		.uleb128 0x3a
 1864 0047 0B       		.uleb128 0xb
 1865 0048 3B       		.uleb128 0x3b
 1866 0049 0B       		.uleb128 0xb
 1867 004a 27       		.uleb128 0x27
 1868 004b 0C       		.uleb128 0xc
 1869 004c 11       		.uleb128 0x11
 1870 004d 01       		.uleb128 0x1
 1871 004e 12       		.uleb128 0x12
 1872 004f 01       		.uleb128 0x1
 1873 0050 40       		.uleb128 0x40
 1874 0051 06       		.uleb128 0x6
 1875 0052 9642     		.uleb128 0x2116
 1876 0054 0C       		.uleb128 0xc
 1877 0055 00       		.byte	0
 1878 0056 00       		.byte	0
 1879 0057 07       		.uleb128 0x7
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 56


 1880 0058 2E       		.uleb128 0x2e
 1881 0059 01       		.byte	0x1
 1882 005a 3F       		.uleb128 0x3f
 1883 005b 0C       		.uleb128 0xc
 1884 005c 03       		.uleb128 0x3
 1885 005d 0E       		.uleb128 0xe
 1886 005e 3A       		.uleb128 0x3a
 1887 005f 0B       		.uleb128 0xb
 1888 0060 3B       		.uleb128 0x3b
 1889 0061 0B       		.uleb128 0xb
 1890 0062 27       		.uleb128 0x27
 1891 0063 0C       		.uleb128 0xc
 1892 0064 11       		.uleb128 0x11
 1893 0065 01       		.uleb128 0x1
 1894 0066 12       		.uleb128 0x12
 1895 0067 01       		.uleb128 0x1
 1896 0068 40       		.uleb128 0x40
 1897 0069 06       		.uleb128 0x6
 1898 006a 9642     		.uleb128 0x2116
 1899 006c 0C       		.uleb128 0xc
 1900 006d 01       		.uleb128 0x1
 1901 006e 13       		.uleb128 0x13
 1902 006f 00       		.byte	0
 1903 0070 00       		.byte	0
 1904 0071 08       		.uleb128 0x8
 1905 0072 34       		.uleb128 0x34
 1906 0073 00       		.byte	0
 1907 0074 03       		.uleb128 0x3
 1908 0075 0E       		.uleb128 0xe
 1909 0076 3A       		.uleb128 0x3a
 1910 0077 0B       		.uleb128 0xb
 1911 0078 3B       		.uleb128 0x3b
 1912 0079 0B       		.uleb128 0xb
 1913 007a 49       		.uleb128 0x49
 1914 007b 13       		.uleb128 0x13
 1915 007c 02       		.uleb128 0x2
 1916 007d 0A       		.uleb128 0xa
 1917 007e 00       		.byte	0
 1918 007f 00       		.byte	0
 1919 0080 09       		.uleb128 0x9
 1920 0081 2E       		.uleb128 0x2e
 1921 0082 00       		.byte	0
 1922 0083 3F       		.uleb128 0x3f
 1923 0084 0C       		.uleb128 0xc
 1924 0085 03       		.uleb128 0x3
 1925 0086 0E       		.uleb128 0xe
 1926 0087 3A       		.uleb128 0x3a
 1927 0088 0B       		.uleb128 0xb
 1928 0089 3B       		.uleb128 0x3b
 1929 008a 0B       		.uleb128 0xb
 1930 008b 27       		.uleb128 0x27
 1931 008c 0C       		.uleb128 0xc
 1932 008d 11       		.uleb128 0x11
 1933 008e 01       		.uleb128 0x1
 1934 008f 12       		.uleb128 0x12
 1935 0090 01       		.uleb128 0x1
 1936 0091 40       		.uleb128 0x40
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 57


 1937 0092 06       		.uleb128 0x6
 1938 0093 9742     		.uleb128 0x2117
 1939 0095 0C       		.uleb128 0xc
 1940 0096 00       		.byte	0
 1941 0097 00       		.byte	0
 1942 0098 0A       		.uleb128 0xa
 1943 0099 2E       		.uleb128 0x2e
 1944 009a 00       		.byte	0
 1945 009b 3F       		.uleb128 0x3f
 1946 009c 0C       		.uleb128 0xc
 1947 009d 03       		.uleb128 0x3
 1948 009e 0E       		.uleb128 0xe
 1949 009f 3A       		.uleb128 0x3a
 1950 00a0 0B       		.uleb128 0xb
 1951 00a1 3B       		.uleb128 0x3b
 1952 00a2 05       		.uleb128 0x5
 1953 00a3 27       		.uleb128 0x27
 1954 00a4 0C       		.uleb128 0xc
 1955 00a5 11       		.uleb128 0x11
 1956 00a6 01       		.uleb128 0x1
 1957 00a7 12       		.uleb128 0x12
 1958 00a8 01       		.uleb128 0x1
 1959 00a9 40       		.uleb128 0x40
 1960 00aa 06       		.uleb128 0x6
 1961 00ab 9742     		.uleb128 0x2117
 1962 00ad 0C       		.uleb128 0xc
 1963 00ae 00       		.byte	0
 1964 00af 00       		.byte	0
 1965 00b0 0B       		.uleb128 0xb
 1966 00b1 2E       		.uleb128 0x2e
 1967 00b2 01       		.byte	0x1
 1968 00b3 3F       		.uleb128 0x3f
 1969 00b4 0C       		.uleb128 0xc
 1970 00b5 03       		.uleb128 0x3
 1971 00b6 0E       		.uleb128 0xe
 1972 00b7 3A       		.uleb128 0x3a
 1973 00b8 0B       		.uleb128 0xb
 1974 00b9 3B       		.uleb128 0x3b
 1975 00ba 05       		.uleb128 0x5
 1976 00bb 27       		.uleb128 0x27
 1977 00bc 0C       		.uleb128 0xc
 1978 00bd 11       		.uleb128 0x11
 1979 00be 01       		.uleb128 0x1
 1980 00bf 12       		.uleb128 0x12
 1981 00c0 01       		.uleb128 0x1
 1982 00c1 40       		.uleb128 0x40
 1983 00c2 06       		.uleb128 0x6
 1984 00c3 9742     		.uleb128 0x2117
 1985 00c5 0C       		.uleb128 0xc
 1986 00c6 01       		.uleb128 0x1
 1987 00c7 13       		.uleb128 0x13
 1988 00c8 00       		.byte	0
 1989 00c9 00       		.byte	0
 1990 00ca 0C       		.uleb128 0xc
 1991 00cb 05       		.uleb128 0x5
 1992 00cc 00       		.byte	0
 1993 00cd 03       		.uleb128 0x3
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 58


 1994 00ce 0E       		.uleb128 0xe
 1995 00cf 3A       		.uleb128 0x3a
 1996 00d0 0B       		.uleb128 0xb
 1997 00d1 3B       		.uleb128 0x3b
 1998 00d2 05       		.uleb128 0x5
 1999 00d3 49       		.uleb128 0x49
 2000 00d4 13       		.uleb128 0x13
 2001 00d5 02       		.uleb128 0x2
 2002 00d6 0A       		.uleb128 0xa
 2003 00d7 00       		.byte	0
 2004 00d8 00       		.byte	0
 2005 00d9 0D       		.uleb128 0xd
 2006 00da 2E       		.uleb128 0x2e
 2007 00db 01       		.byte	0x1
 2008 00dc 3F       		.uleb128 0x3f
 2009 00dd 0C       		.uleb128 0xc
 2010 00de 03       		.uleb128 0x3
 2011 00df 0E       		.uleb128 0xe
 2012 00e0 3A       		.uleb128 0x3a
 2013 00e1 0B       		.uleb128 0xb
 2014 00e2 3B       		.uleb128 0x3b
 2015 00e3 05       		.uleb128 0x5
 2016 00e4 27       		.uleb128 0x27
 2017 00e5 0C       		.uleb128 0xc
 2018 00e6 49       		.uleb128 0x49
 2019 00e7 13       		.uleb128 0x13
 2020 00e8 11       		.uleb128 0x11
 2021 00e9 01       		.uleb128 0x1
 2022 00ea 12       		.uleb128 0x12
 2023 00eb 01       		.uleb128 0x1
 2024 00ec 40       		.uleb128 0x40
 2025 00ed 06       		.uleb128 0x6
 2026 00ee 9742     		.uleb128 0x2117
 2027 00f0 0C       		.uleb128 0xc
 2028 00f1 01       		.uleb128 0x1
 2029 00f2 13       		.uleb128 0x13
 2030 00f3 00       		.byte	0
 2031 00f4 00       		.byte	0
 2032 00f5 0E       		.uleb128 0xe
 2033 00f6 34       		.uleb128 0x34
 2034 00f7 00       		.byte	0
 2035 00f8 03       		.uleb128 0x3
 2036 00f9 0E       		.uleb128 0xe
 2037 00fa 3A       		.uleb128 0x3a
 2038 00fb 0B       		.uleb128 0xb
 2039 00fc 3B       		.uleb128 0x3b
 2040 00fd 05       		.uleb128 0x5
 2041 00fe 49       		.uleb128 0x49
 2042 00ff 13       		.uleb128 0x13
 2043 0100 02       		.uleb128 0x2
 2044 0101 0A       		.uleb128 0xa
 2045 0102 00       		.byte	0
 2046 0103 00       		.byte	0
 2047 0104 0F       		.uleb128 0xf
 2048 0105 2E       		.uleb128 0x2e
 2049 0106 01       		.byte	0x1
 2050 0107 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 59


 2051 0108 0C       		.uleb128 0xc
 2052 0109 03       		.uleb128 0x3
 2053 010a 0E       		.uleb128 0xe
 2054 010b 3A       		.uleb128 0x3a
 2055 010c 0B       		.uleb128 0xb
 2056 010d 3B       		.uleb128 0x3b
 2057 010e 05       		.uleb128 0x5
 2058 010f 27       		.uleb128 0x27
 2059 0110 0C       		.uleb128 0xc
 2060 0111 11       		.uleb128 0x11
 2061 0112 01       		.uleb128 0x1
 2062 0113 12       		.uleb128 0x12
 2063 0114 01       		.uleb128 0x1
 2064 0115 40       		.uleb128 0x40
 2065 0116 06       		.uleb128 0x6
 2066 0117 9642     		.uleb128 0x2116
 2067 0119 0C       		.uleb128 0xc
 2068 011a 01       		.uleb128 0x1
 2069 011b 13       		.uleb128 0x13
 2070 011c 00       		.byte	0
 2071 011d 00       		.byte	0
 2072 011e 10       		.uleb128 0x10
 2073 011f 0F       		.uleb128 0xf
 2074 0120 00       		.byte	0
 2075 0121 0B       		.uleb128 0xb
 2076 0122 0B       		.uleb128 0xb
 2077 0123 49       		.uleb128 0x49
 2078 0124 13       		.uleb128 0x13
 2079 0125 00       		.byte	0
 2080 0126 00       		.byte	0
 2081 0127 11       		.uleb128 0x11
 2082 0128 26       		.uleb128 0x26
 2083 0129 00       		.byte	0
 2084 012a 49       		.uleb128 0x49
 2085 012b 13       		.uleb128 0x13
 2086 012c 00       		.byte	0
 2087 012d 00       		.byte	0
 2088 012e 12       		.uleb128 0x12
 2089 012f 34       		.uleb128 0x34
 2090 0130 00       		.byte	0
 2091 0131 03       		.uleb128 0x3
 2092 0132 0E       		.uleb128 0xe
 2093 0133 3A       		.uleb128 0x3a
 2094 0134 0B       		.uleb128 0xb
 2095 0135 3B       		.uleb128 0x3b
 2096 0136 0B       		.uleb128 0xb
 2097 0137 49       		.uleb128 0x49
 2098 0138 13       		.uleb128 0x13
 2099 0139 3F       		.uleb128 0x3f
 2100 013a 0C       		.uleb128 0xc
 2101 013b 02       		.uleb128 0x2
 2102 013c 0A       		.uleb128 0xa
 2103 013d 00       		.byte	0
 2104 013e 00       		.byte	0
 2105 013f 00       		.byte	0
 2106              		.section	.debug_loc,"",%progbits
 2107              	.Ldebug_loc0:
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 60


 2108              	.LLST0:
 2109 0000 00000000 		.4byte	.LFB0
 2110 0004 02000000 		.4byte	.LCFI0
 2111 0008 0200     		.2byte	0x2
 2112 000a 7D       		.byte	0x7d
 2113 000b 00       		.sleb128 0
 2114 000c 02000000 		.4byte	.LCFI0
 2115 0010 04000000 		.4byte	.LCFI1
 2116 0014 0200     		.2byte	0x2
 2117 0016 7D       		.byte	0x7d
 2118 0017 08       		.sleb128 8
 2119 0018 04000000 		.4byte	.LCFI1
 2120 001c 34000000 		.4byte	.LFE0
 2121 0020 0200     		.2byte	0x2
 2122 0022 77       		.byte	0x77
 2123 0023 08       		.sleb128 8
 2124 0024 00000000 		.4byte	0
 2125 0028 00000000 		.4byte	0
 2126              	.LLST1:
 2127 002c 00000000 		.4byte	.LFB1
 2128 0030 02000000 		.4byte	.LCFI2
 2129 0034 0200     		.2byte	0x2
 2130 0036 7D       		.byte	0x7d
 2131 0037 00       		.sleb128 0
 2132 0038 02000000 		.4byte	.LCFI2
 2133 003c 04000000 		.4byte	.LCFI3
 2134 0040 0200     		.2byte	0x2
 2135 0042 7D       		.byte	0x7d
 2136 0043 0C       		.sleb128 12
 2137 0044 04000000 		.4byte	.LCFI3
 2138 0048 06000000 		.4byte	.LCFI4
 2139 004c 0200     		.2byte	0x2
 2140 004e 7D       		.byte	0x7d
 2141 004f 18       		.sleb128 24
 2142 0050 06000000 		.4byte	.LCFI4
 2143 0054 5C000000 		.4byte	.LFE1
 2144 0058 0200     		.2byte	0x2
 2145 005a 77       		.byte	0x77
 2146 005b 18       		.sleb128 24
 2147 005c 00000000 		.4byte	0
 2148 0060 00000000 		.4byte	0
 2149              	.LLST2:
 2150 0064 00000000 		.4byte	.LFB2
 2151 0068 02000000 		.4byte	.LCFI5
 2152 006c 0200     		.2byte	0x2
 2153 006e 7D       		.byte	0x7d
 2154 006f 00       		.sleb128 0
 2155 0070 02000000 		.4byte	.LCFI5
 2156 0074 04000000 		.4byte	.LCFI6
 2157 0078 0200     		.2byte	0x2
 2158 007a 7D       		.byte	0x7d
 2159 007b 08       		.sleb128 8
 2160 007c 04000000 		.4byte	.LCFI6
 2161 0080 24000000 		.4byte	.LFE2
 2162 0084 0200     		.2byte	0x2
 2163 0086 77       		.byte	0x77
 2164 0087 08       		.sleb128 8
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 61


 2165 0088 00000000 		.4byte	0
 2166 008c 00000000 		.4byte	0
 2167              	.LLST3:
 2168 0090 00000000 		.4byte	.LFB3
 2169 0094 02000000 		.4byte	.LCFI7
 2170 0098 0200     		.2byte	0x2
 2171 009a 7D       		.byte	0x7d
 2172 009b 00       		.sleb128 0
 2173 009c 02000000 		.4byte	.LCFI7
 2174 00a0 04000000 		.4byte	.LCFI8
 2175 00a4 0200     		.2byte	0x2
 2176 00a6 7D       		.byte	0x7d
 2177 00a7 0C       		.sleb128 12
 2178 00a8 04000000 		.4byte	.LCFI8
 2179 00ac 06000000 		.4byte	.LCFI9
 2180 00b0 0200     		.2byte	0x2
 2181 00b2 7D       		.byte	0x7d
 2182 00b3 18       		.sleb128 24
 2183 00b4 06000000 		.4byte	.LCFI9
 2184 00b8 48000000 		.4byte	.LFE3
 2185 00bc 0200     		.2byte	0x2
 2186 00be 77       		.byte	0x77
 2187 00bf 18       		.sleb128 24
 2188 00c0 00000000 		.4byte	0
 2189 00c4 00000000 		.4byte	0
 2190              	.LLST4:
 2191 00c8 00000000 		.4byte	.LFB4
 2192 00cc 02000000 		.4byte	.LCFI10
 2193 00d0 0200     		.2byte	0x2
 2194 00d2 7D       		.byte	0x7d
 2195 00d3 00       		.sleb128 0
 2196 00d4 02000000 		.4byte	.LCFI10
 2197 00d8 04000000 		.4byte	.LCFI11
 2198 00dc 0200     		.2byte	0x2
 2199 00de 7D       		.byte	0x7d
 2200 00df 08       		.sleb128 8
 2201 00e0 04000000 		.4byte	.LCFI11
 2202 00e4 08000000 		.4byte	.LFE4
 2203 00e8 0200     		.2byte	0x2
 2204 00ea 77       		.byte	0x77
 2205 00eb 08       		.sleb128 8
 2206 00ec 00000000 		.4byte	0
 2207 00f0 00000000 		.4byte	0
 2208              	.LLST5:
 2209 00f4 00000000 		.4byte	.LFB5
 2210 00f8 02000000 		.4byte	.LCFI12
 2211 00fc 0200     		.2byte	0x2
 2212 00fe 7D       		.byte	0x7d
 2213 00ff 00       		.sleb128 0
 2214 0100 02000000 		.4byte	.LCFI12
 2215 0104 04000000 		.4byte	.LCFI13
 2216 0108 0200     		.2byte	0x2
 2217 010a 7D       		.byte	0x7d
 2218 010b 08       		.sleb128 8
 2219 010c 04000000 		.4byte	.LCFI13
 2220 0110 08000000 		.4byte	.LFE5
 2221 0114 0200     		.2byte	0x2
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 62


 2222 0116 77       		.byte	0x77
 2223 0117 08       		.sleb128 8
 2224 0118 00000000 		.4byte	0
 2225 011c 00000000 		.4byte	0
 2226              	.LLST6:
 2227 0120 00000000 		.4byte	.LFB6
 2228 0124 02000000 		.4byte	.LCFI14
 2229 0128 0200     		.2byte	0x2
 2230 012a 7D       		.byte	0x7d
 2231 012b 00       		.sleb128 0
 2232 012c 02000000 		.4byte	.LCFI14
 2233 0130 04000000 		.4byte	.LCFI15
 2234 0134 0200     		.2byte	0x2
 2235 0136 7D       		.byte	0x7d
 2236 0137 08       		.sleb128 8
 2237 0138 04000000 		.4byte	.LCFI15
 2238 013c 08000000 		.4byte	.LFE6
 2239 0140 0200     		.2byte	0x2
 2240 0142 77       		.byte	0x77
 2241 0143 08       		.sleb128 8
 2242 0144 00000000 		.4byte	0
 2243 0148 00000000 		.4byte	0
 2244              	.LLST7:
 2245 014c 00000000 		.4byte	.LFB7
 2246 0150 02000000 		.4byte	.LCFI16
 2247 0154 0200     		.2byte	0x2
 2248 0156 7D       		.byte	0x7d
 2249 0157 00       		.sleb128 0
 2250 0158 02000000 		.4byte	.LCFI16
 2251 015c 04000000 		.4byte	.LCFI17
 2252 0160 0200     		.2byte	0x2
 2253 0162 7D       		.byte	0x7d
 2254 0163 08       		.sleb128 8
 2255 0164 04000000 		.4byte	.LCFI17
 2256 0168 08000000 		.4byte	.LFE7
 2257 016c 0200     		.2byte	0x2
 2258 016e 77       		.byte	0x77
 2259 016f 08       		.sleb128 8
 2260 0170 00000000 		.4byte	0
 2261 0174 00000000 		.4byte	0
 2262              	.LLST8:
 2263 0178 00000000 		.4byte	.LFB8
 2264 017c 02000000 		.4byte	.LCFI18
 2265 0180 0200     		.2byte	0x2
 2266 0182 7D       		.byte	0x7d
 2267 0183 00       		.sleb128 0
 2268 0184 02000000 		.4byte	.LCFI18
 2269 0188 04000000 		.4byte	.LCFI19
 2270 018c 0200     		.2byte	0x2
 2271 018e 7D       		.byte	0x7d
 2272 018f 08       		.sleb128 8
 2273 0190 04000000 		.4byte	.LCFI19
 2274 0194 06000000 		.4byte	.LCFI20
 2275 0198 0200     		.2byte	0x2
 2276 019a 7D       		.byte	0x7d
 2277 019b 10       		.sleb128 16
 2278 019c 06000000 		.4byte	.LCFI20
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 63


 2279 01a0 20000000 		.4byte	.LFE8
 2280 01a4 0200     		.2byte	0x2
 2281 01a6 77       		.byte	0x77
 2282 01a7 10       		.sleb128 16
 2283 01a8 00000000 		.4byte	0
 2284 01ac 00000000 		.4byte	0
 2285              	.LLST9:
 2286 01b0 00000000 		.4byte	.LFB9
 2287 01b4 02000000 		.4byte	.LCFI21
 2288 01b8 0200     		.2byte	0x2
 2289 01ba 7D       		.byte	0x7d
 2290 01bb 00       		.sleb128 0
 2291 01bc 02000000 		.4byte	.LCFI21
 2292 01c0 04000000 		.4byte	.LCFI22
 2293 01c4 0200     		.2byte	0x2
 2294 01c6 7D       		.byte	0x7d
 2295 01c7 08       		.sleb128 8
 2296 01c8 04000000 		.4byte	.LCFI22
 2297 01cc 06000000 		.4byte	.LCFI23
 2298 01d0 0200     		.2byte	0x2
 2299 01d2 7D       		.byte	0x7d
 2300 01d3 10       		.sleb128 16
 2301 01d4 06000000 		.4byte	.LCFI23
 2302 01d8 20000000 		.4byte	.LFE9
 2303 01dc 0200     		.2byte	0x2
 2304 01de 77       		.byte	0x77
 2305 01df 10       		.sleb128 16
 2306 01e0 00000000 		.4byte	0
 2307 01e4 00000000 		.4byte	0
 2308              	.LLST10:
 2309 01e8 00000000 		.4byte	.LFB10
 2310 01ec 02000000 		.4byte	.LCFI24
 2311 01f0 0200     		.2byte	0x2
 2312 01f2 7D       		.byte	0x7d
 2313 01f3 00       		.sleb128 0
 2314 01f4 02000000 		.4byte	.LCFI24
 2315 01f8 04000000 		.4byte	.LCFI25
 2316 01fc 0200     		.2byte	0x2
 2317 01fe 7D       		.byte	0x7d
 2318 01ff 08       		.sleb128 8
 2319 0200 04000000 		.4byte	.LCFI25
 2320 0204 06000000 		.4byte	.LCFI26
 2321 0208 0200     		.2byte	0x2
 2322 020a 7D       		.byte	0x7d
 2323 020b 10       		.sleb128 16
 2324 020c 06000000 		.4byte	.LCFI26
 2325 0210 20000000 		.4byte	.LFE10
 2326 0214 0200     		.2byte	0x2
 2327 0216 77       		.byte	0x77
 2328 0217 10       		.sleb128 16
 2329 0218 00000000 		.4byte	0
 2330 021c 00000000 		.4byte	0
 2331              	.LLST11:
 2332 0220 00000000 		.4byte	.LFB11
 2333 0224 02000000 		.4byte	.LCFI27
 2334 0228 0200     		.2byte	0x2
 2335 022a 7D       		.byte	0x7d
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 64


 2336 022b 00       		.sleb128 0
 2337 022c 02000000 		.4byte	.LCFI27
 2338 0230 04000000 		.4byte	.LCFI28
 2339 0234 0200     		.2byte	0x2
 2340 0236 7D       		.byte	0x7d
 2341 0237 08       		.sleb128 8
 2342 0238 04000000 		.4byte	.LCFI28
 2343 023c 06000000 		.4byte	.LCFI29
 2344 0240 0200     		.2byte	0x2
 2345 0242 7D       		.byte	0x7d
 2346 0243 10       		.sleb128 16
 2347 0244 06000000 		.4byte	.LCFI29
 2348 0248 20000000 		.4byte	.LFE11
 2349 024c 0200     		.2byte	0x2
 2350 024e 77       		.byte	0x77
 2351 024f 10       		.sleb128 16
 2352 0250 00000000 		.4byte	0
 2353 0254 00000000 		.4byte	0
 2354              	.LLST12:
 2355 0258 00000000 		.4byte	.LFB12
 2356 025c 02000000 		.4byte	.LCFI30
 2357 0260 0200     		.2byte	0x2
 2358 0262 7D       		.byte	0x7d
 2359 0263 00       		.sleb128 0
 2360 0264 02000000 		.4byte	.LCFI30
 2361 0268 04000000 		.4byte	.LCFI31
 2362 026c 0200     		.2byte	0x2
 2363 026e 7D       		.byte	0x7d
 2364 026f 08       		.sleb128 8
 2365 0270 04000000 		.4byte	.LCFI31
 2366 0274 06000000 		.4byte	.LCFI32
 2367 0278 0200     		.2byte	0x2
 2368 027a 7D       		.byte	0x7d
 2369 027b 10       		.sleb128 16
 2370 027c 06000000 		.4byte	.LCFI32
 2371 0280 34000000 		.4byte	.LFE12
 2372 0284 0200     		.2byte	0x2
 2373 0286 77       		.byte	0x77
 2374 0287 10       		.sleb128 16
 2375 0288 00000000 		.4byte	0
 2376 028c 00000000 		.4byte	0
 2377              	.LLST13:
 2378 0290 00000000 		.4byte	.LFB13
 2379 0294 02000000 		.4byte	.LCFI33
 2380 0298 0200     		.2byte	0x2
 2381 029a 7D       		.byte	0x7d
 2382 029b 00       		.sleb128 0
 2383 029c 02000000 		.4byte	.LCFI33
 2384 02a0 04000000 		.4byte	.LCFI34
 2385 02a4 0200     		.2byte	0x2
 2386 02a6 7D       		.byte	0x7d
 2387 02a7 08       		.sleb128 8
 2388 02a8 04000000 		.4byte	.LCFI34
 2389 02ac 06000000 		.4byte	.LCFI35
 2390 02b0 0200     		.2byte	0x2
 2391 02b2 7D       		.byte	0x7d
 2392 02b3 10       		.sleb128 16
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 65


 2393 02b4 06000000 		.4byte	.LCFI35
 2394 02b8 20000000 		.4byte	.LFE13
 2395 02bc 0200     		.2byte	0x2
 2396 02be 77       		.byte	0x77
 2397 02bf 10       		.sleb128 16
 2398 02c0 00000000 		.4byte	0
 2399 02c4 00000000 		.4byte	0
 2400              	.LLST14:
 2401 02c8 00000000 		.4byte	.LFB14
 2402 02cc 02000000 		.4byte	.LCFI36
 2403 02d0 0200     		.2byte	0x2
 2404 02d2 7D       		.byte	0x7d
 2405 02d3 00       		.sleb128 0
 2406 02d4 02000000 		.4byte	.LCFI36
 2407 02d8 04000000 		.4byte	.LCFI37
 2408 02dc 0200     		.2byte	0x2
 2409 02de 7D       		.byte	0x7d
 2410 02df 08       		.sleb128 8
 2411 02e0 04000000 		.4byte	.LCFI37
 2412 02e4 06000000 		.4byte	.LCFI38
 2413 02e8 0200     		.2byte	0x2
 2414 02ea 7D       		.byte	0x7d
 2415 02eb 10       		.sleb128 16
 2416 02ec 06000000 		.4byte	.LCFI38
 2417 02f0 20000000 		.4byte	.LFE14
 2418 02f4 0200     		.2byte	0x2
 2419 02f6 77       		.byte	0x77
 2420 02f7 10       		.sleb128 16
 2421 02f8 00000000 		.4byte	0
 2422 02fc 00000000 		.4byte	0
 2423              	.LLST15:
 2424 0300 00000000 		.4byte	.LFB15
 2425 0304 02000000 		.4byte	.LCFI39
 2426 0308 0200     		.2byte	0x2
 2427 030a 7D       		.byte	0x7d
 2428 030b 00       		.sleb128 0
 2429 030c 02000000 		.4byte	.LCFI39
 2430 0310 04000000 		.4byte	.LCFI40
 2431 0314 0200     		.2byte	0x2
 2432 0316 7D       		.byte	0x7d
 2433 0317 08       		.sleb128 8
 2434 0318 04000000 		.4byte	.LCFI40
 2435 031c 06000000 		.4byte	.LCFI41
 2436 0320 0200     		.2byte	0x2
 2437 0322 7D       		.byte	0x7d
 2438 0323 10       		.sleb128 16
 2439 0324 06000000 		.4byte	.LCFI41
 2440 0328 30000000 		.4byte	.LFE15
 2441 032c 0200     		.2byte	0x2
 2442 032e 77       		.byte	0x77
 2443 032f 10       		.sleb128 16
 2444 0330 00000000 		.4byte	0
 2445 0334 00000000 		.4byte	0
 2446              	.LLST16:
 2447 0338 00000000 		.4byte	.LFB16
 2448 033c 02000000 		.4byte	.LCFI42
 2449 0340 0200     		.2byte	0x2
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 66


 2450 0342 7D       		.byte	0x7d
 2451 0343 00       		.sleb128 0
 2452 0344 02000000 		.4byte	.LCFI42
 2453 0348 04000000 		.4byte	.LCFI43
 2454 034c 0200     		.2byte	0x2
 2455 034e 7D       		.byte	0x7d
 2456 034f 08       		.sleb128 8
 2457 0350 04000000 		.4byte	.LCFI43
 2458 0354 06000000 		.4byte	.LCFI44
 2459 0358 0200     		.2byte	0x2
 2460 035a 7D       		.byte	0x7d
 2461 035b 10       		.sleb128 16
 2462 035c 06000000 		.4byte	.LCFI44
 2463 0360 48000000 		.4byte	.LFE16
 2464 0364 0200     		.2byte	0x2
 2465 0366 77       		.byte	0x77
 2466 0367 10       		.sleb128 16
 2467 0368 00000000 		.4byte	0
 2468 036c 00000000 		.4byte	0
 2469              	.LLST17:
 2470 0370 00000000 		.4byte	.LFB17
 2471 0374 02000000 		.4byte	.LCFI45
 2472 0378 0200     		.2byte	0x2
 2473 037a 7D       		.byte	0x7d
 2474 037b 00       		.sleb128 0
 2475 037c 02000000 		.4byte	.LCFI45
 2476 0380 04000000 		.4byte	.LCFI46
 2477 0384 0200     		.2byte	0x2
 2478 0386 7D       		.byte	0x7d
 2479 0387 08       		.sleb128 8
 2480 0388 04000000 		.4byte	.LCFI46
 2481 038c 24000000 		.4byte	.LFE17
 2482 0390 0200     		.2byte	0x2
 2483 0392 77       		.byte	0x77
 2484 0393 08       		.sleb128 8
 2485 0394 00000000 		.4byte	0
 2486 0398 00000000 		.4byte	0
 2487              	.LLST18:
 2488 039c 00000000 		.4byte	.LFB18
 2489 03a0 02000000 		.4byte	.LCFI47
 2490 03a4 0200     		.2byte	0x2
 2491 03a6 7D       		.byte	0x7d
 2492 03a7 00       		.sleb128 0
 2493 03a8 02000000 		.4byte	.LCFI47
 2494 03ac 04000000 		.4byte	.LCFI48
 2495 03b0 0200     		.2byte	0x2
 2496 03b2 7D       		.byte	0x7d
 2497 03b3 0C       		.sleb128 12
 2498 03b4 04000000 		.4byte	.LCFI48
 2499 03b8 06000000 		.4byte	.LCFI49
 2500 03bc 0200     		.2byte	0x2
 2501 03be 7D       		.byte	0x7d
 2502 03bf 18       		.sleb128 24
 2503 03c0 06000000 		.4byte	.LCFI49
 2504 03c4 68000000 		.4byte	.LFE18
 2505 03c8 0200     		.2byte	0x2
 2506 03ca 77       		.byte	0x77
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 67


 2507 03cb 18       		.sleb128 24
 2508 03cc 00000000 		.4byte	0
 2509 03d0 00000000 		.4byte	0
 2510              	.LLST19:
 2511 03d4 00000000 		.4byte	.LFB19
 2512 03d8 02000000 		.4byte	.LCFI50
 2513 03dc 0200     		.2byte	0x2
 2514 03de 7D       		.byte	0x7d
 2515 03df 00       		.sleb128 0
 2516 03e0 02000000 		.4byte	.LCFI50
 2517 03e4 04000000 		.4byte	.LCFI51
 2518 03e8 0200     		.2byte	0x2
 2519 03ea 7D       		.byte	0x7d
 2520 03eb 08       		.sleb128 8
 2521 03ec 04000000 		.4byte	.LCFI51
 2522 03f0 06000000 		.4byte	.LCFI52
 2523 03f4 0200     		.2byte	0x2
 2524 03f6 7D       		.byte	0x7d
 2525 03f7 18       		.sleb128 24
 2526 03f8 06000000 		.4byte	.LCFI52
 2527 03fc 52000000 		.4byte	.LFE19
 2528 0400 0200     		.2byte	0x2
 2529 0402 77       		.byte	0x77
 2530 0403 18       		.sleb128 24
 2531 0404 00000000 		.4byte	0
 2532 0408 00000000 		.4byte	0
 2533              	.LLST20:
 2534 040c 00000000 		.4byte	.LFB20
 2535 0410 02000000 		.4byte	.LCFI53
 2536 0414 0200     		.2byte	0x2
 2537 0416 7D       		.byte	0x7d
 2538 0417 00       		.sleb128 0
 2539 0418 02000000 		.4byte	.LCFI53
 2540 041c 04000000 		.4byte	.LCFI54
 2541 0420 0200     		.2byte	0x2
 2542 0422 7D       		.byte	0x7d
 2543 0423 0C       		.sleb128 12
 2544 0424 04000000 		.4byte	.LCFI54
 2545 0428 06000000 		.4byte	.LCFI55
 2546 042c 0200     		.2byte	0x2
 2547 042e 7D       		.byte	0x7d
 2548 042f 18       		.sleb128 24
 2549 0430 06000000 		.4byte	.LCFI55
 2550 0434 84000000 		.4byte	.LFE20
 2551 0438 0200     		.2byte	0x2
 2552 043a 77       		.byte	0x77
 2553 043b 18       		.sleb128 24
 2554 043c 00000000 		.4byte	0
 2555 0440 00000000 		.4byte	0
 2556              	.LLST21:
 2557 0444 00000000 		.4byte	.LFB21
 2558 0448 02000000 		.4byte	.LCFI56
 2559 044c 0200     		.2byte	0x2
 2560 044e 7D       		.byte	0x7d
 2561 044f 00       		.sleb128 0
 2562 0450 02000000 		.4byte	.LCFI56
 2563 0454 04000000 		.4byte	.LCFI57
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 68


 2564 0458 0200     		.2byte	0x2
 2565 045a 7D       		.byte	0x7d
 2566 045b 08       		.sleb128 8
 2567 045c 04000000 		.4byte	.LCFI57
 2568 0460 08000000 		.4byte	.LFE21
 2569 0464 0200     		.2byte	0x2
 2570 0466 77       		.byte	0x77
 2571 0467 08       		.sleb128 8
 2572 0468 00000000 		.4byte	0
 2573 046c 00000000 		.4byte	0
 2574              	.LLST22:
 2575 0470 00000000 		.4byte	.LFB22
 2576 0474 02000000 		.4byte	.LCFI58
 2577 0478 0200     		.2byte	0x2
 2578 047a 7D       		.byte	0x7d
 2579 047b 00       		.sleb128 0
 2580 047c 02000000 		.4byte	.LCFI58
 2581 0480 04000000 		.4byte	.LCFI59
 2582 0484 0200     		.2byte	0x2
 2583 0486 7D       		.byte	0x7d
 2584 0487 08       		.sleb128 8
 2585 0488 04000000 		.4byte	.LCFI59
 2586 048c 08000000 		.4byte	.LFE22
 2587 0490 0200     		.2byte	0x2
 2588 0492 77       		.byte	0x77
 2589 0493 08       		.sleb128 8
 2590 0494 00000000 		.4byte	0
 2591 0498 00000000 		.4byte	0
 2592              	.LLST23:
 2593 049c 00000000 		.4byte	.LFB23
 2594 04a0 02000000 		.4byte	.LCFI60
 2595 04a4 0200     		.2byte	0x2
 2596 04a6 7D       		.byte	0x7d
 2597 04a7 00       		.sleb128 0
 2598 04a8 02000000 		.4byte	.LCFI60
 2599 04ac 04000000 		.4byte	.LCFI61
 2600 04b0 0200     		.2byte	0x2
 2601 04b2 7D       		.byte	0x7d
 2602 04b3 08       		.sleb128 8
 2603 04b4 04000000 		.4byte	.LCFI61
 2604 04b8 06000000 		.4byte	.LCFI62
 2605 04bc 0200     		.2byte	0x2
 2606 04be 7D       		.byte	0x7d
 2607 04bf 10       		.sleb128 16
 2608 04c0 06000000 		.4byte	.LCFI62
 2609 04c4 2C000000 		.4byte	.LFE23
 2610 04c8 0200     		.2byte	0x2
 2611 04ca 77       		.byte	0x77
 2612 04cb 10       		.sleb128 16
 2613 04cc 00000000 		.4byte	0
 2614 04d0 00000000 		.4byte	0
 2615              	.LLST24:
 2616 04d4 00000000 		.4byte	.LFB24
 2617 04d8 02000000 		.4byte	.LCFI63
 2618 04dc 0200     		.2byte	0x2
 2619 04de 7D       		.byte	0x7d
 2620 04df 00       		.sleb128 0
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 69


 2621 04e0 02000000 		.4byte	.LCFI63
 2622 04e4 04000000 		.4byte	.LCFI64
 2623 04e8 0200     		.2byte	0x2
 2624 04ea 7D       		.byte	0x7d
 2625 04eb 08       		.sleb128 8
 2626 04ec 04000000 		.4byte	.LCFI64
 2627 04f0 06000000 		.4byte	.LCFI65
 2628 04f4 0200     		.2byte	0x2
 2629 04f6 7D       		.byte	0x7d
 2630 04f7 10       		.sleb128 16
 2631 04f8 06000000 		.4byte	.LCFI65
 2632 04fc 38000000 		.4byte	.LFE24
 2633 0500 0200     		.2byte	0x2
 2634 0502 77       		.byte	0x77
 2635 0503 10       		.sleb128 16
 2636 0504 00000000 		.4byte	0
 2637 0508 00000000 		.4byte	0
 2638              		.section	.debug_aranges,"",%progbits
 2639 0000 DC000000 		.4byte	0xdc
 2640 0004 0200     		.2byte	0x2
 2641 0006 00000000 		.4byte	.Ldebug_info0
 2642 000a 04       		.byte	0x4
 2643 000b 00       		.byte	0
 2644 000c 0000     		.2byte	0
 2645 000e 0000     		.2byte	0
 2646 0010 00000000 		.4byte	.LFB0
 2647 0014 34000000 		.4byte	.LFE0-.LFB0
 2648 0018 00000000 		.4byte	.LFB1
 2649 001c 5C000000 		.4byte	.LFE1-.LFB1
 2650 0020 00000000 		.4byte	.LFB2
 2651 0024 24000000 		.4byte	.LFE2-.LFB2
 2652 0028 00000000 		.4byte	.LFB3
 2653 002c 48000000 		.4byte	.LFE3-.LFB3
 2654 0030 00000000 		.4byte	.LFB4
 2655 0034 08000000 		.4byte	.LFE4-.LFB4
 2656 0038 00000000 		.4byte	.LFB5
 2657 003c 08000000 		.4byte	.LFE5-.LFB5
 2658 0040 00000000 		.4byte	.LFB6
 2659 0044 08000000 		.4byte	.LFE6-.LFB6
 2660 0048 00000000 		.4byte	.LFB7
 2661 004c 08000000 		.4byte	.LFE7-.LFB7
 2662 0050 00000000 		.4byte	.LFB8
 2663 0054 20000000 		.4byte	.LFE8-.LFB8
 2664 0058 00000000 		.4byte	.LFB9
 2665 005c 20000000 		.4byte	.LFE9-.LFB9
 2666 0060 00000000 		.4byte	.LFB10
 2667 0064 20000000 		.4byte	.LFE10-.LFB10
 2668 0068 00000000 		.4byte	.LFB11
 2669 006c 20000000 		.4byte	.LFE11-.LFB11
 2670 0070 00000000 		.4byte	.LFB12
 2671 0074 34000000 		.4byte	.LFE12-.LFB12
 2672 0078 00000000 		.4byte	.LFB13
 2673 007c 20000000 		.4byte	.LFE13-.LFB13
 2674 0080 00000000 		.4byte	.LFB14
 2675 0084 20000000 		.4byte	.LFE14-.LFB14
 2676 0088 00000000 		.4byte	.LFB15
 2677 008c 30000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 70


 2678 0090 00000000 		.4byte	.LFB16
 2679 0094 48000000 		.4byte	.LFE16-.LFB16
 2680 0098 00000000 		.4byte	.LFB17
 2681 009c 24000000 		.4byte	.LFE17-.LFB17
 2682 00a0 00000000 		.4byte	.LFB18
 2683 00a4 68000000 		.4byte	.LFE18-.LFB18
 2684 00a8 00000000 		.4byte	.LFB19
 2685 00ac 52000000 		.4byte	.LFE19-.LFB19
 2686 00b0 00000000 		.4byte	.LFB20
 2687 00b4 84000000 		.4byte	.LFE20-.LFB20
 2688 00b8 00000000 		.4byte	.LFB21
 2689 00bc 08000000 		.4byte	.LFE21-.LFB21
 2690 00c0 00000000 		.4byte	.LFB22
 2691 00c4 08000000 		.4byte	.LFE22-.LFB22
 2692 00c8 00000000 		.4byte	.LFB23
 2693 00cc 2C000000 		.4byte	.LFE23-.LFB23
 2694 00d0 00000000 		.4byte	.LFB24
 2695 00d4 38000000 		.4byte	.LFE24-.LFB24
 2696 00d8 00000000 		.4byte	0
 2697 00dc 00000000 		.4byte	0
 2698              		.section	.debug_ranges,"",%progbits
 2699              	.Ldebug_ranges0:
 2700 0000 00000000 		.4byte	.LFB0
 2701 0004 34000000 		.4byte	.LFE0
 2702 0008 00000000 		.4byte	.LFB1
 2703 000c 5C000000 		.4byte	.LFE1
 2704 0010 00000000 		.4byte	.LFB2
 2705 0014 24000000 		.4byte	.LFE2
 2706 0018 00000000 		.4byte	.LFB3
 2707 001c 48000000 		.4byte	.LFE3
 2708 0020 00000000 		.4byte	.LFB4
 2709 0024 08000000 		.4byte	.LFE4
 2710 0028 00000000 		.4byte	.LFB5
 2711 002c 08000000 		.4byte	.LFE5
 2712 0030 00000000 		.4byte	.LFB6
 2713 0034 08000000 		.4byte	.LFE6
 2714 0038 00000000 		.4byte	.LFB7
 2715 003c 08000000 		.4byte	.LFE7
 2716 0040 00000000 		.4byte	.LFB8
 2717 0044 20000000 		.4byte	.LFE8
 2718 0048 00000000 		.4byte	.LFB9
 2719 004c 20000000 		.4byte	.LFE9
 2720 0050 00000000 		.4byte	.LFB10
 2721 0054 20000000 		.4byte	.LFE10
 2722 0058 00000000 		.4byte	.LFB11
 2723 005c 20000000 		.4byte	.LFE11
 2724 0060 00000000 		.4byte	.LFB12
 2725 0064 34000000 		.4byte	.LFE12
 2726 0068 00000000 		.4byte	.LFB13
 2727 006c 20000000 		.4byte	.LFE13
 2728 0070 00000000 		.4byte	.LFB14
 2729 0074 20000000 		.4byte	.LFE14
 2730 0078 00000000 		.4byte	.LFB15
 2731 007c 30000000 		.4byte	.LFE15
 2732 0080 00000000 		.4byte	.LFB16
 2733 0084 48000000 		.4byte	.LFE16
 2734 0088 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 71


 2735 008c 24000000 		.4byte	.LFE17
 2736 0090 00000000 		.4byte	.LFB18
 2737 0094 68000000 		.4byte	.LFE18
 2738 0098 00000000 		.4byte	.LFB19
 2739 009c 52000000 		.4byte	.LFE19
 2740 00a0 00000000 		.4byte	.LFB20
 2741 00a4 84000000 		.4byte	.LFE20
 2742 00a8 00000000 		.4byte	.LFB21
 2743 00ac 08000000 		.4byte	.LFE21
 2744 00b0 00000000 		.4byte	.LFB22
 2745 00b4 08000000 		.4byte	.LFE22
 2746 00b8 00000000 		.4byte	.LFB23
 2747 00bc 2C000000 		.4byte	.LFE23
 2748 00c0 00000000 		.4byte	.LFB24
 2749 00c4 38000000 		.4byte	.LFE24
 2750 00c8 00000000 		.4byte	0
 2751 00cc 00000000 		.4byte	0
 2752              		.section	.debug_line,"",%progbits
 2753              	.Ldebug_line0:
 2754 0000 84020000 		.section	.debug_str,"MS",%progbits,1
 2754      02004800 
 2754      00000201 
 2754      FB0E0D00 
 2754      01010101 
 2755              	.LASF6:
 2756 0000 6C6F6E67 		.ascii	"long long int\000"
 2756      206C6F6E 
 2756      6720696E 
 2756      7400
 2757              	.LASF18:
 2758 000e 436F6D5F 		.ascii	"Com_Block_Start\000"
 2758      426C6F63 
 2758      6B5F5374 
 2758      61727400 
 2759              	.LASF44:
 2760 001e 62756666 		.ascii	"buffer\000"
 2760      657200
 2761              	.LASF48:
 2762 0025 436F6D5F 		.ascii	"Com_Block_EnableInt\000"
 2762      426C6F63 
 2762      6B5F456E 
 2762      61626C65 
 2762      496E7400 
 2763              	.LASF19:
 2764 0039 436F6D5F 		.ascii	"Com_Block_Enable\000"
 2764      426C6F63 
 2764      6B5F456E 
 2764      61626C65 
 2764      00
 2765              	.LASF40:
 2766 004a 436F6D5F 		.ascii	"Com_Block_GetTxBufferSize\000"
 2766      426C6F63 
 2766      6B5F4765 
 2766      74547842 
 2766      75666665 
 2767              	.LASF3:
 2768 0064 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 72


 2768      7420756E 
 2768      7369676E 
 2768      65642069 
 2768      6E7400
 2769              	.LASF52:
 2770 0077 436F6D5F 		.ascii	"Com_Block_initVar\000"
 2770      426C6F63 
 2770      6B5F696E 
 2770      69745661 
 2770      7200
 2771              	.LASF37:
 2772 0089 72784461 		.ascii	"rxData\000"
 2772      746100
 2773              	.LASF11:
 2774 0090 666C6F61 		.ascii	"float\000"
 2774      7400
 2775              	.LASF36:
 2776 0096 436F6D5F 		.ascii	"Com_Block_ReadRxData\000"
 2776      426C6F63 
 2776      6B5F5265 
 2776      61645278 
 2776      44617461 
 2777              	.LASF42:
 2778 00ab 436F6D5F 		.ascii	"Com_Block_ClearTxBuffer\000"
 2778      426C6F63 
 2778      6B5F436C 
 2778      65617254 
 2778      78427566 
 2779              	.LASF23:
 2780 00c3 436F6D5F 		.ascii	"Com_Block_EnableRxInt\000"
 2780      426C6F63 
 2780      6B5F456E 
 2780      61626C65 
 2780      5278496E 
 2781              	.LASF39:
 2782 00d9 73697A65 		.ascii	"size\000"
 2782      00
 2783              	.LASF54:
 2784 00de 436F6D5F 		.ascii	"Com_Block_swStatusRx\000"
 2784      426C6F63 
 2784      6B5F7377 
 2784      53746174 
 2784      75735278 
 2785              	.LASF25:
 2786 00f3 436F6D5F 		.ascii	"Com_Block_DisableRxInt\000"
 2786      426C6F63 
 2786      6B5F4469 
 2786      7361626C 
 2786      65527849 
 2787              	.LASF50:
 2788 010a 436F6D5F 		.ascii	"Com_Block_SetInterruptMode\000"
 2788      426C6F63 
 2788      6B5F5365 
 2788      74496E74 
 2788      65727275 
 2789              	.LASF5:
 2790 0125 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 73


 2790      20756E73 
 2790      69676E65 
 2790      6420696E 
 2790      7400
 2791              	.LASF47:
 2792 0137 436F6D5F 		.ascii	"Com_Block_ClearFIFO\000"
 2792      426C6F63 
 2792      6B5F436C 
 2792      65617246 
 2792      49464F00 
 2793              	.LASF9:
 2794 014b 75696E74 		.ascii	"uint8\000"
 2794      3800
 2795              	.LASF53:
 2796 0151 436F6D5F 		.ascii	"Com_Block_swStatusTx\000"
 2796      426C6F63 
 2796      6B5F7377 
 2796      53746174 
 2796      75735478 
 2797              	.LASF30:
 2798 0166 436F6D5F 		.ascii	"Com_Block_ReadTxStatus\000"
 2798      426C6F63 
 2798      6B5F5265 
 2798      61645478 
 2798      53746174 
 2799              	.LASF21:
 2800 017d 656E6162 		.ascii	"enableInterrupts\000"
 2800      6C65496E 
 2800      74657272 
 2800      75707473 
 2800      00
 2801              	.LASF26:
 2802 018e 436F6D5F 		.ascii	"Com_Block_SetTxInterruptMode\000"
 2802      426C6F63 
 2802      6B5F5365 
 2802      74547849 
 2802      6E746572 
 2803              	.LASF1:
 2804 01ab 756E7369 		.ascii	"unsigned char\000"
 2804      676E6564 
 2804      20636861 
 2804      7200
 2805              	.LASF27:
 2806 01b9 436F6D5F 		.ascii	"Com_Block_SetRxInterruptMode\000"
 2806      426C6F63 
 2806      6B5F5365 
 2806      74527849 
 2806      6E746572 
 2807              	.LASF12:
 2808 01d6 646F7562 		.ascii	"double\000"
 2808      6C6500
 2809              	.LASF32:
 2810 01dd 436F6D5F 		.ascii	"Com_Block_WriteTxData\000"
 2810      426C6F63 
 2810      6B5F5772 
 2810      69746554 
 2810      78446174 
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 74


 2811              	.LASF28:
 2812 01f3 696E7453 		.ascii	"intSrc\000"
 2812      726300
 2813              	.LASF10:
 2814 01fa 75696E74 		.ascii	"uint16\000"
 2814      313600
 2815              	.LASF17:
 2816 0201 436F6D5F 		.ascii	"Com_Block_Init\000"
 2816      426C6F63 
 2816      6B5F496E 
 2816      697400
 2817              	.LASF38:
 2818 0210 436F6D5F 		.ascii	"Com_Block_GetRxBufferSize\000"
 2818      426C6F63 
 2818      6B5F4765 
 2818      74527842 
 2818      75666665 
 2819              	.LASF8:
 2820 022a 756E7369 		.ascii	"unsigned int\000"
 2820      676E6564 
 2820      20696E74 
 2820      00
 2821              	.LASF7:
 2822 0237 6C6F6E67 		.ascii	"long long unsigned int\000"
 2822      206C6F6E 
 2822      6720756E 
 2822      7369676E 
 2822      65642069 
 2823              	.LASF45:
 2824 024e 62797465 		.ascii	"byteCount\000"
 2824      436F756E 
 2824      7400
 2825              	.LASF41:
 2826 0258 436F6D5F 		.ascii	"Com_Block_ClearRxBuffer\000"
 2826      426C6F63 
 2826      6B5F436C 
 2826      65617252 
 2826      78427566 
 2827              	.LASF56:
 2828 0270 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\Com_Block.c\000"
 2828      6E657261 
 2828      7465645F 
 2828      536F7572 
 2828      63655C50 
 2829              	.LASF46:
 2830 0295 62756649 		.ascii	"bufIndex\000"
 2830      6E646578 
 2830      00
 2831              	.LASF33:
 2832 029e 74784461 		.ascii	"txData\000"
 2832      746100
 2833              	.LASF14:
 2834 02a5 72656738 		.ascii	"reg8\000"
 2834      00
 2835              	.LASF16:
 2836 02aa 73697A65 		.ascii	"sizetype\000"
 2836      74797065 
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 75


 2836      00
 2837              	.LASF57:
 2838 02b3 433A5C55 		.ascii	"C:\\Users\\Trenton\\Desktop\\School Stuff\\Junior Y"
 2838      73657273 
 2838      5C547265 
 2838      6E746F6E 
 2838      5C446573 
 2839 02e1 65617220 		.ascii	"ear (2013-2014)\\Spring 2014\\Microcontrollers\\Dua"
 2839      28323031 
 2839      332D3230 
 2839      3134295C 
 2839      53707269 
 2840 0311 6C5F5374 		.ascii	"l_Starblast.cydsn\000"
 2840      6172626C 
 2840      6173742E 
 2840      63796473 
 2840      6E00
 2841              	.LASF35:
 2842 0323 74784461 		.ascii	"txDataByte\000"
 2842      74614279 
 2842      746500
 2843              	.LASF13:
 2844 032e 63686172 		.ascii	"char\000"
 2844      00
 2845              	.LASF31:
 2846 0333 436F6D5F 		.ascii	"Com_Block_ReadRxStatus\000"
 2846      426C6F63 
 2846      6B5F5265 
 2846      61645278 
 2846      53746174 
 2847              	.LASF22:
 2848 034a 436F6D5F 		.ascii	"Com_Block_EnableTxInt\000"
 2848      426C6F63 
 2848      6B5F456E 
 2848      61626C65 
 2848      5478496E 
 2849              	.LASF2:
 2850 0360 73686F72 		.ascii	"short int\000"
 2850      7420696E 
 2850      7400
 2851              	.LASF15:
 2852 036a 72656731 		.ascii	"reg16\000"
 2852      3600
 2853              	.LASF24:
 2854 0370 436F6D5F 		.ascii	"Com_Block_DisableTxInt\000"
 2854      426C6F63 
 2854      6B5F4469 
 2854      7361626C 
 2854      65547849 
 2855              	.LASF55:
 2856 0387 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 2856      4320342E 
 2856      372E3320 
 2856      32303133 
 2856      30333132 
 2857 03ba 616E6368 		.ascii	"anch revision 196615]\000"
 2857      20726576 
ARM GAS  C:\Users\Trenton\AppData\Local\Temp\ccHv5JYg.s 			page 76


 2857      6973696F 
 2857      6E203139 
 2857      36363135 
 2858              	.LASF20:
 2859 03d0 436F6D5F 		.ascii	"Com_Block_Stop\000"
 2859      426C6F63 
 2859      6B5F5374 
 2859      6F7000
 2860              	.LASF4:
 2861 03df 6C6F6E67 		.ascii	"long int\000"
 2861      20696E74 
 2861      00
 2862              	.LASF29:
 2863 03e8 746D7053 		.ascii	"tmpStatus\000"
 2863      74617475 
 2863      7300
 2864              	.LASF43:
 2865 03f2 436F6D5F 		.ascii	"Com_Block_PutArray\000"
 2865      426C6F63 
 2865      6B5F5075 
 2865      74417272 
 2865      617900
 2866              	.LASF0:
 2867 0405 7369676E 		.ascii	"signed char\000"
 2867      65642063 
 2867      68617200 
 2868              	.LASF34:
 2869 0411 436F6D5F 		.ascii	"Com_Block_WriteTxDataZero\000"
 2869      426C6F63 
 2869      6B5F5772 
 2869      69746554 
 2869      78446174 
 2870              	.LASF49:
 2871 042b 436F6D5F 		.ascii	"Com_Block_DisableInt\000"
 2871      426C6F63 
 2871      6B5F4469 
 2871      7361626C 
 2871      65496E74 
 2872              	.LASF51:
 2873 0440 436F6D5F 		.ascii	"Com_Block_ReadStatus\000"
 2873      426C6F63 
 2873      6B5F5265 
 2873      61645374 
 2873      61747573 
 2874              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
